
services:
  api:
    build:
      context: ./src
      dockerfile: Dockerfile.dev
    container_name: project_api_dev
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5000
      DATABASE_CONNECTION_STRING: ${DATABASE_CONNECTION_STRING}
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    ports:
      - "5000:5000"
    volumes:
      - ./:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"] 
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  docs:
    build:
      context: ./docs
      dockerfile: Dockerfile
    container_name: project_docs_dev
    ports:
      - "5001:80"
    volumes:
      - ./docs/_site:/usr/share/nginx/html:ro
    restart: unless-stopped
    depends_on:
      api:
        condition: service_healthy
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d database"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data: