### YamlMime:XRefMap
sorted: true
references:
- uid: Project.Application.Users
  name: Project.Application.Users
  href: api/Project.Application.Users.html
  commentId: N:Project.Application.Users
  fullName: Project.Application.Users
  nameWithType: Project.Application.Users
- uid: Project.Application.Users.IUserRepository
  name: IUserRepository
  href: api/Project.Application.Users.IUserRepository.html
  commentId: T:Project.Application.Users.IUserRepository
  fullName: Project.Application.Users.IUserRepository
  nameWithType: IUserRepository
- uid: Project.Application.Users.IUserRepository.CheckPassowrd(Project.Domain.Users.User,System.String)
  name: CheckPassowrd(User, string)
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_CheckPassowrd_Project_Domain_Users_User_System_String_
  commentId: M:Project.Application.Users.IUserRepository.CheckPassowrd(Project.Domain.Users.User,System.String)
  name.vb: CheckPassowrd(User, String)
  fullName: Project.Application.Users.IUserRepository.CheckPassowrd(Project.Domain.Users.User, string)
  fullName.vb: Project.Application.Users.IUserRepository.CheckPassowrd(Project.Domain.Users.User, String)
  nameWithType: IUserRepository.CheckPassowrd(User, string)
  nameWithType.vb: IUserRepository.CheckPassowrd(User, String)
- uid: Project.Application.Users.IUserRepository.CheckPassowrd*
  name: CheckPassowrd
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_CheckPassowrd_
  commentId: Overload:Project.Application.Users.IUserRepository.CheckPassowrd
  isSpec: "True"
  fullName: Project.Application.Users.IUserRepository.CheckPassowrd
  nameWithType: IUserRepository.CheckPassowrd
- uid: Project.Application.Users.IUserRepository.CreateAsync(Project.Domain.Users.User,System.String)
  name: CreateAsync(User, string)
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_CreateAsync_Project_Domain_Users_User_System_String_
  commentId: M:Project.Application.Users.IUserRepository.CreateAsync(Project.Domain.Users.User,System.String)
  name.vb: CreateAsync(User, String)
  fullName: Project.Application.Users.IUserRepository.CreateAsync(Project.Domain.Users.User, string)
  fullName.vb: Project.Application.Users.IUserRepository.CreateAsync(Project.Domain.Users.User, String)
  nameWithType: IUserRepository.CreateAsync(User, string)
  nameWithType.vb: IUserRepository.CreateAsync(User, String)
- uid: Project.Application.Users.IUserRepository.CreateAsync*
  name: CreateAsync
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_CreateAsync_
  commentId: Overload:Project.Application.Users.IUserRepository.CreateAsync
  isSpec: "True"
  fullName: Project.Application.Users.IUserRepository.CreateAsync
  nameWithType: IUserRepository.CreateAsync
- uid: Project.Application.Users.IUserRepository.DeleteAsync(Project.Domain.Users.UserId)
  name: DeleteAsync(UserId)
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_DeleteAsync_Project_Domain_Users_UserId_
  commentId: M:Project.Application.Users.IUserRepository.DeleteAsync(Project.Domain.Users.UserId)
  fullName: Project.Application.Users.IUserRepository.DeleteAsync(Project.Domain.Users.UserId)
  nameWithType: IUserRepository.DeleteAsync(UserId)
- uid: Project.Application.Users.IUserRepository.DeleteAsync*
  name: DeleteAsync
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_DeleteAsync_
  commentId: Overload:Project.Application.Users.IUserRepository.DeleteAsync
  isSpec: "True"
  fullName: Project.Application.Users.IUserRepository.DeleteAsync
  nameWithType: IUserRepository.DeleteAsync
- uid: Project.Application.Users.IUserRepository.GetByEmailAsync(System.String)
  name: GetByEmailAsync(string)
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_GetByEmailAsync_System_String_
  commentId: M:Project.Application.Users.IUserRepository.GetByEmailAsync(System.String)
  name.vb: GetByEmailAsync(String)
  fullName: Project.Application.Users.IUserRepository.GetByEmailAsync(string)
  fullName.vb: Project.Application.Users.IUserRepository.GetByEmailAsync(String)
  nameWithType: IUserRepository.GetByEmailAsync(string)
  nameWithType.vb: IUserRepository.GetByEmailAsync(String)
- uid: Project.Application.Users.IUserRepository.GetByEmailAsync*
  name: GetByEmailAsync
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_GetByEmailAsync_
  commentId: Overload:Project.Application.Users.IUserRepository.GetByEmailAsync
  isSpec: "True"
  fullName: Project.Application.Users.IUserRepository.GetByEmailAsync
  nameWithType: IUserRepository.GetByEmailAsync
- uid: Project.Application.Users.IUserRepository.GetByIdAsync(Project.Domain.Users.UserId)
  name: GetByIdAsync(UserId)
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_GetByIdAsync_Project_Domain_Users_UserId_
  commentId: M:Project.Application.Users.IUserRepository.GetByIdAsync(Project.Domain.Users.UserId)
  fullName: Project.Application.Users.IUserRepository.GetByIdAsync(Project.Domain.Users.UserId)
  nameWithType: IUserRepository.GetByIdAsync(UserId)
- uid: Project.Application.Users.IUserRepository.GetByIdAsync*
  name: GetByIdAsync
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_GetByIdAsync_
  commentId: Overload:Project.Application.Users.IUserRepository.GetByIdAsync
  isSpec: "True"
  fullName: Project.Application.Users.IUserRepository.GetByIdAsync
  nameWithType: IUserRepository.GetByIdAsync
- uid: Project.Application.Users.IUserRepository.GetUserByUsernameAsync(System.String)
  name: GetUserByUsernameAsync(string)
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_GetUserByUsernameAsync_System_String_
  commentId: M:Project.Application.Users.IUserRepository.GetUserByUsernameAsync(System.String)
  name.vb: GetUserByUsernameAsync(String)
  fullName: Project.Application.Users.IUserRepository.GetUserByUsernameAsync(string)
  fullName.vb: Project.Application.Users.IUserRepository.GetUserByUsernameAsync(String)
  nameWithType: IUserRepository.GetUserByUsernameAsync(string)
  nameWithType.vb: IUserRepository.GetUserByUsernameAsync(String)
- uid: Project.Application.Users.IUserRepository.GetUserByUsernameAsync*
  name: GetUserByUsernameAsync
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_GetUserByUsernameAsync_
  commentId: Overload:Project.Application.Users.IUserRepository.GetUserByUsernameAsync
  isSpec: "True"
  fullName: Project.Application.Users.IUserRepository.GetUserByUsernameAsync
  nameWithType: IUserRepository.GetUserByUsernameAsync
- uid: Project.Application.Users.IUserRepository.UpdateAsync(Project.Domain.Users.User)
  name: UpdateAsync(User)
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_UpdateAsync_Project_Domain_Users_User_
  commentId: M:Project.Application.Users.IUserRepository.UpdateAsync(Project.Domain.Users.User)
  fullName: Project.Application.Users.IUserRepository.UpdateAsync(Project.Domain.Users.User)
  nameWithType: IUserRepository.UpdateAsync(User)
- uid: Project.Application.Users.IUserRepository.UpdateAsync*
  name: UpdateAsync
  href: api/Project.Application.Users.IUserRepository.html#Project_Application_Users_IUserRepository_UpdateAsync_
  commentId: Overload:Project.Application.Users.IUserRepository.UpdateAsync
  isSpec: "True"
  fullName: Project.Application.Users.IUserRepository.UpdateAsync
  nameWithType: IUserRepository.UpdateAsync
- uid: Project.Domain.SeedWork
  name: Project.Domain.SeedWork
  href: api/Project.Domain.SeedWork.html
  commentId: N:Project.Domain.SeedWork
  fullName: Project.Domain.SeedWork
  nameWithType: Project.Domain.SeedWork
- uid: Project.Domain.SeedWork.BusinessRuleValidationException
  name: BusinessRuleValidationException
  href: api/Project.Domain.SeedWork.BusinessRuleValidationException.html
  commentId: T:Project.Domain.SeedWork.BusinessRuleValidationException
  fullName: Project.Domain.SeedWork.BusinessRuleValidationException
  nameWithType: BusinessRuleValidationException
- uid: Project.Domain.SeedWork.BusinessRuleValidationException.#ctor(Project.Domain.SeedWork.IBusinessRule)
  name: BusinessRuleValidationException(IBusinessRule)
  href: api/Project.Domain.SeedWork.BusinessRuleValidationException.html#Project_Domain_SeedWork_BusinessRuleValidationException__ctor_Project_Domain_SeedWork_IBusinessRule_
  commentId: M:Project.Domain.SeedWork.BusinessRuleValidationException.#ctor(Project.Domain.SeedWork.IBusinessRule)
  name.vb: New(IBusinessRule)
  fullName: Project.Domain.SeedWork.BusinessRuleValidationException.BusinessRuleValidationException(Project.Domain.SeedWork.IBusinessRule)
  fullName.vb: Project.Domain.SeedWork.BusinessRuleValidationException.New(Project.Domain.SeedWork.IBusinessRule)
  nameWithType: BusinessRuleValidationException.BusinessRuleValidationException(IBusinessRule)
  nameWithType.vb: BusinessRuleValidationException.New(IBusinessRule)
- uid: Project.Domain.SeedWork.BusinessRuleValidationException.#ctor*
  name: BusinessRuleValidationException
  href: api/Project.Domain.SeedWork.BusinessRuleValidationException.html#Project_Domain_SeedWork_BusinessRuleValidationException__ctor_
  commentId: Overload:Project.Domain.SeedWork.BusinessRuleValidationException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Project.Domain.SeedWork.BusinessRuleValidationException.BusinessRuleValidationException
  fullName.vb: Project.Domain.SeedWork.BusinessRuleValidationException.New
  nameWithType: BusinessRuleValidationException.BusinessRuleValidationException
  nameWithType.vb: BusinessRuleValidationException.New
- uid: Project.Domain.SeedWork.BusinessRuleValidationException.BrokenRule
  name: BrokenRule
  href: api/Project.Domain.SeedWork.BusinessRuleValidationException.html#Project_Domain_SeedWork_BusinessRuleValidationException_BrokenRule
  commentId: P:Project.Domain.SeedWork.BusinessRuleValidationException.BrokenRule
  fullName: Project.Domain.SeedWork.BusinessRuleValidationException.BrokenRule
  nameWithType: BusinessRuleValidationException.BrokenRule
- uid: Project.Domain.SeedWork.BusinessRuleValidationException.BrokenRule*
  name: BrokenRule
  href: api/Project.Domain.SeedWork.BusinessRuleValidationException.html#Project_Domain_SeedWork_BusinessRuleValidationException_BrokenRule_
  commentId: Overload:Project.Domain.SeedWork.BusinessRuleValidationException.BrokenRule
  isSpec: "True"
  fullName: Project.Domain.SeedWork.BusinessRuleValidationException.BrokenRule
  nameWithType: BusinessRuleValidationException.BrokenRule
- uid: Project.Domain.SeedWork.BusinessRuleValidationException.Details
  name: Details
  href: api/Project.Domain.SeedWork.BusinessRuleValidationException.html#Project_Domain_SeedWork_BusinessRuleValidationException_Details
  commentId: P:Project.Domain.SeedWork.BusinessRuleValidationException.Details
  fullName: Project.Domain.SeedWork.BusinessRuleValidationException.Details
  nameWithType: BusinessRuleValidationException.Details
- uid: Project.Domain.SeedWork.BusinessRuleValidationException.Details*
  name: Details
  href: api/Project.Domain.SeedWork.BusinessRuleValidationException.html#Project_Domain_SeedWork_BusinessRuleValidationException_Details_
  commentId: Overload:Project.Domain.SeedWork.BusinessRuleValidationException.Details
  isSpec: "True"
  fullName: Project.Domain.SeedWork.BusinessRuleValidationException.Details
  nameWithType: BusinessRuleValidationException.Details
- uid: Project.Domain.SeedWork.BusinessRuleValidationException.ToString
  name: ToString()
  href: api/Project.Domain.SeedWork.BusinessRuleValidationException.html#Project_Domain_SeedWork_BusinessRuleValidationException_ToString
  commentId: M:Project.Domain.SeedWork.BusinessRuleValidationException.ToString
  fullName: Project.Domain.SeedWork.BusinessRuleValidationException.ToString()
  nameWithType: BusinessRuleValidationException.ToString()
- uid: Project.Domain.SeedWork.BusinessRuleValidationException.ToString*
  name: ToString
  href: api/Project.Domain.SeedWork.BusinessRuleValidationException.html#Project_Domain_SeedWork_BusinessRuleValidationException_ToString_
  commentId: Overload:Project.Domain.SeedWork.BusinessRuleValidationException.ToString
  isSpec: "True"
  fullName: Project.Domain.SeedWork.BusinessRuleValidationException.ToString
  nameWithType: BusinessRuleValidationException.ToString
- uid: Project.Domain.SeedWork.Entity
  name: Entity
  href: api/Project.Domain.SeedWork.Entity.html
  commentId: T:Project.Domain.SeedWork.Entity
  fullName: Project.Domain.SeedWork.Entity
  nameWithType: Entity
- uid: Project.Domain.SeedWork.Entity.AddDomainEvent(Project.Domain.SeedWork.IDomainEvent)
  name: AddDomainEvent(IDomainEvent)
  href: api/Project.Domain.SeedWork.Entity.html#Project_Domain_SeedWork_Entity_AddDomainEvent_Project_Domain_SeedWork_IDomainEvent_
  commentId: M:Project.Domain.SeedWork.Entity.AddDomainEvent(Project.Domain.SeedWork.IDomainEvent)
  fullName: Project.Domain.SeedWork.Entity.AddDomainEvent(Project.Domain.SeedWork.IDomainEvent)
  nameWithType: Entity.AddDomainEvent(IDomainEvent)
- uid: Project.Domain.SeedWork.Entity.AddDomainEvent*
  name: AddDomainEvent
  href: api/Project.Domain.SeedWork.Entity.html#Project_Domain_SeedWork_Entity_AddDomainEvent_
  commentId: Overload:Project.Domain.SeedWork.Entity.AddDomainEvent
  isSpec: "True"
  fullName: Project.Domain.SeedWork.Entity.AddDomainEvent
  nameWithType: Entity.AddDomainEvent
- uid: Project.Domain.SeedWork.Entity.CheckRule(Project.Domain.SeedWork.IBusinessRule)
  name: CheckRule(IBusinessRule)
  href: api/Project.Domain.SeedWork.Entity.html#Project_Domain_SeedWork_Entity_CheckRule_Project_Domain_SeedWork_IBusinessRule_
  commentId: M:Project.Domain.SeedWork.Entity.CheckRule(Project.Domain.SeedWork.IBusinessRule)
  fullName: Project.Domain.SeedWork.Entity.CheckRule(Project.Domain.SeedWork.IBusinessRule)
  nameWithType: Entity.CheckRule(IBusinessRule)
- uid: Project.Domain.SeedWork.Entity.CheckRule*
  name: CheckRule
  href: api/Project.Domain.SeedWork.Entity.html#Project_Domain_SeedWork_Entity_CheckRule_
  commentId: Overload:Project.Domain.SeedWork.Entity.CheckRule
  isSpec: "True"
  fullName: Project.Domain.SeedWork.Entity.CheckRule
  nameWithType: Entity.CheckRule
- uid: Project.Domain.SeedWork.Entity.ClearDomainEvents
  name: ClearDomainEvents()
  href: api/Project.Domain.SeedWork.Entity.html#Project_Domain_SeedWork_Entity_ClearDomainEvents
  commentId: M:Project.Domain.SeedWork.Entity.ClearDomainEvents
  fullName: Project.Domain.SeedWork.Entity.ClearDomainEvents()
  nameWithType: Entity.ClearDomainEvents()
- uid: Project.Domain.SeedWork.Entity.ClearDomainEvents*
  name: ClearDomainEvents
  href: api/Project.Domain.SeedWork.Entity.html#Project_Domain_SeedWork_Entity_ClearDomainEvents_
  commentId: Overload:Project.Domain.SeedWork.Entity.ClearDomainEvents
  isSpec: "True"
  fullName: Project.Domain.SeedWork.Entity.ClearDomainEvents
  nameWithType: Entity.ClearDomainEvents
- uid: Project.Domain.SeedWork.Entity.DomainEvents
  name: DomainEvents
  href: api/Project.Domain.SeedWork.Entity.html#Project_Domain_SeedWork_Entity_DomainEvents
  commentId: P:Project.Domain.SeedWork.Entity.DomainEvents
  fullName: Project.Domain.SeedWork.Entity.DomainEvents
  nameWithType: Entity.DomainEvents
- uid: Project.Domain.SeedWork.Entity.DomainEvents*
  name: DomainEvents
  href: api/Project.Domain.SeedWork.Entity.html#Project_Domain_SeedWork_Entity_DomainEvents_
  commentId: Overload:Project.Domain.SeedWork.Entity.DomainEvents
  isSpec: "True"
  fullName: Project.Domain.SeedWork.Entity.DomainEvents
  nameWithType: Entity.DomainEvents
- uid: Project.Domain.SeedWork.IAggregateRoot
  name: IAggregateRoot
  href: api/Project.Domain.SeedWork.IAggregateRoot.html
  commentId: T:Project.Domain.SeedWork.IAggregateRoot
  fullName: Project.Domain.SeedWork.IAggregateRoot
  nameWithType: IAggregateRoot
- uid: Project.Domain.SeedWork.IBusinessRule
  name: IBusinessRule
  href: api/Project.Domain.SeedWork.IBusinessRule.html
  commentId: T:Project.Domain.SeedWork.IBusinessRule
  fullName: Project.Domain.SeedWork.IBusinessRule
  nameWithType: IBusinessRule
- uid: Project.Domain.SeedWork.IBusinessRule.IsBroken
  name: IsBroken()
  href: api/Project.Domain.SeedWork.IBusinessRule.html#Project_Domain_SeedWork_IBusinessRule_IsBroken
  commentId: M:Project.Domain.SeedWork.IBusinessRule.IsBroken
  fullName: Project.Domain.SeedWork.IBusinessRule.IsBroken()
  nameWithType: IBusinessRule.IsBroken()
- uid: Project.Domain.SeedWork.IBusinessRule.IsBroken*
  name: IsBroken
  href: api/Project.Domain.SeedWork.IBusinessRule.html#Project_Domain_SeedWork_IBusinessRule_IsBroken_
  commentId: Overload:Project.Domain.SeedWork.IBusinessRule.IsBroken
  isSpec: "True"
  fullName: Project.Domain.SeedWork.IBusinessRule.IsBroken
  nameWithType: IBusinessRule.IsBroken
- uid: Project.Domain.SeedWork.IBusinessRule.Message
  name: Message
  href: api/Project.Domain.SeedWork.IBusinessRule.html#Project_Domain_SeedWork_IBusinessRule_Message
  commentId: P:Project.Domain.SeedWork.IBusinessRule.Message
  fullName: Project.Domain.SeedWork.IBusinessRule.Message
  nameWithType: IBusinessRule.Message
- uid: Project.Domain.SeedWork.IBusinessRule.Message*
  name: Message
  href: api/Project.Domain.SeedWork.IBusinessRule.html#Project_Domain_SeedWork_IBusinessRule_Message_
  commentId: Overload:Project.Domain.SeedWork.IBusinessRule.Message
  isSpec: "True"
  fullName: Project.Domain.SeedWork.IBusinessRule.Message
  nameWithType: IBusinessRule.Message
- uid: Project.Domain.SeedWork.IDomainEvent
  name: IDomainEvent
  href: api/Project.Domain.SeedWork.IDomainEvent.html
  commentId: T:Project.Domain.SeedWork.IDomainEvent
  fullName: Project.Domain.SeedWork.IDomainEvent
  nameWithType: IDomainEvent
- uid: Project.Domain.SeedWork.IDomainEvent.OccurredOn
  name: OccurredOn
  href: api/Project.Domain.SeedWork.IDomainEvent.html#Project_Domain_SeedWork_IDomainEvent_OccurredOn
  commentId: P:Project.Domain.SeedWork.IDomainEvent.OccurredOn
  fullName: Project.Domain.SeedWork.IDomainEvent.OccurredOn
  nameWithType: IDomainEvent.OccurredOn
- uid: Project.Domain.SeedWork.IDomainEvent.OccurredOn*
  name: OccurredOn
  href: api/Project.Domain.SeedWork.IDomainEvent.html#Project_Domain_SeedWork_IDomainEvent_OccurredOn_
  commentId: Overload:Project.Domain.SeedWork.IDomainEvent.OccurredOn
  isSpec: "True"
  fullName: Project.Domain.SeedWork.IDomainEvent.OccurredOn
  nameWithType: IDomainEvent.OccurredOn
- uid: Project.Domain.SeedWork.INotification
  name: INotification
  href: api/Project.Domain.SeedWork.INotification.html
  commentId: T:Project.Domain.SeedWork.INotification
  fullName: Project.Domain.SeedWork.INotification
  nameWithType: INotification
- uid: Project.Domain.SeedWork.IgnoreMemberAttribute
  name: IgnoreMemberAttribute
  href: api/Project.Domain.SeedWork.IgnoreMemberAttribute.html
  commentId: T:Project.Domain.SeedWork.IgnoreMemberAttribute
  fullName: Project.Domain.SeedWork.IgnoreMemberAttribute
  nameWithType: IgnoreMemberAttribute
- uid: Project.Domain.SeedWork.TypedIdValueBase
  name: TypedIdValueBase
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html
  commentId: T:Project.Domain.SeedWork.TypedIdValueBase
  fullName: Project.Domain.SeedWork.TypedIdValueBase
  nameWithType: TypedIdValueBase
- uid: Project.Domain.SeedWork.TypedIdValueBase.#ctor(System.Guid)
  name: TypedIdValueBase(Guid)
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase__ctor_System_Guid_
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.#ctor(System.Guid)
  name.vb: New(Guid)
  fullName: Project.Domain.SeedWork.TypedIdValueBase.TypedIdValueBase(System.Guid)
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.New(System.Guid)
  nameWithType: TypedIdValueBase.TypedIdValueBase(Guid)
  nameWithType.vb: TypedIdValueBase.New(Guid)
- uid: Project.Domain.SeedWork.TypedIdValueBase.#ctor*
  name: TypedIdValueBase
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase__ctor_
  commentId: Overload:Project.Domain.SeedWork.TypedIdValueBase.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Project.Domain.SeedWork.TypedIdValueBase.TypedIdValueBase
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.New
  nameWithType: TypedIdValueBase.TypedIdValueBase
  nameWithType.vb: TypedIdValueBase.New
- uid: Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  name: Equals(TypedIdValueBase?)
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Equals_Project_Domain_SeedWork_TypedIdValueBase_
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  name.vb: Equals(TypedIdValueBase)
  fullName: Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase?)
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  nameWithType: TypedIdValueBase.Equals(TypedIdValueBase?)
  nameWithType.vb: TypedIdValueBase.Equals(TypedIdValueBase)
- uid: Project.Domain.SeedWork.TypedIdValueBase.Equals(System.Object)
  name: Equals(object?)
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Equals_System_Object_
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Project.Domain.SeedWork.TypedIdValueBase.Equals(object?)
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.Equals(Object)
  nameWithType: TypedIdValueBase.Equals(object?)
  nameWithType.vb: TypedIdValueBase.Equals(Object)
- uid: Project.Domain.SeedWork.TypedIdValueBase.Equals*
  name: Equals
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Equals_
  commentId: Overload:Project.Domain.SeedWork.TypedIdValueBase.Equals
  isSpec: "True"
  fullName: Project.Domain.SeedWork.TypedIdValueBase.Equals
  nameWithType: TypedIdValueBase.Equals
- uid: Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
  name: GetHashCode()
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_GetHashCode
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
  fullName: Project.Domain.SeedWork.TypedIdValueBase.GetHashCode()
  nameWithType: TypedIdValueBase.GetHashCode()
- uid: Project.Domain.SeedWork.TypedIdValueBase.GetHashCode*
  name: GetHashCode
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_GetHashCode_
  commentId: Overload:Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
  isSpec: "True"
  fullName: Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
  nameWithType: TypedIdValueBase.GetHashCode
- uid: Project.Domain.SeedWork.TypedIdValueBase.Value
  name: Value
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Value
  commentId: P:Project.Domain.SeedWork.TypedIdValueBase.Value
  fullName: Project.Domain.SeedWork.TypedIdValueBase.Value
  nameWithType: TypedIdValueBase.Value
- uid: Project.Domain.SeedWork.TypedIdValueBase.Value*
  name: Value
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Value_
  commentId: Overload:Project.Domain.SeedWork.TypedIdValueBase.Value
  isSpec: "True"
  fullName: Project.Domain.SeedWork.TypedIdValueBase.Value
  nameWithType: TypedIdValueBase.Value
- uid: Project.Domain.SeedWork.TypedIdValueBase.op_Equality(Project.Domain.SeedWork.TypedIdValueBase,Project.Domain.SeedWork.TypedIdValueBase)
  name: operator ==(TypedIdValueBase, TypedIdValueBase)
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_op_Equality_Project_Domain_SeedWork_TypedIdValueBase_Project_Domain_SeedWork_TypedIdValueBase_
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.op_Equality(Project.Domain.SeedWork.TypedIdValueBase,Project.Domain.SeedWork.TypedIdValueBase)
  name.vb: =(TypedIdValueBase, TypedIdValueBase)
  fullName: Project.Domain.SeedWork.TypedIdValueBase.operator ==(Project.Domain.SeedWork.TypedIdValueBase, Project.Domain.SeedWork.TypedIdValueBase)
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.=(Project.Domain.SeedWork.TypedIdValueBase, Project.Domain.SeedWork.TypedIdValueBase)
  nameWithType: TypedIdValueBase.operator ==(TypedIdValueBase, TypedIdValueBase)
  nameWithType.vb: TypedIdValueBase.=(TypedIdValueBase, TypedIdValueBase)
- uid: Project.Domain.SeedWork.TypedIdValueBase.op_Equality*
  name: operator ==
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_op_Equality_
  commentId: Overload:Project.Domain.SeedWork.TypedIdValueBase.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Project.Domain.SeedWork.TypedIdValueBase.operator ==
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.=
  nameWithType: TypedIdValueBase.operator ==
  nameWithType.vb: TypedIdValueBase.=
- uid: Project.Domain.SeedWork.TypedIdValueBase.op_Inequality(Project.Domain.SeedWork.TypedIdValueBase,Project.Domain.SeedWork.TypedIdValueBase)
  name: operator !=(TypedIdValueBase, TypedIdValueBase)
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_op_Inequality_Project_Domain_SeedWork_TypedIdValueBase_Project_Domain_SeedWork_TypedIdValueBase_
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.op_Inequality(Project.Domain.SeedWork.TypedIdValueBase,Project.Domain.SeedWork.TypedIdValueBase)
  name.vb: <>(TypedIdValueBase, TypedIdValueBase)
  fullName: Project.Domain.SeedWork.TypedIdValueBase.operator !=(Project.Domain.SeedWork.TypedIdValueBase, Project.Domain.SeedWork.TypedIdValueBase)
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.<>(Project.Domain.SeedWork.TypedIdValueBase, Project.Domain.SeedWork.TypedIdValueBase)
  nameWithType: TypedIdValueBase.operator !=(TypedIdValueBase, TypedIdValueBase)
  nameWithType.vb: TypedIdValueBase.<>(TypedIdValueBase, TypedIdValueBase)
- uid: Project.Domain.SeedWork.TypedIdValueBase.op_Inequality*
  name: operator !=
  href: api/Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_op_Inequality_
  commentId: Overload:Project.Domain.SeedWork.TypedIdValueBase.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Project.Domain.SeedWork.TypedIdValueBase.operator !=
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.<>
  nameWithType: TypedIdValueBase.operator !=
  nameWithType.vb: TypedIdValueBase.<>
- uid: Project.Domain.SeedWork.ValueObject
  name: ValueObject
  href: api/Project.Domain.SeedWork.ValueObject.html
  commentId: T:Project.Domain.SeedWork.ValueObject
  fullName: Project.Domain.SeedWork.ValueObject
  nameWithType: ValueObject
- uid: Project.Domain.SeedWork.ValueObject.CheckRule(Project.Domain.SeedWork.IBusinessRule)
  name: CheckRule(IBusinessRule)
  href: api/Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_CheckRule_Project_Domain_SeedWork_IBusinessRule_
  commentId: M:Project.Domain.SeedWork.ValueObject.CheckRule(Project.Domain.SeedWork.IBusinessRule)
  fullName: Project.Domain.SeedWork.ValueObject.CheckRule(Project.Domain.SeedWork.IBusinessRule)
  nameWithType: ValueObject.CheckRule(IBusinessRule)
- uid: Project.Domain.SeedWork.ValueObject.CheckRule*
  name: CheckRule
  href: api/Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_CheckRule_
  commentId: Overload:Project.Domain.SeedWork.ValueObject.CheckRule
  isSpec: "True"
  fullName: Project.Domain.SeedWork.ValueObject.CheckRule
  nameWithType: ValueObject.CheckRule
- uid: Project.Domain.SeedWork.ValueObject.Equals(Project.Domain.SeedWork.ValueObject)
  name: Equals(ValueObject?)
  href: api/Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_Equals_Project_Domain_SeedWork_ValueObject_
  commentId: M:Project.Domain.SeedWork.ValueObject.Equals(Project.Domain.SeedWork.ValueObject)
  name.vb: Equals(ValueObject)
  fullName: Project.Domain.SeedWork.ValueObject.Equals(Project.Domain.SeedWork.ValueObject?)
  fullName.vb: Project.Domain.SeedWork.ValueObject.Equals(Project.Domain.SeedWork.ValueObject)
  nameWithType: ValueObject.Equals(ValueObject?)
  nameWithType.vb: ValueObject.Equals(ValueObject)
- uid: Project.Domain.SeedWork.ValueObject.Equals(System.Object)
  name: Equals(object?)
  href: api/Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_Equals_System_Object_
  commentId: M:Project.Domain.SeedWork.ValueObject.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Project.Domain.SeedWork.ValueObject.Equals(object?)
  fullName.vb: Project.Domain.SeedWork.ValueObject.Equals(Object)
  nameWithType: ValueObject.Equals(object?)
  nameWithType.vb: ValueObject.Equals(Object)
- uid: Project.Domain.SeedWork.ValueObject.Equals*
  name: Equals
  href: api/Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_Equals_
  commentId: Overload:Project.Domain.SeedWork.ValueObject.Equals
  isSpec: "True"
  fullName: Project.Domain.SeedWork.ValueObject.Equals
  nameWithType: ValueObject.Equals
- uid: Project.Domain.SeedWork.ValueObject.GetHashCode
  name: GetHashCode()
  href: api/Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_GetHashCode
  commentId: M:Project.Domain.SeedWork.ValueObject.GetHashCode
  fullName: Project.Domain.SeedWork.ValueObject.GetHashCode()
  nameWithType: ValueObject.GetHashCode()
- uid: Project.Domain.SeedWork.ValueObject.GetHashCode*
  name: GetHashCode
  href: api/Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_GetHashCode_
  commentId: Overload:Project.Domain.SeedWork.ValueObject.GetHashCode
  isSpec: "True"
  fullName: Project.Domain.SeedWork.ValueObject.GetHashCode
  nameWithType: ValueObject.GetHashCode
- uid: Project.Domain.SeedWork.ValueObject.op_Equality(Project.Domain.SeedWork.ValueObject,Project.Domain.SeedWork.ValueObject)
  name: operator ==(ValueObject?, ValueObject?)
  href: api/Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_op_Equality_Project_Domain_SeedWork_ValueObject_Project_Domain_SeedWork_ValueObject_
  commentId: M:Project.Domain.SeedWork.ValueObject.op_Equality(Project.Domain.SeedWork.ValueObject,Project.Domain.SeedWork.ValueObject)
  name.vb: =(ValueObject, ValueObject)
  fullName: Project.Domain.SeedWork.ValueObject.operator ==(Project.Domain.SeedWork.ValueObject?, Project.Domain.SeedWork.ValueObject?)
  fullName.vb: Project.Domain.SeedWork.ValueObject.=(Project.Domain.SeedWork.ValueObject, Project.Domain.SeedWork.ValueObject)
  nameWithType: ValueObject.operator ==(ValueObject?, ValueObject?)
  nameWithType.vb: ValueObject.=(ValueObject, ValueObject)
- uid: Project.Domain.SeedWork.ValueObject.op_Equality*
  name: operator ==
  href: api/Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_op_Equality_
  commentId: Overload:Project.Domain.SeedWork.ValueObject.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Project.Domain.SeedWork.ValueObject.operator ==
  fullName.vb: Project.Domain.SeedWork.ValueObject.=
  nameWithType: ValueObject.operator ==
  nameWithType.vb: ValueObject.=
- uid: Project.Domain.SeedWork.ValueObject.op_Inequality(Project.Domain.SeedWork.ValueObject,Project.Domain.SeedWork.ValueObject)
  name: operator !=(ValueObject?, ValueObject?)
  href: api/Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_op_Inequality_Project_Domain_SeedWork_ValueObject_Project_Domain_SeedWork_ValueObject_
  commentId: M:Project.Domain.SeedWork.ValueObject.op_Inequality(Project.Domain.SeedWork.ValueObject,Project.Domain.SeedWork.ValueObject)
  name.vb: <>(ValueObject, ValueObject)
  fullName: Project.Domain.SeedWork.ValueObject.operator !=(Project.Domain.SeedWork.ValueObject?, Project.Domain.SeedWork.ValueObject?)
  fullName.vb: Project.Domain.SeedWork.ValueObject.<>(Project.Domain.SeedWork.ValueObject, Project.Domain.SeedWork.ValueObject)
  nameWithType: ValueObject.operator !=(ValueObject?, ValueObject?)
  nameWithType.vb: ValueObject.<>(ValueObject, ValueObject)
- uid: Project.Domain.SeedWork.ValueObject.op_Inequality*
  name: operator !=
  href: api/Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_op_Inequality_
  commentId: Overload:Project.Domain.SeedWork.ValueObject.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Project.Domain.SeedWork.ValueObject.operator !=
  fullName.vb: Project.Domain.SeedWork.ValueObject.<>
  nameWithType: ValueObject.operator !=
  nameWithType.vb: ValueObject.<>
- uid: Project.Domain.SharedKernel.Users
  name: Project.Domain.SharedKernel.Users
  href: api/Project.Domain.SharedKernel.Users.html
  commentId: N:Project.Domain.SharedKernel.Users
  fullName: Project.Domain.SharedKernel.Users
  nameWithType: Project.Domain.SharedKernel.Users
- uid: Project.Domain.SharedKernel.Users.Email
  name: Email
  href: api/Project.Domain.SharedKernel.Users.Email.html
  commentId: T:Project.Domain.SharedKernel.Users.Email
  fullName: Project.Domain.SharedKernel.Users.Email
  nameWithType: Email
- uid: Project.Domain.SharedKernel.Users.Email.#ctor
  name: Email()
  href: api/Project.Domain.SharedKernel.Users.Email.html#Project_Domain_SharedKernel_Users_Email__ctor
  commentId: M:Project.Domain.SharedKernel.Users.Email.#ctor
  name.vb: New()
  fullName: Project.Domain.SharedKernel.Users.Email.Email()
  fullName.vb: Project.Domain.SharedKernel.Users.Email.New()
  nameWithType: Email.Email()
  nameWithType.vb: Email.New()
- uid: Project.Domain.SharedKernel.Users.Email.#ctor(System.String)
  name: Email(string)
  href: api/Project.Domain.SharedKernel.Users.Email.html#Project_Domain_SharedKernel_Users_Email__ctor_System_String_
  commentId: M:Project.Domain.SharedKernel.Users.Email.#ctor(System.String)
  name.vb: New(String)
  fullName: Project.Domain.SharedKernel.Users.Email.Email(string)
  fullName.vb: Project.Domain.SharedKernel.Users.Email.New(String)
  nameWithType: Email.Email(string)
  nameWithType.vb: Email.New(String)
- uid: Project.Domain.SharedKernel.Users.Email.#ctor*
  name: Email
  href: api/Project.Domain.SharedKernel.Users.Email.html#Project_Domain_SharedKernel_Users_Email__ctor_
  commentId: Overload:Project.Domain.SharedKernel.Users.Email.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Project.Domain.SharedKernel.Users.Email.Email
  fullName.vb: Project.Domain.SharedKernel.Users.Email.New
  nameWithType: Email.Email
  nameWithType.vb: Email.New
- uid: Project.Domain.SharedKernel.Users.Email.Equals(System.Object)
  name: Equals(object?)
  href: api/Project.Domain.SharedKernel.Users.Email.html#Project_Domain_SharedKernel_Users_Email_Equals_System_Object_
  commentId: M:Project.Domain.SharedKernel.Users.Email.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Project.Domain.SharedKernel.Users.Email.Equals(object?)
  fullName.vb: Project.Domain.SharedKernel.Users.Email.Equals(Object)
  nameWithType: Email.Equals(object?)
  nameWithType.vb: Email.Equals(Object)
- uid: Project.Domain.SharedKernel.Users.Email.Equals*
  name: Equals
  href: api/Project.Domain.SharedKernel.Users.Email.html#Project_Domain_SharedKernel_Users_Email_Equals_
  commentId: Overload:Project.Domain.SharedKernel.Users.Email.Equals
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Email.Equals
  nameWithType: Email.Equals
- uid: Project.Domain.SharedKernel.Users.Email.GetHashCode
  name: GetHashCode()
  href: api/Project.Domain.SharedKernel.Users.Email.html#Project_Domain_SharedKernel_Users_Email_GetHashCode
  commentId: M:Project.Domain.SharedKernel.Users.Email.GetHashCode
  fullName: Project.Domain.SharedKernel.Users.Email.GetHashCode()
  nameWithType: Email.GetHashCode()
- uid: Project.Domain.SharedKernel.Users.Email.GetHashCode*
  name: GetHashCode
  href: api/Project.Domain.SharedKernel.Users.Email.html#Project_Domain_SharedKernel_Users_Email_GetHashCode_
  commentId: Overload:Project.Domain.SharedKernel.Users.Email.GetHashCode
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Email.GetHashCode
  nameWithType: Email.GetHashCode
- uid: Project.Domain.SharedKernel.Users.Email.ToString
  name: ToString()
  href: api/Project.Domain.SharedKernel.Users.Email.html#Project_Domain_SharedKernel_Users_Email_ToString
  commentId: M:Project.Domain.SharedKernel.Users.Email.ToString
  fullName: Project.Domain.SharedKernel.Users.Email.ToString()
  nameWithType: Email.ToString()
- uid: Project.Domain.SharedKernel.Users.Email.ToString*
  name: ToString
  href: api/Project.Domain.SharedKernel.Users.Email.html#Project_Domain_SharedKernel_Users_Email_ToString_
  commentId: Overload:Project.Domain.SharedKernel.Users.Email.ToString
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Email.ToString
  nameWithType: Email.ToString
- uid: Project.Domain.SharedKernel.Users.Email.Value
  name: Value
  href: api/Project.Domain.SharedKernel.Users.Email.html#Project_Domain_SharedKernel_Users_Email_Value
  commentId: P:Project.Domain.SharedKernel.Users.Email.Value
  fullName: Project.Domain.SharedKernel.Users.Email.Value
  nameWithType: Email.Value
- uid: Project.Domain.SharedKernel.Users.Email.Value*
  name: Value
  href: api/Project.Domain.SharedKernel.Users.Email.html#Project_Domain_SharedKernel_Users_Email_Value_
  commentId: Overload:Project.Domain.SharedKernel.Users.Email.Value
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Email.Value
  nameWithType: Email.Value
- uid: Project.Domain.SharedKernel.Users.Email.op_Implicit(Project.Domain.SharedKernel.Users.Email)~System.String
  name: implicit operator string(Email)
  href: api/Project.Domain.SharedKernel.Users.Email.html#Project_Domain_SharedKernel_Users_Email_op_Implicit_Project_Domain_SharedKernel_Users_Email__System_String
  commentId: M:Project.Domain.SharedKernel.Users.Email.op_Implicit(Project.Domain.SharedKernel.Users.Email)~System.String
  name.vb: CType(Email)
  fullName: Project.Domain.SharedKernel.Users.Email.implicit operator string(Project.Domain.SharedKernel.Users.Email)
  fullName.vb: Project.Domain.SharedKernel.Users.Email.CType(Project.Domain.SharedKernel.Users.Email)
  nameWithType: Email.implicit operator string(Email)
  nameWithType.vb: Email.CType(Email)
- uid: Project.Domain.SharedKernel.Users.Email.op_Implicit*
  name: implicit operator
  href: api/Project.Domain.SharedKernel.Users.Email.html#Project_Domain_SharedKernel_Users_Email_op_Implicit_
  commentId: Overload:Project.Domain.SharedKernel.Users.Email.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Project.Domain.SharedKernel.Users.Email.implicit operator
  fullName.vb: Project.Domain.SharedKernel.Users.Email.CType
  nameWithType: Email.implicit operator
  nameWithType.vb: Email.CType
- uid: Project.Domain.SharedKernel.Users.Name
  name: Name
  href: api/Project.Domain.SharedKernel.Users.Name.html
  commentId: T:Project.Domain.SharedKernel.Users.Name
  fullName: Project.Domain.SharedKernel.Users.Name
  nameWithType: Name
- uid: Project.Domain.SharedKernel.Users.Name.#ctor
  name: Name()
  href: api/Project.Domain.SharedKernel.Users.Name.html#Project_Domain_SharedKernel_Users_Name__ctor
  commentId: M:Project.Domain.SharedKernel.Users.Name.#ctor
  name.vb: New()
  fullName: Project.Domain.SharedKernel.Users.Name.Name()
  fullName.vb: Project.Domain.SharedKernel.Users.Name.New()
  nameWithType: Name.Name()
  nameWithType.vb: Name.New()
- uid: Project.Domain.SharedKernel.Users.Name.#ctor(System.String)
  name: Name(string)
  href: api/Project.Domain.SharedKernel.Users.Name.html#Project_Domain_SharedKernel_Users_Name__ctor_System_String_
  commentId: M:Project.Domain.SharedKernel.Users.Name.#ctor(System.String)
  name.vb: New(String)
  fullName: Project.Domain.SharedKernel.Users.Name.Name(string)
  fullName.vb: Project.Domain.SharedKernel.Users.Name.New(String)
  nameWithType: Name.Name(string)
  nameWithType.vb: Name.New(String)
- uid: Project.Domain.SharedKernel.Users.Name.#ctor*
  name: Name
  href: api/Project.Domain.SharedKernel.Users.Name.html#Project_Domain_SharedKernel_Users_Name__ctor_
  commentId: Overload:Project.Domain.SharedKernel.Users.Name.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Project.Domain.SharedKernel.Users.Name.Name
  fullName.vb: Project.Domain.SharedKernel.Users.Name.New
  nameWithType: Name.Name
  nameWithType.vb: Name.New
- uid: Project.Domain.SharedKernel.Users.Name.Equals(System.Object)
  name: Equals(object?)
  href: api/Project.Domain.SharedKernel.Users.Name.html#Project_Domain_SharedKernel_Users_Name_Equals_System_Object_
  commentId: M:Project.Domain.SharedKernel.Users.Name.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Project.Domain.SharedKernel.Users.Name.Equals(object?)
  fullName.vb: Project.Domain.SharedKernel.Users.Name.Equals(Object)
  nameWithType: Name.Equals(object?)
  nameWithType.vb: Name.Equals(Object)
- uid: Project.Domain.SharedKernel.Users.Name.Equals*
  name: Equals
  href: api/Project.Domain.SharedKernel.Users.Name.html#Project_Domain_SharedKernel_Users_Name_Equals_
  commentId: Overload:Project.Domain.SharedKernel.Users.Name.Equals
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Name.Equals
  nameWithType: Name.Equals
- uid: Project.Domain.SharedKernel.Users.Name.GetHashCode
  name: GetHashCode()
  href: api/Project.Domain.SharedKernel.Users.Name.html#Project_Domain_SharedKernel_Users_Name_GetHashCode
  commentId: M:Project.Domain.SharedKernel.Users.Name.GetHashCode
  fullName: Project.Domain.SharedKernel.Users.Name.GetHashCode()
  nameWithType: Name.GetHashCode()
- uid: Project.Domain.SharedKernel.Users.Name.GetHashCode*
  name: GetHashCode
  href: api/Project.Domain.SharedKernel.Users.Name.html#Project_Domain_SharedKernel_Users_Name_GetHashCode_
  commentId: Overload:Project.Domain.SharedKernel.Users.Name.GetHashCode
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Name.GetHashCode
  nameWithType: Name.GetHashCode
- uid: Project.Domain.SharedKernel.Users.Name.SetValue(System.String)
  name: SetValue(string)
  href: api/Project.Domain.SharedKernel.Users.Name.html#Project_Domain_SharedKernel_Users_Name_SetValue_System_String_
  commentId: M:Project.Domain.SharedKernel.Users.Name.SetValue(System.String)
  name.vb: SetValue(String)
  fullName: Project.Domain.SharedKernel.Users.Name.SetValue(string)
  fullName.vb: Project.Domain.SharedKernel.Users.Name.SetValue(String)
  nameWithType: Name.SetValue(string)
  nameWithType.vb: Name.SetValue(String)
- uid: Project.Domain.SharedKernel.Users.Name.SetValue*
  name: SetValue
  href: api/Project.Domain.SharedKernel.Users.Name.html#Project_Domain_SharedKernel_Users_Name_SetValue_
  commentId: Overload:Project.Domain.SharedKernel.Users.Name.SetValue
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Name.SetValue
  nameWithType: Name.SetValue
- uid: Project.Domain.SharedKernel.Users.Name.ToString
  name: ToString()
  href: api/Project.Domain.SharedKernel.Users.Name.html#Project_Domain_SharedKernel_Users_Name_ToString
  commentId: M:Project.Domain.SharedKernel.Users.Name.ToString
  fullName: Project.Domain.SharedKernel.Users.Name.ToString()
  nameWithType: Name.ToString()
- uid: Project.Domain.SharedKernel.Users.Name.ToString*
  name: ToString
  href: api/Project.Domain.SharedKernel.Users.Name.html#Project_Domain_SharedKernel_Users_Name_ToString_
  commentId: Overload:Project.Domain.SharedKernel.Users.Name.ToString
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Name.ToString
  nameWithType: Name.ToString
- uid: Project.Domain.SharedKernel.Users.Name.Value
  name: Value
  href: api/Project.Domain.SharedKernel.Users.Name.html#Project_Domain_SharedKernel_Users_Name_Value
  commentId: P:Project.Domain.SharedKernel.Users.Name.Value
  fullName: Project.Domain.SharedKernel.Users.Name.Value
  nameWithType: Name.Value
- uid: Project.Domain.SharedKernel.Users.Name.Value*
  name: Value
  href: api/Project.Domain.SharedKernel.Users.Name.html#Project_Domain_SharedKernel_Users_Name_Value_
  commentId: Overload:Project.Domain.SharedKernel.Users.Name.Value
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Name.Value
  nameWithType: Name.Value
- uid: Project.Domain.SharedKernel.Users.Rules
  name: Project.Domain.SharedKernel.Users.Rules
  href: api/Project.Domain.SharedKernel.Users.Rules.html
  commentId: N:Project.Domain.SharedKernel.Users.Rules
  fullName: Project.Domain.SharedKernel.Users.Rules
  nameWithType: Project.Domain.SharedKernel.Users.Rules
- uid: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule
  name: EmailMustBeValidRule
  href: api/Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.html
  commentId: T:Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule
  fullName: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule
  nameWithType: EmailMustBeValidRule
- uid: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.#ctor(System.String)
  name: EmailMustBeValidRule(string)
  href: api/Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_EmailMustBeValidRule__ctor_System_String_
  commentId: M:Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.#ctor(System.String)
  name.vb: New(String)
  fullName: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.EmailMustBeValidRule(string)
  fullName.vb: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.New(String)
  nameWithType: EmailMustBeValidRule.EmailMustBeValidRule(string)
  nameWithType.vb: EmailMustBeValidRule.New(String)
- uid: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.#ctor*
  name: EmailMustBeValidRule
  href: api/Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_EmailMustBeValidRule__ctor_
  commentId: Overload:Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.EmailMustBeValidRule
  fullName.vb: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.New
  nameWithType: EmailMustBeValidRule.EmailMustBeValidRule
  nameWithType.vb: EmailMustBeValidRule.New
- uid: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.IsBroken
  name: IsBroken()
  href: api/Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_EmailMustBeValidRule_IsBroken
  commentId: M:Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.IsBroken
  fullName: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.IsBroken()
  nameWithType: EmailMustBeValidRule.IsBroken()
- uid: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.IsBroken*
  name: IsBroken
  href: api/Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_EmailMustBeValidRule_IsBroken_
  commentId: Overload:Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.IsBroken
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.IsBroken
  nameWithType: EmailMustBeValidRule.IsBroken
- uid: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.Message
  name: Message
  href: api/Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_EmailMustBeValidRule_Message
  commentId: P:Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.Message
  fullName: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.Message
  nameWithType: EmailMustBeValidRule.Message
- uid: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.Message*
  name: Message
  href: api/Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_EmailMustBeValidRule_Message_
  commentId: Overload:Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.Message
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Rules.EmailMustBeValidRule.Message
  nameWithType: EmailMustBeValidRule.Message
- uid: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule
  name: NameMustBeValidRule
  href: api/Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.html
  commentId: T:Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule
  fullName: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule
  nameWithType: NameMustBeValidRule
- uid: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.#ctor(System.String)
  name: NameMustBeValidRule(string)
  href: api/Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_NameMustBeValidRule__ctor_System_String_
  commentId: M:Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.#ctor(System.String)
  name.vb: New(String)
  fullName: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.NameMustBeValidRule(string)
  fullName.vb: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.New(String)
  nameWithType: NameMustBeValidRule.NameMustBeValidRule(string)
  nameWithType.vb: NameMustBeValidRule.New(String)
- uid: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.#ctor*
  name: NameMustBeValidRule
  href: api/Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_NameMustBeValidRule__ctor_
  commentId: Overload:Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.NameMustBeValidRule
  fullName.vb: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.New
  nameWithType: NameMustBeValidRule.NameMustBeValidRule
  nameWithType.vb: NameMustBeValidRule.New
- uid: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.IsBroken
  name: IsBroken()
  href: api/Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_NameMustBeValidRule_IsBroken
  commentId: M:Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.IsBroken
  fullName: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.IsBroken()
  nameWithType: NameMustBeValidRule.IsBroken()
- uid: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.IsBroken*
  name: IsBroken
  href: api/Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_NameMustBeValidRule_IsBroken_
  commentId: Overload:Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.IsBroken
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.IsBroken
  nameWithType: NameMustBeValidRule.IsBroken
- uid: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.Message
  name: Message
  href: api/Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_NameMustBeValidRule_Message
  commentId: P:Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.Message
  fullName: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.Message
  nameWithType: NameMustBeValidRule.Message
- uid: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.Message*
  name: Message
  href: api/Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_NameMustBeValidRule_Message_
  commentId: Overload:Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.Message
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Rules.NameMustBeValidRule.Message
  nameWithType: NameMustBeValidRule.Message
- uid: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule
  name: UserNameMustBeValidRule
  href: api/Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.html
  commentId: T:Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule
  fullName: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule
  nameWithType: UserNameMustBeValidRule
- uid: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.#ctor(System.String)
  name: UserNameMustBeValidRule(string)
  href: api/Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_UserNameMustBeValidRule__ctor_System_String_
  commentId: M:Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.#ctor(System.String)
  name.vb: New(String)
  fullName: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.UserNameMustBeValidRule(string)
  fullName.vb: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.New(String)
  nameWithType: UserNameMustBeValidRule.UserNameMustBeValidRule(string)
  nameWithType.vb: UserNameMustBeValidRule.New(String)
- uid: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.#ctor*
  name: UserNameMustBeValidRule
  href: api/Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_UserNameMustBeValidRule__ctor_
  commentId: Overload:Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.UserNameMustBeValidRule
  fullName.vb: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.New
  nameWithType: UserNameMustBeValidRule.UserNameMustBeValidRule
  nameWithType.vb: UserNameMustBeValidRule.New
- uid: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.IsBroken
  name: IsBroken()
  href: api/Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_UserNameMustBeValidRule_IsBroken
  commentId: M:Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.IsBroken
  fullName: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.IsBroken()
  nameWithType: UserNameMustBeValidRule.IsBroken()
- uid: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.IsBroken*
  name: IsBroken
  href: api/Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_UserNameMustBeValidRule_IsBroken_
  commentId: Overload:Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.IsBroken
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.IsBroken
  nameWithType: UserNameMustBeValidRule.IsBroken
- uid: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.Message
  name: Message
  href: api/Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_UserNameMustBeValidRule_Message
  commentId: P:Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.Message
  fullName: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.Message
  nameWithType: UserNameMustBeValidRule.Message
- uid: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.Message*
  name: Message
  href: api/Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.html#Project_Domain_SharedKernel_Users_Rules_UserNameMustBeValidRule_Message_
  commentId: Overload:Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.Message
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.Rules.UserNameMustBeValidRule.Message
  nameWithType: UserNameMustBeValidRule.Message
- uid: Project.Domain.SharedKernel.Users.UserName
  name: UserName
  href: api/Project.Domain.SharedKernel.Users.UserName.html
  commentId: T:Project.Domain.SharedKernel.Users.UserName
  fullName: Project.Domain.SharedKernel.Users.UserName
  nameWithType: UserName
- uid: Project.Domain.SharedKernel.Users.UserName.#ctor
  name: UserName()
  href: api/Project.Domain.SharedKernel.Users.UserName.html#Project_Domain_SharedKernel_Users_UserName__ctor
  commentId: M:Project.Domain.SharedKernel.Users.UserName.#ctor
  name.vb: New()
  fullName: Project.Domain.SharedKernel.Users.UserName.UserName()
  fullName.vb: Project.Domain.SharedKernel.Users.UserName.New()
  nameWithType: UserName.UserName()
  nameWithType.vb: UserName.New()
- uid: Project.Domain.SharedKernel.Users.UserName.#ctor(System.String)
  name: UserName(string)
  href: api/Project.Domain.SharedKernel.Users.UserName.html#Project_Domain_SharedKernel_Users_UserName__ctor_System_String_
  commentId: M:Project.Domain.SharedKernel.Users.UserName.#ctor(System.String)
  name.vb: New(String)
  fullName: Project.Domain.SharedKernel.Users.UserName.UserName(string)
  fullName.vb: Project.Domain.SharedKernel.Users.UserName.New(String)
  nameWithType: UserName.UserName(string)
  nameWithType.vb: UserName.New(String)
- uid: Project.Domain.SharedKernel.Users.UserName.#ctor*
  name: UserName
  href: api/Project.Domain.SharedKernel.Users.UserName.html#Project_Domain_SharedKernel_Users_UserName__ctor_
  commentId: Overload:Project.Domain.SharedKernel.Users.UserName.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Project.Domain.SharedKernel.Users.UserName.UserName
  fullName.vb: Project.Domain.SharedKernel.Users.UserName.New
  nameWithType: UserName.UserName
  nameWithType.vb: UserName.New
- uid: Project.Domain.SharedKernel.Users.UserName.Equals(System.Object)
  name: Equals(object?)
  href: api/Project.Domain.SharedKernel.Users.UserName.html#Project_Domain_SharedKernel_Users_UserName_Equals_System_Object_
  commentId: M:Project.Domain.SharedKernel.Users.UserName.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Project.Domain.SharedKernel.Users.UserName.Equals(object?)
  fullName.vb: Project.Domain.SharedKernel.Users.UserName.Equals(Object)
  nameWithType: UserName.Equals(object?)
  nameWithType.vb: UserName.Equals(Object)
- uid: Project.Domain.SharedKernel.Users.UserName.Equals*
  name: Equals
  href: api/Project.Domain.SharedKernel.Users.UserName.html#Project_Domain_SharedKernel_Users_UserName_Equals_
  commentId: Overload:Project.Domain.SharedKernel.Users.UserName.Equals
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.UserName.Equals
  nameWithType: UserName.Equals
- uid: Project.Domain.SharedKernel.Users.UserName.GetHashCode
  name: GetHashCode()
  href: api/Project.Domain.SharedKernel.Users.UserName.html#Project_Domain_SharedKernel_Users_UserName_GetHashCode
  commentId: M:Project.Domain.SharedKernel.Users.UserName.GetHashCode
  fullName: Project.Domain.SharedKernel.Users.UserName.GetHashCode()
  nameWithType: UserName.GetHashCode()
- uid: Project.Domain.SharedKernel.Users.UserName.GetHashCode*
  name: GetHashCode
  href: api/Project.Domain.SharedKernel.Users.UserName.html#Project_Domain_SharedKernel_Users_UserName_GetHashCode_
  commentId: Overload:Project.Domain.SharedKernel.Users.UserName.GetHashCode
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.UserName.GetHashCode
  nameWithType: UserName.GetHashCode
- uid: Project.Domain.SharedKernel.Users.UserName.ToString
  name: ToString()
  href: api/Project.Domain.SharedKernel.Users.UserName.html#Project_Domain_SharedKernel_Users_UserName_ToString
  commentId: M:Project.Domain.SharedKernel.Users.UserName.ToString
  fullName: Project.Domain.SharedKernel.Users.UserName.ToString()
  nameWithType: UserName.ToString()
- uid: Project.Domain.SharedKernel.Users.UserName.ToString*
  name: ToString
  href: api/Project.Domain.SharedKernel.Users.UserName.html#Project_Domain_SharedKernel_Users_UserName_ToString_
  commentId: Overload:Project.Domain.SharedKernel.Users.UserName.ToString
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.UserName.ToString
  nameWithType: UserName.ToString
- uid: Project.Domain.SharedKernel.Users.UserName.Value
  name: Value
  href: api/Project.Domain.SharedKernel.Users.UserName.html#Project_Domain_SharedKernel_Users_UserName_Value
  commentId: P:Project.Domain.SharedKernel.Users.UserName.Value
  fullName: Project.Domain.SharedKernel.Users.UserName.Value
  nameWithType: UserName.Value
- uid: Project.Domain.SharedKernel.Users.UserName.Value*
  name: Value
  href: api/Project.Domain.SharedKernel.Users.UserName.html#Project_Domain_SharedKernel_Users_UserName_Value_
  commentId: Overload:Project.Domain.SharedKernel.Users.UserName.Value
  isSpec: "True"
  fullName: Project.Domain.SharedKernel.Users.UserName.Value
  nameWithType: UserName.Value
- uid: Project.Domain.SharedKernel.Users.UserName.op_Implicit(Project.Domain.SharedKernel.Users.UserName)~System.String
  name: implicit operator string(UserName)
  href: api/Project.Domain.SharedKernel.Users.UserName.html#Project_Domain_SharedKernel_Users_UserName_op_Implicit_Project_Domain_SharedKernel_Users_UserName__System_String
  commentId: M:Project.Domain.SharedKernel.Users.UserName.op_Implicit(Project.Domain.SharedKernel.Users.UserName)~System.String
  name.vb: CType(UserName)
  fullName: Project.Domain.SharedKernel.Users.UserName.implicit operator string(Project.Domain.SharedKernel.Users.UserName)
  fullName.vb: Project.Domain.SharedKernel.Users.UserName.CType(Project.Domain.SharedKernel.Users.UserName)
  nameWithType: UserName.implicit operator string(UserName)
  nameWithType.vb: UserName.CType(UserName)
- uid: Project.Domain.SharedKernel.Users.UserName.op_Implicit*
  name: implicit operator
  href: api/Project.Domain.SharedKernel.Users.UserName.html#Project_Domain_SharedKernel_Users_UserName_op_Implicit_
  commentId: Overload:Project.Domain.SharedKernel.Users.UserName.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Project.Domain.SharedKernel.Users.UserName.implicit operator
  fullName.vb: Project.Domain.SharedKernel.Users.UserName.CType
  nameWithType: UserName.implicit operator
  nameWithType.vb: UserName.CType
- uid: Project.Domain.Users
  name: Project.Domain.Users
  href: api/Project.Domain.Users.html
  commentId: N:Project.Domain.Users
  fullName: Project.Domain.Users
  nameWithType: Project.Domain.Users
- uid: Project.Domain.Users.User
  name: User
  href: api/Project.Domain.Users.User.html
  commentId: T:Project.Domain.Users.User
  fullName: Project.Domain.Users.User
  nameWithType: User
- uid: Project.Domain.Users.User.Create(Project.Domain.SharedKernel.Users.Name,Project.Domain.SharedKernel.Users.Name,Project.Domain.SharedKernel.Users.UserName,Project.Domain.SharedKernel.Users.Email)
  name: Create(Name, Name, UserName, Email)
  href: api/Project.Domain.Users.User.html#Project_Domain_Users_User_Create_Project_Domain_SharedKernel_Users_Name_Project_Domain_SharedKernel_Users_Name_Project_Domain_SharedKernel_Users_UserName_Project_Domain_SharedKernel_Users_Email_
  commentId: M:Project.Domain.Users.User.Create(Project.Domain.SharedKernel.Users.Name,Project.Domain.SharedKernel.Users.Name,Project.Domain.SharedKernel.Users.UserName,Project.Domain.SharedKernel.Users.Email)
  fullName: Project.Domain.Users.User.Create(Project.Domain.SharedKernel.Users.Name, Project.Domain.SharedKernel.Users.Name, Project.Domain.SharedKernel.Users.UserName, Project.Domain.SharedKernel.Users.Email)
  nameWithType: User.Create(Name, Name, UserName, Email)
- uid: Project.Domain.Users.User.Create*
  name: Create
  href: api/Project.Domain.Users.User.html#Project_Domain_Users_User_Create_
  commentId: Overload:Project.Domain.Users.User.Create
  isSpec: "True"
  fullName: Project.Domain.Users.User.Create
  nameWithType: User.Create
- uid: Project.Domain.Users.User.Email
  name: Email
  href: api/Project.Domain.Users.User.html#Project_Domain_Users_User_Email
  commentId: P:Project.Domain.Users.User.Email
  fullName: Project.Domain.Users.User.Email
  nameWithType: User.Email
- uid: Project.Domain.Users.User.Email*
  name: Email
  href: api/Project.Domain.Users.User.html#Project_Domain_Users_User_Email_
  commentId: Overload:Project.Domain.Users.User.Email
  isSpec: "True"
  fullName: Project.Domain.Users.User.Email
  nameWithType: User.Email
- uid: Project.Domain.Users.User.FirstName
  name: FirstName
  href: api/Project.Domain.Users.User.html#Project_Domain_Users_User_FirstName
  commentId: P:Project.Domain.Users.User.FirstName
  fullName: Project.Domain.Users.User.FirstName
  nameWithType: User.FirstName
- uid: Project.Domain.Users.User.FirstName*
  name: FirstName
  href: api/Project.Domain.Users.User.html#Project_Domain_Users_User_FirstName_
  commentId: Overload:Project.Domain.Users.User.FirstName
  isSpec: "True"
  fullName: Project.Domain.Users.User.FirstName
  nameWithType: User.FirstName
- uid: Project.Domain.Users.User.Id
  name: Id
  href: api/Project.Domain.Users.User.html#Project_Domain_Users_User_Id
  commentId: P:Project.Domain.Users.User.Id
  fullName: Project.Domain.Users.User.Id
  nameWithType: User.Id
- uid: Project.Domain.Users.User.Id*
  name: Id
  href: api/Project.Domain.Users.User.html#Project_Domain_Users_User_Id_
  commentId: Overload:Project.Domain.Users.User.Id
  isSpec: "True"
  fullName: Project.Domain.Users.User.Id
  nameWithType: User.Id
- uid: Project.Domain.Users.User.LastName
  name: LastName
  href: api/Project.Domain.Users.User.html#Project_Domain_Users_User_LastName
  commentId: P:Project.Domain.Users.User.LastName
  fullName: Project.Domain.Users.User.LastName
  nameWithType: User.LastName
- uid: Project.Domain.Users.User.LastName*
  name: LastName
  href: api/Project.Domain.Users.User.html#Project_Domain_Users_User_LastName_
  commentId: Overload:Project.Domain.Users.User.LastName
  isSpec: "True"
  fullName: Project.Domain.Users.User.LastName
  nameWithType: User.LastName
- uid: Project.Domain.Users.User.UserName
  name: UserName
  href: api/Project.Domain.Users.User.html#Project_Domain_Users_User_UserName
  commentId: P:Project.Domain.Users.User.UserName
  fullName: Project.Domain.Users.User.UserName
  nameWithType: User.UserName
- uid: Project.Domain.Users.User.UserName*
  name: UserName
  href: api/Project.Domain.Users.User.html#Project_Domain_Users_User_UserName_
  commentId: Overload:Project.Domain.Users.User.UserName
  isSpec: "True"
  fullName: Project.Domain.Users.User.UserName
  nameWithType: User.UserName
- uid: Project.Domain.Users.UserId
  name: UserId
  href: api/Project.Domain.Users.UserId.html
  commentId: T:Project.Domain.Users.UserId
  fullName: Project.Domain.Users.UserId
  nameWithType: UserId
- uid: Project.Domain.Users.UserId.#ctor(System.Guid)
  name: UserId(Guid)
  href: api/Project.Domain.Users.UserId.html#Project_Domain_Users_UserId__ctor_System_Guid_
  commentId: M:Project.Domain.Users.UserId.#ctor(System.Guid)
  name.vb: New(Guid)
  fullName: Project.Domain.Users.UserId.UserId(System.Guid)
  fullName.vb: Project.Domain.Users.UserId.New(System.Guid)
  nameWithType: UserId.UserId(Guid)
  nameWithType.vb: UserId.New(Guid)
- uid: Project.Domain.Users.UserId.#ctor(System.String)
  name: UserId(string)
  href: api/Project.Domain.Users.UserId.html#Project_Domain_Users_UserId__ctor_System_String_
  commentId: M:Project.Domain.Users.UserId.#ctor(System.String)
  name.vb: New(String)
  fullName: Project.Domain.Users.UserId.UserId(string)
  fullName.vb: Project.Domain.Users.UserId.New(String)
  nameWithType: UserId.UserId(string)
  nameWithType.vb: UserId.New(String)
- uid: Project.Domain.Users.UserId.#ctor*
  name: UserId
  href: api/Project.Domain.Users.UserId.html#Project_Domain_Users_UserId__ctor_
  commentId: Overload:Project.Domain.Users.UserId.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Project.Domain.Users.UserId.UserId
  fullName.vb: Project.Domain.Users.UserId.New
  nameWithType: UserId.UserId
  nameWithType.vb: UserId.New
- uid: Project.Domain.Users.UserId.NewId
  name: NewId()
  href: api/Project.Domain.Users.UserId.html#Project_Domain_Users_UserId_NewId
  commentId: M:Project.Domain.Users.UserId.NewId
  fullName: Project.Domain.Users.UserId.NewId()
  nameWithType: UserId.NewId()
- uid: Project.Domain.Users.UserId.NewId*
  name: NewId
  href: api/Project.Domain.Users.UserId.html#Project_Domain_Users_UserId_NewId_
  commentId: Overload:Project.Domain.Users.UserId.NewId
  isSpec: "True"
  fullName: Project.Domain.Users.UserId.NewId
  nameWithType: UserId.NewId
- uid: Project.Infrastructure
  name: Project.Infrastructure
  href: api/Project.Infrastructure.html
  commentId: N:Project.Infrastructure
  fullName: Project.Infrastructure
  nameWithType: Project.Infrastructure
- uid: Project.Infrastructure.Database
  name: Project.Infrastructure.Database
  href: api/Project.Infrastructure.Database.html
  commentId: N:Project.Infrastructure.Database
  fullName: Project.Infrastructure.Database
  nameWithType: Project.Infrastructure.Database
- uid: Project.Infrastructure.Database.ApplicationDbContext
  name: ApplicationDbContext
  href: api/Project.Infrastructure.Database.ApplicationDbContext.html
  commentId: T:Project.Infrastructure.Database.ApplicationDbContext
  fullName: Project.Infrastructure.Database.ApplicationDbContext
  nameWithType: ApplicationDbContext
- uid: Project.Infrastructure.Database.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Project.Infrastructure.Database.ApplicationDbContext})
  name: ApplicationDbContext(DbContextOptions<ApplicationDbContext>)
  href: api/Project.Infrastructure.Database.ApplicationDbContext.html#Project_Infrastructure_Database_ApplicationDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_Project_Infrastructure_Database_ApplicationDbContext__
  commentId: M:Project.Infrastructure.Database.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Project.Infrastructure.Database.ApplicationDbContext})
  name.vb: New(DbContextOptions(Of ApplicationDbContext))
  fullName: Project.Infrastructure.Database.ApplicationDbContext.ApplicationDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<Project.Infrastructure.Database.ApplicationDbContext>)
  fullName.vb: Project.Infrastructure.Database.ApplicationDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of Project.Infrastructure.Database.ApplicationDbContext))
  nameWithType: ApplicationDbContext.ApplicationDbContext(DbContextOptions<ApplicationDbContext>)
  nameWithType.vb: ApplicationDbContext.New(DbContextOptions(Of ApplicationDbContext))
- uid: Project.Infrastructure.Database.ApplicationDbContext.#ctor*
  name: ApplicationDbContext
  href: api/Project.Infrastructure.Database.ApplicationDbContext.html#Project_Infrastructure_Database_ApplicationDbContext__ctor_
  commentId: Overload:Project.Infrastructure.Database.ApplicationDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Project.Infrastructure.Database.ApplicationDbContext.ApplicationDbContext
  fullName.vb: Project.Infrastructure.Database.ApplicationDbContext.New
  nameWithType: ApplicationDbContext.ApplicationDbContext
  nameWithType.vb: ApplicationDbContext.New
- uid: Project.Infrastructure.Database.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/Project.Infrastructure.Database.ApplicationDbContext.html#Project_Infrastructure_Database_ApplicationDbContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Project.Infrastructure.Database.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Project.Infrastructure.Database.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: ApplicationDbContext.OnModelCreating(ModelBuilder)
- uid: Project.Infrastructure.Database.ApplicationDbContext.OnModelCreating*
  name: OnModelCreating
  href: api/Project.Infrastructure.Database.ApplicationDbContext.html#Project_Infrastructure_Database_ApplicationDbContext_OnModelCreating_
  commentId: Overload:Project.Infrastructure.Database.ApplicationDbContext.OnModelCreating
  isSpec: "True"
  fullName: Project.Infrastructure.Database.ApplicationDbContext.OnModelCreating
  nameWithType: ApplicationDbContext.OnModelCreating
- uid: Project.Infrastructure.Domain.Users
  name: Project.Infrastructure.Domain.Users
  href: api/Project.Infrastructure.Domain.Users.html
  commentId: N:Project.Infrastructure.Domain.Users
  fullName: Project.Infrastructure.Domain.Users
  nameWithType: Project.Infrastructure.Domain.Users
- uid: Project.Infrastructure.Domain.Users.UserRepository
  name: UserRepository
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html
  commentId: T:Project.Infrastructure.Domain.Users.UserRepository
  fullName: Project.Infrastructure.Domain.Users.UserRepository
  nameWithType: UserRepository
- uid: Project.Infrastructure.Domain.Users.UserRepository.#ctor(Microsoft.AspNetCore.Identity.UserManager{Project.Infrastructure.Users.IdentityUserAdapter},Project.Infrastructure.Database.ApplicationDbContext)
  name: UserRepository(UserManager<IdentityUserAdapter>, ApplicationDbContext)
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository__ctor_Microsoft_AspNetCore_Identity_UserManager_Project_Infrastructure_Users_IdentityUserAdapter__Project_Infrastructure_Database_ApplicationDbContext_
  commentId: M:Project.Infrastructure.Domain.Users.UserRepository.#ctor(Microsoft.AspNetCore.Identity.UserManager{Project.Infrastructure.Users.IdentityUserAdapter},Project.Infrastructure.Database.ApplicationDbContext)
  name.vb: New(UserManager(Of IdentityUserAdapter), ApplicationDbContext)
  fullName: Project.Infrastructure.Domain.Users.UserRepository.UserRepository(Microsoft.AspNetCore.Identity.UserManager<Project.Infrastructure.Users.IdentityUserAdapter>, Project.Infrastructure.Database.ApplicationDbContext)
  fullName.vb: Project.Infrastructure.Domain.Users.UserRepository.New(Microsoft.AspNetCore.Identity.UserManager(Of Project.Infrastructure.Users.IdentityUserAdapter), Project.Infrastructure.Database.ApplicationDbContext)
  nameWithType: UserRepository.UserRepository(UserManager<IdentityUserAdapter>, ApplicationDbContext)
  nameWithType.vb: UserRepository.New(UserManager(Of IdentityUserAdapter), ApplicationDbContext)
- uid: Project.Infrastructure.Domain.Users.UserRepository.#ctor*
  name: UserRepository
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository__ctor_
  commentId: Overload:Project.Infrastructure.Domain.Users.UserRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Project.Infrastructure.Domain.Users.UserRepository.UserRepository
  fullName.vb: Project.Infrastructure.Domain.Users.UserRepository.New
  nameWithType: UserRepository.UserRepository
  nameWithType.vb: UserRepository.New
- uid: Project.Infrastructure.Domain.Users.UserRepository.CheckPassowrd(Project.Domain.Users.User,System.String)
  name: CheckPassowrd(User, string)
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_CheckPassowrd_Project_Domain_Users_User_System_String_
  commentId: M:Project.Infrastructure.Domain.Users.UserRepository.CheckPassowrd(Project.Domain.Users.User,System.String)
  name.vb: CheckPassowrd(User, String)
  fullName: Project.Infrastructure.Domain.Users.UserRepository.CheckPassowrd(Project.Domain.Users.User, string)
  fullName.vb: Project.Infrastructure.Domain.Users.UserRepository.CheckPassowrd(Project.Domain.Users.User, String)
  nameWithType: UserRepository.CheckPassowrd(User, string)
  nameWithType.vb: UserRepository.CheckPassowrd(User, String)
- uid: Project.Infrastructure.Domain.Users.UserRepository.CheckPassowrd*
  name: CheckPassowrd
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_CheckPassowrd_
  commentId: Overload:Project.Infrastructure.Domain.Users.UserRepository.CheckPassowrd
  isSpec: "True"
  fullName: Project.Infrastructure.Domain.Users.UserRepository.CheckPassowrd
  nameWithType: UserRepository.CheckPassowrd
- uid: Project.Infrastructure.Domain.Users.UserRepository.CreateAsync(Project.Domain.Users.User,System.String)
  name: CreateAsync(User, string)
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_CreateAsync_Project_Domain_Users_User_System_String_
  commentId: M:Project.Infrastructure.Domain.Users.UserRepository.CreateAsync(Project.Domain.Users.User,System.String)
  name.vb: CreateAsync(User, String)
  fullName: Project.Infrastructure.Domain.Users.UserRepository.CreateAsync(Project.Domain.Users.User, string)
  fullName.vb: Project.Infrastructure.Domain.Users.UserRepository.CreateAsync(Project.Domain.Users.User, String)
  nameWithType: UserRepository.CreateAsync(User, string)
  nameWithType.vb: UserRepository.CreateAsync(User, String)
- uid: Project.Infrastructure.Domain.Users.UserRepository.CreateAsync*
  name: CreateAsync
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_CreateAsync_
  commentId: Overload:Project.Infrastructure.Domain.Users.UserRepository.CreateAsync
  isSpec: "True"
  fullName: Project.Infrastructure.Domain.Users.UserRepository.CreateAsync
  nameWithType: UserRepository.CreateAsync
- uid: Project.Infrastructure.Domain.Users.UserRepository.DeleteAsync(Project.Domain.Users.UserId)
  name: DeleteAsync(UserId)
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_DeleteAsync_Project_Domain_Users_UserId_
  commentId: M:Project.Infrastructure.Domain.Users.UserRepository.DeleteAsync(Project.Domain.Users.UserId)
  fullName: Project.Infrastructure.Domain.Users.UserRepository.DeleteAsync(Project.Domain.Users.UserId)
  nameWithType: UserRepository.DeleteAsync(UserId)
- uid: Project.Infrastructure.Domain.Users.UserRepository.DeleteAsync*
  name: DeleteAsync
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_DeleteAsync_
  commentId: Overload:Project.Infrastructure.Domain.Users.UserRepository.DeleteAsync
  isSpec: "True"
  fullName: Project.Infrastructure.Domain.Users.UserRepository.DeleteAsync
  nameWithType: UserRepository.DeleteAsync
- uid: Project.Infrastructure.Domain.Users.UserRepository.GetByEmailAsync(System.String)
  name: GetByEmailAsync(string)
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_GetByEmailAsync_System_String_
  commentId: M:Project.Infrastructure.Domain.Users.UserRepository.GetByEmailAsync(System.String)
  name.vb: GetByEmailAsync(String)
  fullName: Project.Infrastructure.Domain.Users.UserRepository.GetByEmailAsync(string)
  fullName.vb: Project.Infrastructure.Domain.Users.UserRepository.GetByEmailAsync(String)
  nameWithType: UserRepository.GetByEmailAsync(string)
  nameWithType.vb: UserRepository.GetByEmailAsync(String)
- uid: Project.Infrastructure.Domain.Users.UserRepository.GetByEmailAsync*
  name: GetByEmailAsync
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_GetByEmailAsync_
  commentId: Overload:Project.Infrastructure.Domain.Users.UserRepository.GetByEmailAsync
  isSpec: "True"
  fullName: Project.Infrastructure.Domain.Users.UserRepository.GetByEmailAsync
  nameWithType: UserRepository.GetByEmailAsync
- uid: Project.Infrastructure.Domain.Users.UserRepository.GetByIdAsync(Project.Domain.Users.UserId)
  name: GetByIdAsync(UserId)
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_GetByIdAsync_Project_Domain_Users_UserId_
  commentId: M:Project.Infrastructure.Domain.Users.UserRepository.GetByIdAsync(Project.Domain.Users.UserId)
  fullName: Project.Infrastructure.Domain.Users.UserRepository.GetByIdAsync(Project.Domain.Users.UserId)
  nameWithType: UserRepository.GetByIdAsync(UserId)
- uid: Project.Infrastructure.Domain.Users.UserRepository.GetByIdAsync*
  name: GetByIdAsync
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_GetByIdAsync_
  commentId: Overload:Project.Infrastructure.Domain.Users.UserRepository.GetByIdAsync
  isSpec: "True"
  fullName: Project.Infrastructure.Domain.Users.UserRepository.GetByIdAsync
  nameWithType: UserRepository.GetByIdAsync
- uid: Project.Infrastructure.Domain.Users.UserRepository.GetUserByUsernameAsync(System.String)
  name: GetUserByUsernameAsync(string)
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_GetUserByUsernameAsync_System_String_
  commentId: M:Project.Infrastructure.Domain.Users.UserRepository.GetUserByUsernameAsync(System.String)
  name.vb: GetUserByUsernameAsync(String)
  fullName: Project.Infrastructure.Domain.Users.UserRepository.GetUserByUsernameAsync(string)
  fullName.vb: Project.Infrastructure.Domain.Users.UserRepository.GetUserByUsernameAsync(String)
  nameWithType: UserRepository.GetUserByUsernameAsync(string)
  nameWithType.vb: UserRepository.GetUserByUsernameAsync(String)
- uid: Project.Infrastructure.Domain.Users.UserRepository.GetUserByUsernameAsync*
  name: GetUserByUsernameAsync
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_GetUserByUsernameAsync_
  commentId: Overload:Project.Infrastructure.Domain.Users.UserRepository.GetUserByUsernameAsync
  isSpec: "True"
  fullName: Project.Infrastructure.Domain.Users.UserRepository.GetUserByUsernameAsync
  nameWithType: UserRepository.GetUserByUsernameAsync
- uid: Project.Infrastructure.Domain.Users.UserRepository.UpdateAsync(Project.Domain.Users.User)
  name: UpdateAsync(User)
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_UpdateAsync_Project_Domain_Users_User_
  commentId: M:Project.Infrastructure.Domain.Users.UserRepository.UpdateAsync(Project.Domain.Users.User)
  fullName: Project.Infrastructure.Domain.Users.UserRepository.UpdateAsync(Project.Domain.Users.User)
  nameWithType: UserRepository.UpdateAsync(User)
- uid: Project.Infrastructure.Domain.Users.UserRepository.UpdateAsync*
  name: UpdateAsync
  href: api/Project.Infrastructure.Domain.Users.UserRepository.html#Project_Infrastructure_Domain_Users_UserRepository_UpdateAsync_
  commentId: Overload:Project.Infrastructure.Domain.Users.UserRepository.UpdateAsync
  isSpec: "True"
  fullName: Project.Infrastructure.Domain.Users.UserRepository.UpdateAsync
  nameWithType: UserRepository.UpdateAsync
- uid: Project.Infrastructure.InfrastructureServices
  name: InfrastructureServices
  href: api/Project.Infrastructure.InfrastructureServices.html
  commentId: T:Project.Infrastructure.InfrastructureServices
  fullName: Project.Infrastructure.InfrastructureServices
  nameWithType: InfrastructureServices
- uid: Project.Infrastructure.InfrastructureServices.AddInfrastructureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: AddInfrastructureServices(IServiceCollection, IConfiguration)
  href: api/Project.Infrastructure.InfrastructureServices.html#Project_Infrastructure_InfrastructureServices_AddInfrastructureServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Project.Infrastructure.InfrastructureServices.AddInfrastructureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: Project.Infrastructure.InfrastructureServices.AddInfrastructureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: InfrastructureServices.AddInfrastructureServices(IServiceCollection, IConfiguration)
- uid: Project.Infrastructure.InfrastructureServices.AddInfrastructureServices*
  name: AddInfrastructureServices
  href: api/Project.Infrastructure.InfrastructureServices.html#Project_Infrastructure_InfrastructureServices_AddInfrastructureServices_
  commentId: Overload:Project.Infrastructure.InfrastructureServices.AddInfrastructureServices
  isSpec: "True"
  fullName: Project.Infrastructure.InfrastructureServices.AddInfrastructureServices
  nameWithType: InfrastructureServices.AddInfrastructureServices
- uid: Project.Infrastructure.Migrations
  name: Project.Infrastructure.Migrations
  href: api/Project.Infrastructure.Migrations.html
  commentId: N:Project.Infrastructure.Migrations
  fullName: Project.Infrastructure.Migrations
  nameWithType: Project.Infrastructure.Migrations
- uid: Project.Infrastructure.Migrations.Init
  name: Init
  href: api/Project.Infrastructure.Migrations.Init.html
  commentId: T:Project.Infrastructure.Migrations.Init
  fullName: Project.Infrastructure.Migrations.Init
  nameWithType: Init
- uid: Project.Infrastructure.Migrations.Init.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/Project.Infrastructure.Migrations.Init.html#Project_Infrastructure_Migrations_Init_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Project.Infrastructure.Migrations.Init.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Project.Infrastructure.Migrations.Init.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: Init.BuildTargetModel(ModelBuilder)
- uid: Project.Infrastructure.Migrations.Init.BuildTargetModel*
  name: BuildTargetModel
  href: api/Project.Infrastructure.Migrations.Init.html#Project_Infrastructure_Migrations_Init_BuildTargetModel_
  commentId: Overload:Project.Infrastructure.Migrations.Init.BuildTargetModel
  isSpec: "True"
  fullName: Project.Infrastructure.Migrations.Init.BuildTargetModel
  nameWithType: Init.BuildTargetModel
- uid: Project.Infrastructure.Migrations.Init.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/Project.Infrastructure.Migrations.Init.html#Project_Infrastructure_Migrations_Init_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Project.Infrastructure.Migrations.Init.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Project.Infrastructure.Migrations.Init.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Init.Down(MigrationBuilder)
- uid: Project.Infrastructure.Migrations.Init.Down*
  name: Down
  href: api/Project.Infrastructure.Migrations.Init.html#Project_Infrastructure_Migrations_Init_Down_
  commentId: Overload:Project.Infrastructure.Migrations.Init.Down
  isSpec: "True"
  fullName: Project.Infrastructure.Migrations.Init.Down
  nameWithType: Init.Down
- uid: Project.Infrastructure.Migrations.Init.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/Project.Infrastructure.Migrations.Init.html#Project_Infrastructure_Migrations_Init_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Project.Infrastructure.Migrations.Init.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Project.Infrastructure.Migrations.Init.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Init.Up(MigrationBuilder)
- uid: Project.Infrastructure.Migrations.Init.Up*
  name: Up
  href: api/Project.Infrastructure.Migrations.Init.html#Project_Infrastructure_Migrations_Init_Up_
  commentId: Overload:Project.Infrastructure.Migrations.Init.Up
  isSpec: "True"
  fullName: Project.Infrastructure.Migrations.Init.Up
  nameWithType: Init.Up
- uid: Project.Infrastructure.SeedWork
  name: Project.Infrastructure.SeedWork
  href: api/Project.Infrastructure.SeedWork.html
  commentId: N:Project.Infrastructure.SeedWork
  fullName: Project.Infrastructure.SeedWork
  nameWithType: Project.Infrastructure.SeedWork
- uid: Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector
  name: StronglyTypedIdValueConverterSelector
  href: api/Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.html
  commentId: T:Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector
  fullName: Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector
  nameWithType: StronglyTypedIdValueConverterSelector
- uid: Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.#ctor(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterSelectorDependencies)
  name: StronglyTypedIdValueConverterSelector(ValueConverterSelectorDependencies)
  href: api/Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.html#Project_Infrastructure_SeedWork_StronglyTypedIdValueConverterSelector__ctor_Microsoft_EntityFrameworkCore_Storage_ValueConversion_ValueConverterSelectorDependencies_
  commentId: M:Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.#ctor(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterSelectorDependencies)
  name.vb: New(ValueConverterSelectorDependencies)
  fullName: Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.StronglyTypedIdValueConverterSelector(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterSelectorDependencies)
  fullName.vb: Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.New(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterSelectorDependencies)
  nameWithType: StronglyTypedIdValueConverterSelector.StronglyTypedIdValueConverterSelector(ValueConverterSelectorDependencies)
  nameWithType.vb: StronglyTypedIdValueConverterSelector.New(ValueConverterSelectorDependencies)
- uid: Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.#ctor*
  name: StronglyTypedIdValueConverterSelector
  href: api/Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.html#Project_Infrastructure_SeedWork_StronglyTypedIdValueConverterSelector__ctor_
  commentId: Overload:Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.StronglyTypedIdValueConverterSelector
  fullName.vb: Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.New
  nameWithType: StronglyTypedIdValueConverterSelector.StronglyTypedIdValueConverterSelector
  nameWithType.vb: StronglyTypedIdValueConverterSelector.New
- uid: Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.Select(System.Type,System.Type)
  name: Select(Type, Type?)
  href: api/Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.html#Project_Infrastructure_SeedWork_StronglyTypedIdValueConverterSelector_Select_System_Type_System_Type_
  commentId: M:Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.Select(System.Type,System.Type)
  name.vb: Select(Type, Type)
  fullName: Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.Select(System.Type, System.Type?)
  fullName.vb: Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.Select(System.Type, System.Type)
  nameWithType: StronglyTypedIdValueConverterSelector.Select(Type, Type?)
  nameWithType.vb: StronglyTypedIdValueConverterSelector.Select(Type, Type)
- uid: Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.Select*
  name: Select
  href: api/Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.html#Project_Infrastructure_SeedWork_StronglyTypedIdValueConverterSelector_Select_
  commentId: Overload:Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.Select
  isSpec: "True"
  fullName: Project.Infrastructure.SeedWork.StronglyTypedIdValueConverterSelector.Select
  nameWithType: StronglyTypedIdValueConverterSelector.Select
- uid: Project.Infrastructure.SeedWork.TypedIdValueConverter`1
  name: TypedIdValueConverter<TTypedIdValue>
  href: api/Project.Infrastructure.SeedWork.TypedIdValueConverter-1.html
  commentId: T:Project.Infrastructure.SeedWork.TypedIdValueConverter`1
  name.vb: TypedIdValueConverter(Of TTypedIdValue)
  fullName: Project.Infrastructure.SeedWork.TypedIdValueConverter<TTypedIdValue>
  fullName.vb: Project.Infrastructure.SeedWork.TypedIdValueConverter(Of TTypedIdValue)
  nameWithType: TypedIdValueConverter<TTypedIdValue>
  nameWithType.vb: TypedIdValueConverter(Of TTypedIdValue)
- uid: Project.Infrastructure.SeedWork.TypedIdValueConverter`1.#ctor(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints)
  name: TypedIdValueConverter(ConverterMappingHints?)
  href: api/Project.Infrastructure.SeedWork.TypedIdValueConverter-1.html#Project_Infrastructure_SeedWork_TypedIdValueConverter_1__ctor_Microsoft_EntityFrameworkCore_Storage_ValueConversion_ConverterMappingHints_
  commentId: M:Project.Infrastructure.SeedWork.TypedIdValueConverter`1.#ctor(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints)
  name.vb: New(ConverterMappingHints)
  fullName: Project.Infrastructure.SeedWork.TypedIdValueConverter<TTypedIdValue>.TypedIdValueConverter(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints?)
  fullName.vb: Project.Infrastructure.SeedWork.TypedIdValueConverter(Of TTypedIdValue).New(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints)
  nameWithType: TypedIdValueConverter<TTypedIdValue>.TypedIdValueConverter(ConverterMappingHints?)
  nameWithType.vb: TypedIdValueConverter(Of TTypedIdValue).New(ConverterMappingHints)
- uid: Project.Infrastructure.SeedWork.TypedIdValueConverter`1.#ctor*
  name: TypedIdValueConverter
  href: api/Project.Infrastructure.SeedWork.TypedIdValueConverter-1.html#Project_Infrastructure_SeedWork_TypedIdValueConverter_1__ctor_
  commentId: Overload:Project.Infrastructure.SeedWork.TypedIdValueConverter`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Project.Infrastructure.SeedWork.TypedIdValueConverter<TTypedIdValue>.TypedIdValueConverter
  fullName.vb: Project.Infrastructure.SeedWork.TypedIdValueConverter(Of TTypedIdValue).New
  nameWithType: TypedIdValueConverter<TTypedIdValue>.TypedIdValueConverter
  nameWithType.vb: TypedIdValueConverter(Of TTypedIdValue).New
- uid: Project.Infrastructure.Users
  name: Project.Infrastructure.Users
  href: api/Project.Infrastructure.Users.html
  commentId: N:Project.Infrastructure.Users
  fullName: Project.Infrastructure.Users
  nameWithType: Project.Infrastructure.Users
- uid: Project.Infrastructure.Users.IdentityUserAdapter
  name: IdentityUserAdapter
  href: api/Project.Infrastructure.Users.IdentityUserAdapter.html
  commentId: T:Project.Infrastructure.Users.IdentityUserAdapter
  fullName: Project.Infrastructure.Users.IdentityUserAdapter
  nameWithType: IdentityUserAdapter
- uid: Project.Infrastructure.Users.IdentityUserAdapter.FirstName
  name: FirstName
  href: api/Project.Infrastructure.Users.IdentityUserAdapter.html#Project_Infrastructure_Users_IdentityUserAdapter_FirstName
  commentId: P:Project.Infrastructure.Users.IdentityUserAdapter.FirstName
  fullName: Project.Infrastructure.Users.IdentityUserAdapter.FirstName
  nameWithType: IdentityUserAdapter.FirstName
- uid: Project.Infrastructure.Users.IdentityUserAdapter.FirstName*
  name: FirstName
  href: api/Project.Infrastructure.Users.IdentityUserAdapter.html#Project_Infrastructure_Users_IdentityUserAdapter_FirstName_
  commentId: Overload:Project.Infrastructure.Users.IdentityUserAdapter.FirstName
  isSpec: "True"
  fullName: Project.Infrastructure.Users.IdentityUserAdapter.FirstName
  nameWithType: IdentityUserAdapter.FirstName
- uid: Project.Infrastructure.Users.IdentityUserAdapter.FromDomain(Project.Domain.Users.User)
  name: FromDomain(User)
  href: api/Project.Infrastructure.Users.IdentityUserAdapter.html#Project_Infrastructure_Users_IdentityUserAdapter_FromDomain_Project_Domain_Users_User_
  commentId: M:Project.Infrastructure.Users.IdentityUserAdapter.FromDomain(Project.Domain.Users.User)
  fullName: Project.Infrastructure.Users.IdentityUserAdapter.FromDomain(Project.Domain.Users.User)
  nameWithType: IdentityUserAdapter.FromDomain(User)
- uid: Project.Infrastructure.Users.IdentityUserAdapter.FromDomain*
  name: FromDomain
  href: api/Project.Infrastructure.Users.IdentityUserAdapter.html#Project_Infrastructure_Users_IdentityUserAdapter_FromDomain_
  commentId: Overload:Project.Infrastructure.Users.IdentityUserAdapter.FromDomain
  isSpec: "True"
  fullName: Project.Infrastructure.Users.IdentityUserAdapter.FromDomain
  nameWithType: IdentityUserAdapter.FromDomain
- uid: Project.Infrastructure.Users.IdentityUserAdapter.LastName
  name: LastName
  href: api/Project.Infrastructure.Users.IdentityUserAdapter.html#Project_Infrastructure_Users_IdentityUserAdapter_LastName
  commentId: P:Project.Infrastructure.Users.IdentityUserAdapter.LastName
  fullName: Project.Infrastructure.Users.IdentityUserAdapter.LastName
  nameWithType: IdentityUserAdapter.LastName
- uid: Project.Infrastructure.Users.IdentityUserAdapter.LastName*
  name: LastName
  href: api/Project.Infrastructure.Users.IdentityUserAdapter.html#Project_Infrastructure_Users_IdentityUserAdapter_LastName_
  commentId: Overload:Project.Infrastructure.Users.IdentityUserAdapter.LastName
  isSpec: "True"
  fullName: Project.Infrastructure.Users.IdentityUserAdapter.LastName
  nameWithType: IdentityUserAdapter.LastName
- uid: Project.Infrastructure.Users.IdentityUserAdapter.ToDomain
  name: ToDomain()
  href: api/Project.Infrastructure.Users.IdentityUserAdapter.html#Project_Infrastructure_Users_IdentityUserAdapter_ToDomain
  commentId: M:Project.Infrastructure.Users.IdentityUserAdapter.ToDomain
  fullName: Project.Infrastructure.Users.IdentityUserAdapter.ToDomain()
  nameWithType: IdentityUserAdapter.ToDomain()
- uid: Project.Infrastructure.Users.IdentityUserAdapter.ToDomain*
  name: ToDomain
  href: api/Project.Infrastructure.Users.IdentityUserAdapter.html#Project_Infrastructure_Users_IdentityUserAdapter_ToDomain_
  commentId: Overload:Project.Infrastructure.Users.IdentityUserAdapter.ToDomain
  isSpec: "True"
  fullName: Project.Infrastructure.Users.IdentityUserAdapter.ToDomain
  nameWithType: IdentityUserAdapter.ToDomain
- uid: Project.Tests
  name: Project.Tests
  href: api/Project.Tests.html
  commentId: N:Project.Tests
  fullName: Project.Tests
  nameWithType: Project.Tests
- uid: Project.Tests.UnitTest1
  name: UnitTest1
  href: api/Project.Tests.UnitTest1.html
  commentId: T:Project.Tests.UnitTest1
  fullName: Project.Tests.UnitTest1
  nameWithType: UnitTest1
- uid: Project.Tests.UnitTest1.Test1
  name: Test1()
  href: api/Project.Tests.UnitTest1.html#Project_Tests_UnitTest1_Test1
  commentId: M:Project.Tests.UnitTest1.Test1
  fullName: Project.Tests.UnitTest1.Test1()
  nameWithType: UnitTest1.Test1()
- uid: Project.Tests.UnitTest1.Test1*
  name: Test1
  href: api/Project.Tests.UnitTest1.html#Project_Tests_UnitTest1_Test1_
  commentId: Overload:Project.Tests.UnitTest1.Test1
  isSpec: "True"
  fullName: Project.Tests.UnitTest1.Test1
  nameWithType: UnitTest1.Test1
