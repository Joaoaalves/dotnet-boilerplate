### YamlMime:ManagedReference
items:
- uid: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1
  commentId: T:Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1
  id: FakeUserAwareQuery`1
  parent: Project.Tests.UnitTests.Application.Fakes
  children:
  - Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1.InjectUser(Project.Domain.Users.User)
  - Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1.InjectedUser
  langs:
  - csharp
  - vb
  name: FakeUserAwareQuery<TResult>
  nameWithType: FakeUserAwareQuery<TResult>
  fullName: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery<TResult>
  type: Class
  source:
    remote:
      path: src/tests/Project.Tests.UnitTests/Application/Fakes/FakeUserAwareQuery.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: FakeUserAwareQuery
    path: ../src/tests/Project.Tests.UnitTests/Application/Fakes/FakeUserAwareQuery.cs
    startLine: 5
  assemblies:
  - Project.Tests.UnitTests
  namespace: Project.Tests.UnitTests.Application.Fakes
  syntax:
    content: 'public class FakeUserAwareQuery<TResult> : IRequest<TResult>, IUserAware'
    typeParameters:
    - id: TResult
    content.vb: Public Class FakeUserAwareQuery(Of TResult) Implements IRequest(Of TResult), IUserAware
  inheritance:
  - System.Object
  implements:
  - Project.Domain.SeedWork.IRequest{{TResult}}
  - Project.Domain.SeedWork.IUserAware
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: FakeUserAwareQuery(Of TResult)
  fullName.vb: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery(Of TResult)
  name.vb: FakeUserAwareQuery(Of TResult)
- uid: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1.InjectedUser
  commentId: P:Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1.InjectedUser
  id: InjectedUser
  parent: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1
  langs:
  - csharp
  - vb
  name: InjectedUser
  nameWithType: FakeUserAwareQuery<TResult>.InjectedUser
  fullName: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery<TResult>.InjectedUser
  type: Property
  source:
    remote:
      path: src/tests/Project.Tests.UnitTests/Application/Fakes/FakeUserAwareQuery.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: InjectedUser
    path: ../src/tests/Project.Tests.UnitTests/Application/Fakes/FakeUserAwareQuery.cs
    startLine: 7
  assemblies:
  - Project.Tests.UnitTests
  namespace: Project.Tests.UnitTests.Application.Fakes
  syntax:
    content: public User? InjectedUser { get; }
    parameters: []
    return:
      type: Project.Domain.Users.User
    content.vb: Public Property InjectedUser As User
  overload: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1.InjectedUser*
  nameWithType.vb: FakeUserAwareQuery(Of TResult).InjectedUser
  fullName.vb: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery(Of TResult).InjectedUser
- uid: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1.InjectUser(Project.Domain.Users.User)
  commentId: M:Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1.InjectUser(Project.Domain.Users.User)
  id: InjectUser(Project.Domain.Users.User)
  parent: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1
  langs:
  - csharp
  - vb
  name: InjectUser(User)
  nameWithType: FakeUserAwareQuery<TResult>.InjectUser(User)
  fullName: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery<TResult>.InjectUser(Project.Domain.Users.User)
  type: Method
  source:
    remote:
      path: src/tests/Project.Tests.UnitTests/Application/Fakes/FakeUserAwareQuery.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: InjectUser
    path: ../src/tests/Project.Tests.UnitTests/Application/Fakes/FakeUserAwareQuery.cs
    startLine: 9
  assemblies:
  - Project.Tests.UnitTests
  namespace: Project.Tests.UnitTests.Application.Fakes
  example: []
  syntax:
    content: public void InjectUser(User user)
    parameters:
    - id: user
      type: Project.Domain.Users.User
    content.vb: Public Sub InjectUser(user As User)
  overload: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1.InjectUser*
  implements:
  - Project.Domain.SeedWork.IUserAware.InjectUser(Project.Domain.Users.User)
  nameWithType.vb: FakeUserAwareQuery(Of TResult).InjectUser(User)
  fullName.vb: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery(Of TResult).InjectUser(Project.Domain.Users.User)
references:
- uid: Project.Tests.UnitTests.Application.Fakes
  commentId: N:Project.Tests.UnitTests.Application.Fakes
  href: Project.html
  name: Project.Tests.UnitTests.Application.Fakes
  nameWithType: Project.Tests.UnitTests.Application.Fakes
  fullName: Project.Tests.UnitTests.Application.Fakes
  spec.csharp:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Tests
    name: Tests
    href: Project.Tests.html
  - name: .
  - uid: Project.Tests.UnitTests
    name: UnitTests
    href: Project.Tests.UnitTests.html
  - name: .
  - uid: Project.Tests.UnitTests.Application
    name: Application
    href: Project.Tests.UnitTests.Application.html
  - name: .
  - uid: Project.Tests.UnitTests.Application.Fakes
    name: Fakes
    href: Project.Tests.UnitTests.Application.Fakes.html
  spec.vb:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Tests
    name: Tests
    href: Project.Tests.html
  - name: .
  - uid: Project.Tests.UnitTests
    name: UnitTests
    href: Project.Tests.UnitTests.html
  - name: .
  - uid: Project.Tests.UnitTests.Application
    name: Application
    href: Project.Tests.UnitTests.Application.html
  - name: .
  - uid: Project.Tests.UnitTests.Application.Fakes
    name: Fakes
    href: Project.Tests.UnitTests.Application.Fakes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Project.Domain.SeedWork.IRequest{{TResult}}
  commentId: T:Project.Domain.SeedWork.IRequest{`0}
  parent: Project.Domain.SeedWork
  definition: Project.Domain.SeedWork.IRequest`1
  name: IRequest<TResult>
  nameWithType: IRequest<TResult>
  fullName: Project.Domain.SeedWork.IRequest<TResult>
  nameWithType.vb: IRequest(Of TResult)
  fullName.vb: Project.Domain.SeedWork.IRequest(Of TResult)
  name.vb: IRequest(Of TResult)
  spec.csharp:
  - uid: Project.Domain.SeedWork.IRequest`1
    name: IRequest
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: Project.Domain.SeedWork.IRequest`1
    name: IRequest
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Project.Domain.SeedWork.IUserAware
  commentId: T:Project.Domain.SeedWork.IUserAware
  parent: Project.Domain.SeedWork
  href: Project.Domain.SeedWork.IUserAware.html
  name: IUserAware
  nameWithType: IUserAware
  fullName: Project.Domain.SeedWork.IUserAware
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Project.Domain.SeedWork.IRequest`1
  commentId: T:Project.Domain.SeedWork.IRequest`1
  href: Project.Domain.SeedWork.IRequest-1.html
  name: IRequest<TResponse>
  nameWithType: IRequest<TResponse>
  fullName: Project.Domain.SeedWork.IRequest<TResponse>
  nameWithType.vb: IRequest(Of TResponse)
  fullName.vb: Project.Domain.SeedWork.IRequest(Of TResponse)
  name.vb: IRequest(Of TResponse)
  spec.csharp:
  - uid: Project.Domain.SeedWork.IRequest`1
    name: IRequest
    href: Project.Domain.SeedWork.IRequest-1.html
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: Project.Domain.SeedWork.IRequest`1
    name: IRequest
    href: Project.Domain.SeedWork.IRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: Project.Domain.SeedWork
  commentId: N:Project.Domain.SeedWork
  href: Project.html
  name: Project.Domain.SeedWork
  nameWithType: Project.Domain.SeedWork
  fullName: Project.Domain.SeedWork
  spec.csharp:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Domain
    name: Domain
    href: Project.Domain.html
  - name: .
  - uid: Project.Domain.SeedWork
    name: SeedWork
    href: Project.Domain.SeedWork.html
  spec.vb:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Domain
    name: Domain
    href: Project.Domain.html
  - name: .
  - uid: Project.Domain.SeedWork
    name: SeedWork
    href: Project.Domain.SeedWork.html
- uid: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1.InjectedUser*
  commentId: Overload:Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1.InjectedUser
  href: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery-1.html#Project_Tests_UnitTests_Application_Fakes_FakeUserAwareQuery_1_InjectedUser
  name: InjectedUser
  nameWithType: FakeUserAwareQuery<TResult>.InjectedUser
  fullName: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery<TResult>.InjectedUser
  nameWithType.vb: FakeUserAwareQuery(Of TResult).InjectedUser
  fullName.vb: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery(Of TResult).InjectedUser
- uid: Project.Domain.Users.User
  commentId: T:Project.Domain.Users.User
  parent: Project.Domain.Users
  href: Project.Domain.Users.User.html
  name: User
  nameWithType: User
  fullName: Project.Domain.Users.User
- uid: Project.Domain.Users
  commentId: N:Project.Domain.Users
  href: Project.html
  name: Project.Domain.Users
  nameWithType: Project.Domain.Users
  fullName: Project.Domain.Users
  spec.csharp:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Domain
    name: Domain
    href: Project.Domain.html
  - name: .
  - uid: Project.Domain.Users
    name: Users
    href: Project.Domain.Users.html
  spec.vb:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Domain
    name: Domain
    href: Project.Domain.html
  - name: .
  - uid: Project.Domain.Users
    name: Users
    href: Project.Domain.Users.html
- uid: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1.InjectUser*
  commentId: Overload:Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery`1.InjectUser
  href: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery-1.html#Project_Tests_UnitTests_Application_Fakes_FakeUserAwareQuery_1_InjectUser_Project_Domain_Users_User_
  name: InjectUser
  nameWithType: FakeUserAwareQuery<TResult>.InjectUser
  fullName: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery<TResult>.InjectUser
  nameWithType.vb: FakeUserAwareQuery(Of TResult).InjectUser
  fullName.vb: Project.Tests.UnitTests.Application.Fakes.FakeUserAwareQuery(Of TResult).InjectUser
- uid: Project.Domain.SeedWork.IUserAware.InjectUser(Project.Domain.Users.User)
  commentId: M:Project.Domain.SeedWork.IUserAware.InjectUser(Project.Domain.Users.User)
  parent: Project.Domain.SeedWork.IUserAware
  name: InjectUser(User)
  nameWithType: IUserAware.InjectUser(User)
  fullName: Project.Domain.SeedWork.IUserAware.InjectUser(Project.Domain.Users.User)
  spec.csharp:
  - uid: Project.Domain.SeedWork.IUserAware.InjectUser(Project.Domain.Users.User)
    name: InjectUser
  - name: (
  - uid: Project.Domain.Users.User
    name: User
  - name: )
  spec.vb:
  - uid: Project.Domain.SeedWork.IUserAware.InjectUser(Project.Domain.Users.User)
    name: InjectUser
  - name: (
  - uid: Project.Domain.Users.User
    name: User
  - name: )
