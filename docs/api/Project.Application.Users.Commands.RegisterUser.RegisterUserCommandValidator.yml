### YamlMime:ManagedReference
items:
- uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator
  commentId: T:Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator
  id: RegisterUserCommandValidator
  parent: Project.Application.Users.Commands.RegisterUser
  children:
  - Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator.#ctor
  langs:
  - csharp
  - vb
  name: RegisterUserCommandValidator
  nameWithType: RegisterUserCommandValidator
  fullName: Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator
  type: Class
  source:
    remote:
      path: src/Project.Application/Users/Commands/RegisterUser/RegisterUserCommandValidator.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: RegisterUserCommandValidator
    path: ../src/Project.Application/Users/Commands/RegisterUser/RegisterUserCommandValidator.cs
    startLine: 5
  assemblies:
  - Project.Application
  namespace: Project.Application.Users.Commands.RegisterUser
  syntax:
    content: 'public class RegisterUserCommandValidator : AbstractValidator<RegisterUserCommand>, IValidator<RegisterUserCommand>, IValidator, IEnumerable<IValidationRule>, IEnumerable'
    content.vb: Public Class RegisterUserCommandValidator Inherits AbstractValidator(Of RegisterUserCommand) Implements IValidator(Of RegisterUserCommand), IValidator, IEnumerable(Of IValidationRule), IEnumerable
  inheritance:
  - System.Object
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  implements:
  - FluentValidation.IValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  - FluentValidation.IValidator
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  - System.Collections.IEnumerable
  inheritedMembers:
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Validate(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.ValidateAsync(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Validate(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.ValidateAsync(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.CreateDescriptor
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,{TProperty}}})
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Collections.Generic.IEnumerable{{TElement}}}})
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleSet(System.String,System.Action)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.When(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.When(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Unless(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Unless(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.WhenAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.WhenAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.UnlessAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.UnlessAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Include(FluentValidation.IValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Include``1(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,{TValidator}})
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.GetEnumerator
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.PreValidate(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},FluentValidation.Results.ValidationResult)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RaiseValidationException(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},FluentValidation.Results.ValidationResult)
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.OnRuleAdded(FluentValidation.IValidationRule{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.ClassLevelCascadeMode
  - FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleLevelCascadeMode
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator.#ctor
  commentId: M:Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator.#ctor
  id: '#ctor'
  parent: Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator
  langs:
  - csharp
  - vb
  name: RegisterUserCommandValidator()
  nameWithType: RegisterUserCommandValidator.RegisterUserCommandValidator()
  fullName: Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator.RegisterUserCommandValidator()
  type: Constructor
  source:
    remote:
      path: src/Project.Application/Users/Commands/RegisterUser/RegisterUserCommandValidator.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: .ctor
    path: ../src/Project.Application/Users/Commands/RegisterUser/RegisterUserCommandValidator.cs
    startLine: 7
  assemblies:
  - Project.Application
  namespace: Project.Application.Users.Commands.RegisterUser
  syntax:
    content: public RegisterUserCommandValidator()
    content.vb: Public Sub New()
  overload: Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator.#ctor*
  nameWithType.vb: RegisterUserCommandValidator.New()
  fullName.vb: Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator.New()
  name.vb: New()
references:
- uid: Project.Application.Users.Commands.RegisterUser
  commentId: N:Project.Application.Users.Commands.RegisterUser
  href: Project.html
  name: Project.Application.Users.Commands.RegisterUser
  nameWithType: Project.Application.Users.Commands.RegisterUser
  fullName: Project.Application.Users.Commands.RegisterUser
  spec.csharp:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Application
    name: Application
    href: Project.Application.html
  - name: .
  - uid: Project.Application.Users
    name: Users
    href: Project.Application.Users.html
  - name: .
  - uid: Project.Application.Users.Commands
    name: Commands
    href: Project.Application.Users.Commands.html
  - name: .
  - uid: Project.Application.Users.Commands.RegisterUser
    name: RegisterUser
    href: Project.Application.Users.Commands.RegisterUser.html
  spec.vb:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Application
    name: Application
    href: Project.Application.html
  - name: .
  - uid: Project.Application.Users
    name: Users
    href: Project.Application.Users.html
  - name: .
  - uid: Project.Application.Users.Commands
    name: Commands
    href: Project.Application.Users.Commands.html
  - name: .
  - uid: Project.Application.Users.Commands.RegisterUser
    name: RegisterUser
    href: Project.Application.Users.Commands.RegisterUser.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  commentId: T:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  parent: FluentValidation
  definition: FluentValidation.AbstractValidator`1
  href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  name: AbstractValidator<RegisterUserCommand>
  nameWithType: AbstractValidator<RegisterUserCommand>
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand)
  name.vb: AbstractValidator(Of RegisterUserCommand)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: '>'
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
- uid: FluentValidation.IValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  commentId: T:FluentValidation.IValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  parent: FluentValidation
  definition: FluentValidation.IValidator`1
  href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  name: IValidator<RegisterUserCommand>
  nameWithType: IValidator<RegisterUserCommand>
  fullName: FluentValidation.IValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>
  nameWithType.vb: IValidator(Of RegisterUserCommand)
  fullName.vb: FluentValidation.IValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand)
  name.vb: IValidator(Of RegisterUserCommand)
  spec.csharp:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: '>'
  spec.vb:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
- uid: FluentValidation.IValidator
  commentId: T:FluentValidation.IValidator
  parent: FluentValidation
  isExternal: true
  name: IValidator
  nameWithType: IValidator
  fullName: FluentValidation.IValidator
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  commentId: T:System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IValidationRule>
  nameWithType: IEnumerable<IValidationRule>
  fullName: System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>
  nameWithType.vb: IEnumerable(Of IValidationRule)
  fullName.vb: System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule)
  name.vb: IEnumerable(Of IValidationRule)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Validate(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Validate(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.Validate(`0)
  href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  name: Validate(RegisterUserCommand)
  nameWithType: AbstractValidator<RegisterUserCommand>.Validate(RegisterUserCommand)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.Validate(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).Validate(RegisterUserCommand)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).Validate(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Validate(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand)
    name: Validate
    isExternal: true
  - name: (
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Validate(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand)
    name: Validate
    isExternal: true
  - name: (
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.ValidateAsync(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.ValidateAsync(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  name: ValidateAsync(RegisterUserCommand, CancellationToken)
  nameWithType: AbstractValidator<RegisterUserCommand>.ValidateAsync(RegisterUserCommand, CancellationToken)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.ValidateAsync(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).ValidateAsync(RegisterUserCommand, CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).ValidateAsync(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.ValidateAsync(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.ValidateAsync(Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Validate(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Validate(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  name: Validate(ValidationContext<RegisterUserCommand>)
  nameWithType: AbstractValidator<RegisterUserCommand>.Validate(ValidationContext<RegisterUserCommand>)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.Validate(FluentValidation.ValidationContext<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).Validate(ValidationContext(Of RegisterUserCommand))
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).Validate(FluentValidation.ValidationContext(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand))
  name.vb: Validate(ValidationContext(Of RegisterUserCommand))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Validate(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Validate(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.ValidateAsync(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.ValidateAsync(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  name: ValidateAsync(ValidationContext<RegisterUserCommand>, CancellationToken)
  nameWithType: AbstractValidator<RegisterUserCommand>.ValidateAsync(ValidationContext<RegisterUserCommand>, CancellationToken)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.ValidateAsync(FluentValidation.ValidationContext<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).ValidateAsync(ValidationContext(Of RegisterUserCommand), CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).ValidateAsync(FluentValidation.ValidationContext(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand), System.Threading.CancellationToken)
  name.vb: ValidateAsync(ValidationContext(Of RegisterUserCommand), CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.ValidateAsync(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.ValidateAsync(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.CreateDescriptor
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.CreateDescriptor
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.CreateDescriptor
  name: CreateDescriptor()
  nameWithType: AbstractValidator<RegisterUserCommand>.CreateDescriptor()
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.CreateDescriptor()
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).CreateDescriptor()
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).CreateDescriptor()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,{TProperty}}})
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,``0}})
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleFor<TProperty>(Expression<Func<RegisterUserCommand, TProperty>>)
  nameWithType: AbstractValidator<RegisterUserCommand>.RuleFor<TProperty>(Expression<Func<RegisterUserCommand, TProperty>>)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.RuleFor<TProperty>(System.Linq.Expressions.Expression<System.Func<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, TProperty>>)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).RuleFor(Of TProperty)(Expression(Of Func(Of RegisterUserCommand, TProperty)))
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).RuleFor(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, TProperty)))
  name.vb: RuleFor(Of TProperty)(Expression(Of Func(Of RegisterUserCommand, TProperty)))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,``0}})
    name: RuleFor
    isExternal: true
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,``0}})
    name: RuleFor
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Collections.Generic.IEnumerable{{TElement}}}})
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Collections.Generic.IEnumerable{``0}}})
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleForEach<TElement>(Expression<Func<RegisterUserCommand, IEnumerable<TElement>>>)
  nameWithType: AbstractValidator<RegisterUserCommand>.RuleForEach<TElement>(Expression<Func<RegisterUserCommand, IEnumerable<TElement>>>)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.RuleForEach<TElement>(System.Linq.Expressions.Expression<System.Func<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, System.Collections.Generic.IEnumerable<TElement>>>)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).RuleForEach(Of TElement)(Expression(Of Func(Of RegisterUserCommand, IEnumerable(Of TElement))))
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).RuleForEach(Of TElement)(System.Linq.Expressions.Expression(Of System.Func(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, System.Collections.Generic.IEnumerable(Of TElement))))
  name.vb: RuleForEach(Of TElement)(Expression(Of Func(Of RegisterUserCommand, IEnumerable(Of TElement))))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleSet(System.String,System.Action)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleSet(System.String,System.Action)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RuleSet(string, Action)
  nameWithType: AbstractValidator<RegisterUserCommand>.RuleSet(string, Action)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.RuleSet(string, System.Action)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).RuleSet(String, Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).RuleSet(String, System.Action)
  name.vb: RuleSet(String, Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.When(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.When(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: When(Func<RegisterUserCommand, bool>, Action)
  nameWithType: AbstractValidator<RegisterUserCommand>.When(Func<RegisterUserCommand, bool>, Action)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.When(System.Func<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).When(Func(Of RegisterUserCommand, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).When(System.Func(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, Boolean), System.Action)
  name.vb: When(Func(Of RegisterUserCommand, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.When(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.When(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.When(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.When(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: When(Func<RegisterUserCommand, ValidationContext<RegisterUserCommand>, bool>, Action)
  nameWithType: AbstractValidator<RegisterUserCommand>.When(Func<RegisterUserCommand, ValidationContext<RegisterUserCommand>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.When(System.Func<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, FluentValidation.ValidationContext<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).When(Func(Of RegisterUserCommand, ValidationContext(Of RegisterUserCommand), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).When(System.Func(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, FluentValidation.ValidationContext(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand), Boolean), System.Action)
  name.vb: When(Func(Of RegisterUserCommand, ValidationContext(Of RegisterUserCommand), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.When(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.When(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Unless(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Unless(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Unless(Func<RegisterUserCommand, bool>, Action)
  nameWithType: AbstractValidator<RegisterUserCommand>.Unless(Func<RegisterUserCommand, bool>, Action)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.Unless(System.Func<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).Unless(Func(Of RegisterUserCommand, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).Unless(System.Func(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, Boolean), System.Action)
  name.vb: Unless(Func(Of RegisterUserCommand, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Unless(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Unless(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Unless(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Unless(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Unless(Func<RegisterUserCommand, ValidationContext<RegisterUserCommand>, bool>, Action)
  nameWithType: AbstractValidator<RegisterUserCommand>.Unless(Func<RegisterUserCommand, ValidationContext<RegisterUserCommand>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.Unless(System.Func<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, FluentValidation.ValidationContext<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).Unless(Func(Of RegisterUserCommand, ValidationContext(Of RegisterUserCommand), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).Unless(System.Func(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, FluentValidation.ValidationContext(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand), Boolean), System.Action)
  name.vb: Unless(Func(Of RegisterUserCommand, ValidationContext(Of RegisterUserCommand), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Unless(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Unless(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.WhenAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.WhenAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: WhenAsync(Func<RegisterUserCommand, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<RegisterUserCommand>.WhenAsync(Func<RegisterUserCommand, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.WhenAsync(System.Func<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).WhenAsync(Func(Of RegisterUserCommand, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).WhenAsync(System.Func(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of RegisterUserCommand, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.WhenAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.WhenAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.WhenAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.WhenAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: WhenAsync(Func<RegisterUserCommand, ValidationContext<RegisterUserCommand>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<RegisterUserCommand>.WhenAsync(Func<RegisterUserCommand, ValidationContext<RegisterUserCommand>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.WhenAsync(System.Func<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, FluentValidation.ValidationContext<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).WhenAsync(Func(Of RegisterUserCommand, ValidationContext(Of RegisterUserCommand), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).WhenAsync(System.Func(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, FluentValidation.ValidationContext(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of RegisterUserCommand, ValidationContext(Of RegisterUserCommand), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.WhenAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.WhenAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.UnlessAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.UnlessAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: UnlessAsync(Func<RegisterUserCommand, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<RegisterUserCommand>.UnlessAsync(Func<RegisterUserCommand, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.UnlessAsync(System.Func<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).UnlessAsync(Func(Of RegisterUserCommand, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).UnlessAsync(System.Func(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of RegisterUserCommand, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.UnlessAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.UnlessAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.UnlessAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.UnlessAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: UnlessAsync(Func<RegisterUserCommand, ValidationContext<RegisterUserCommand>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<RegisterUserCommand>.UnlessAsync(Func<RegisterUserCommand, ValidationContext<RegisterUserCommand>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.UnlessAsync(System.Func<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, FluentValidation.ValidationContext<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).UnlessAsync(Func(Of RegisterUserCommand, ValidationContext(Of RegisterUserCommand), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).UnlessAsync(System.Func(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, FluentValidation.ValidationContext(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of RegisterUserCommand, ValidationContext(Of RegisterUserCommand), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.UnlessAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.UnlessAsync(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Include(FluentValidation.IValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Include(FluentValidation.IValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  name: Include(IValidator<RegisterUserCommand>)
  nameWithType: AbstractValidator<RegisterUserCommand>.Include(IValidator<RegisterUserCommand>)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.Include(FluentValidation.IValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).Include(IValidator(Of RegisterUserCommand))
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).Include(FluentValidation.IValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand))
  name.vb: Include(IValidator(Of RegisterUserCommand))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Include(FluentValidation.IValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Include(FluentValidation.IValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Include``1(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,{TValidator}})
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Include``1(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,``0})
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Include<TValidator>(Func<RegisterUserCommand, TValidator>)
  nameWithType: AbstractValidator<RegisterUserCommand>.Include<TValidator>(Func<RegisterUserCommand, TValidator>)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.Include<TValidator>(System.Func<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, TValidator>)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).Include(Of TValidator)(Func(Of RegisterUserCommand, TValidator))
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).Include(Of TValidator)(System.Func(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand, TValidator))
  name.vb: Include(Of TValidator)(Func(Of RegisterUserCommand, TValidator))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Include``1(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,``0})
    name: Include
    isExternal: true
  - name: <
  - name: TValidator
  - name: '>'
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - name: TValidator
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.Include``1(System.Func{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand,``0})
    name: Include
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValidator
  - name: )
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: ','
  - name: " "
  - name: TValidator
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.GetEnumerator
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.GetEnumerator
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: AbstractValidator<RegisterUserCommand>.GetEnumerator()
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).GetEnumerator()
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).GetEnumerator()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.PreValidate(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.PreValidate(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},FluentValidation.Results.ValidationResult)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  name: PreValidate(ValidationContext<RegisterUserCommand>, ValidationResult)
  nameWithType: AbstractValidator<RegisterUserCommand>.PreValidate(ValidationContext<RegisterUserCommand>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.PreValidate(FluentValidation.ValidationContext<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).PreValidate(ValidationContext(Of RegisterUserCommand), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).PreValidate(FluentValidation.ValidationContext(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand), FluentValidation.Results.ValidationResult)
  name.vb: PreValidate(ValidationContext(Of RegisterUserCommand), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.PreValidate(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.PreValidate(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RaiseValidationException(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RaiseValidationException(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},FluentValidation.Results.ValidationResult)
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  name: RaiseValidationException(ValidationContext<RegisterUserCommand>, ValidationResult)
  nameWithType: AbstractValidator<RegisterUserCommand>.RaiseValidationException(ValidationContext<RegisterUserCommand>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.RaiseValidationException(FluentValidation.ValidationContext<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).RaiseValidationException(ValidationContext(Of RegisterUserCommand), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).RaiseValidationException(FluentValidation.ValidationContext(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand), FluentValidation.Results.ValidationResult)
  name.vb: RaiseValidationException(ValidationContext(Of RegisterUserCommand), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RaiseValidationException(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RaiseValidationException(FluentValidation.ValidationContext{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.OnRuleAdded(FluentValidation.IValidationRule{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
  commentId: M:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.OnRuleAdded(FluentValidation.IValidationRule{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  name: OnRuleAdded(IValidationRule<RegisterUserCommand>)
  nameWithType: AbstractValidator<RegisterUserCommand>.OnRuleAdded(IValidationRule<RegisterUserCommand>)
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.OnRuleAdded(FluentValidation.IValidationRule<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>)
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).OnRuleAdded(IValidationRule(Of RegisterUserCommand))
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).OnRuleAdded(FluentValidation.IValidationRule(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand))
  name.vb: OnRuleAdded(IValidationRule(Of RegisterUserCommand))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.OnRuleAdded(FluentValidation.IValidationRule{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: <
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.OnRuleAdded(FluentValidation.IValidationRule{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand
    name: RegisterUserCommand
    href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommand.html
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.ClassLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.ClassLevelCascadeMode
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  name: ClassLevelCascadeMode
  nameWithType: AbstractValidator<RegisterUserCommand>.ClassLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.ClassLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).ClassLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).ClassLevelCascadeMode
- uid: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}.RuleLevelCascadeMode
  parent: FluentValidation.AbstractValidator{Project.Application.Users.Commands.RegisterUser.RegisterUserCommand}
  definition: FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  name: RuleLevelCascadeMode
  nameWithType: AbstractValidator<RegisterUserCommand>.RuleLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<Project.Application.Users.Commands.RegisterUser.RegisterUserCommand>.RuleLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of RegisterUserCommand).RuleLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of Project.Application.Users.Commands.RegisterUser.RegisterUserCommand).RuleLevelCascadeMode
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FluentValidation.AbstractValidator`1
  commentId: T:FluentValidation.AbstractValidator`1
  isExternal: true
  name: AbstractValidator<T>
  nameWithType: AbstractValidator<T>
  fullName: FluentValidation.AbstractValidator<T>
  nameWithType.vb: AbstractValidator(Of T)
  fullName.vb: FluentValidation.AbstractValidator(Of T)
  name.vb: AbstractValidator(Of T)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FluentValidation
  commentId: N:FluentValidation
  isExternal: true
  name: FluentValidation
  nameWithType: FluentValidation
  fullName: FluentValidation
- uid: FluentValidation.IValidator`1
  commentId: T:FluentValidation.IValidator`1
  isExternal: true
  name: IValidator<T>
  nameWithType: IValidator<T>
  fullName: FluentValidation.IValidator<T>
  nameWithType.vb: IValidator(Of T)
  fullName.vb: FluentValidation.IValidator(Of T)
  name.vb: IValidator(Of T)
  spec.csharp:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: FluentValidation.AbstractValidator`1.Validate(`0)
  commentId: M:FluentValidation.AbstractValidator`1.Validate(`0)
  isExternal: true
  name: Validate(T)
  nameWithType: AbstractValidator<T>.Validate(T)
  fullName: FluentValidation.AbstractValidator<T>.Validate(T)
  nameWithType.vb: AbstractValidator(Of T).Validate(T)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Validate(T)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Validate(`0)
    name: Validate
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Validate(`0)
    name: Validate
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(T, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(T, CancellationToken)
  fullName: FluentValidation.AbstractValidator<T>.ValidateAsync(T, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(T, CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of T).ValidateAsync(T, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  commentId: M:FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  isExternal: true
  name: Validate(ValidationContext<T>)
  nameWithType: AbstractValidator<T>.Validate(ValidationContext<T>)
  fullName: FluentValidation.AbstractValidator<T>.Validate(FluentValidation.ValidationContext<T>)
  nameWithType.vb: AbstractValidator(Of T).Validate(ValidationContext(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Validate(FluentValidation.ValidationContext(Of T))
  name.vb: Validate(ValidationContext(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(ValidationContext<T>, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken)
  fullName: FluentValidation.AbstractValidator<T>.ValidateAsync(FluentValidation.ValidationContext<T>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(ValidationContext(Of T), CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of T).ValidateAsync(FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken)
  name.vb: ValidateAsync(ValidationContext(Of T), CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator`1.CreateDescriptor
  commentId: M:FluentValidation.AbstractValidator`1.CreateDescriptor
  isExternal: true
  name: CreateDescriptor()
  nameWithType: AbstractValidator<T>.CreateDescriptor()
  fullName: FluentValidation.AbstractValidator<T>.CreateDescriptor()
  nameWithType.vb: AbstractValidator(Of T).CreateDescriptor()
  fullName.vb: FluentValidation.AbstractValidator(Of T).CreateDescriptor()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  nameWithType: AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  fullName: FluentValidation.AbstractValidator<T>.RuleFor<TProperty>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  nameWithType.vb: AbstractValidator(Of T).RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleFor(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor
    isExternal: true
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  commentId: M:FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  nameWithType: AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  fullName: FluentValidation.AbstractValidator<T>.RuleForEach<TElement>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>)
  nameWithType.vb: AbstractValidator(Of T).RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleForEach(Of TElement)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))))
  name.vb: RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RuleSet(string, Action)
  nameWithType: AbstractValidator<T>.RuleSet(string, Action)
  fullName: FluentValidation.AbstractValidator<T>.RuleSet(string, System.Action)
  nameWithType.vb: AbstractValidator(Of T).RuleSet(String, Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleSet(String, System.Action)
  name.vb: RuleSet(String, Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: When(Func<T, bool>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.When(System.Func<T, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).When(System.Func(Of T, Boolean), System.Action)
  name.vb: When(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: When(Func<T, ValidationContext<T>, bool>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.When(System.Func<T, FluentValidation.ValidationContext<T>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).When(System.Func(Of T, FluentValidation.ValidationContext(Of T), Boolean), System.Action)
  name.vb: When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Unless(Func<T, bool>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.Unless(System.Func<T, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Unless(System.Func(Of T, Boolean), System.Action)
  name.vb: Unless(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Unless(Func<T, ValidationContext<T>, bool>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.Unless(System.Func<T, FluentValidation.ValidationContext<T>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Unless(System.Func(Of T, FluentValidation.ValidationContext(Of T), Boolean), System.Action)
  name.vb: Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: WhenAsync(Func<T, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.WhenAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.WhenAsync(System.Func<T, FluentValidation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.UnlessAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.UnlessAsync(System.Func<T, FluentValidation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  commentId: M:FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  isExternal: true
  name: Include(IValidator<T>)
  nameWithType: AbstractValidator<T>.Include(IValidator<T>)
  fullName: FluentValidation.AbstractValidator<T>.Include(FluentValidation.IValidator<T>)
  nameWithType.vb: AbstractValidator(Of T).Include(IValidator(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Include(FluentValidation.IValidator(Of T))
  name.vb: Include(IValidator(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  commentId: M:FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Include<TValidator>(Func<T, TValidator>)
  nameWithType: AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>)
  fullName: FluentValidation.AbstractValidator<T>.Include<TValidator>(System.Func<T, TValidator>)
  nameWithType.vb: AbstractValidator(Of T).Include(Of TValidator)(Func(Of T, TValidator))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Include(Of TValidator)(System.Func(Of T, TValidator))
  name.vb: Include(Of TValidator)(Func(Of T, TValidator))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include
    isExternal: true
  - name: <
  - name: TValidator
  - name: '>'
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TValidator
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValidator
  - name: )
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TValidator
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.GetEnumerator
  commentId: M:FluentValidation.AbstractValidator`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: AbstractValidator<T>.GetEnumerator()
  fullName: FluentValidation.AbstractValidator<T>.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of T).GetEnumerator()
  fullName.vb: FluentValidation.AbstractValidator(Of T).GetEnumerator()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  isExternal: true
  name: PreValidate(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<T>.PreValidate(FluentValidation.ValidationContext<T>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).PreValidate(ValidationContext(Of T), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of T).PreValidate(FluentValidation.ValidationContext(Of T), FluentValidation.Results.ValidationResult)
  name.vb: PreValidate(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  isExternal: true
  name: RaiseValidationException(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<T>.RaiseValidationException(FluentValidation.ValidationContext<T>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).RaiseValidationException(ValidationContext(Of T), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of T).RaiseValidationException(FluentValidation.ValidationContext(Of T), FluentValidation.Results.ValidationResult)
  name.vb: RaiseValidationException(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  commentId: M:FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  isExternal: true
  name: OnRuleAdded(IValidationRule<T>)
  nameWithType: AbstractValidator<T>.OnRuleAdded(IValidationRule<T>)
  fullName: FluentValidation.AbstractValidator<T>.OnRuleAdded(FluentValidation.IValidationRule<T>)
  nameWithType.vb: AbstractValidator(Of T).OnRuleAdded(IValidationRule(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).OnRuleAdded(FluentValidation.IValidationRule(Of T))
  name.vb: OnRuleAdded(IValidationRule(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  isExternal: true
  name: ClassLevelCascadeMode
  nameWithType: AbstractValidator<T>.ClassLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<T>.ClassLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of T).ClassLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).ClassLevelCascadeMode
- uid: FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  isExternal: true
  name: RuleLevelCascadeMode
  nameWithType: AbstractValidator<T>.RuleLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<T>.RuleLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of T).RuleLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleLevelCascadeMode
- uid: Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator.#ctor*
  commentId: Overload:Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator.#ctor
  href: Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator.html#Project_Application_Users_Commands_RegisterUser_RegisterUserCommandValidator__ctor
  name: RegisterUserCommandValidator
  nameWithType: RegisterUserCommandValidator.RegisterUserCommandValidator
  fullName: Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator.RegisterUserCommandValidator
  nameWithType.vb: RegisterUserCommandValidator.New
  fullName.vb: Project.Application.Users.Commands.RegisterUser.RegisterUserCommandValidator.New
  name.vb: New
