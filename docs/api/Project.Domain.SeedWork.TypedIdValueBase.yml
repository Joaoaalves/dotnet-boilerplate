### YamlMime:ManagedReference
items:
- uid: Project.Domain.SeedWork.TypedIdValueBase
  commentId: T:Project.Domain.SeedWork.TypedIdValueBase
  id: TypedIdValueBase
  parent: Project.Domain.SeedWork
  children:
  - Project.Domain.SeedWork.TypedIdValueBase.#ctor(System.Guid)
  - Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  - Project.Domain.SeedWork.TypedIdValueBase.Equals(System.Object)
  - Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
  - Project.Domain.SeedWork.TypedIdValueBase.Value
  - Project.Domain.SeedWork.TypedIdValueBase.op_Equality(Project.Domain.SeedWork.TypedIdValueBase,Project.Domain.SeedWork.TypedIdValueBase)
  - Project.Domain.SeedWork.TypedIdValueBase.op_Inequality(Project.Domain.SeedWork.TypedIdValueBase,Project.Domain.SeedWork.TypedIdValueBase)
  langs:
  - csharp
  - vb
  name: TypedIdValueBase
  nameWithType: TypedIdValueBase
  fullName: Project.Domain.SeedWork.TypedIdValueBase
  type: Class
  source:
    remote:
      path: src/Project.Domain/SeedWork/TypedIdValueBase.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: TypedIdValueBase
    path: ../src/Project.Domain/SeedWork/TypedIdValueBase.cs
    startLine: 6
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  summary: >-
    Base class for strongly-typed identifier value objects.

    Ensures consistent equality and hash code logic for identifiers.
  example: []
  syntax:
    content: 'public abstract class TypedIdValueBase : IEquatable<TypedIdValueBase>'
    content.vb: Public MustInherit Class TypedIdValueBase Implements IEquatable(Of TypedIdValueBase)
  inheritance:
  - System.Object
  derivedClasses:
  - Project.Tests.UnitTests.Domain.Fakes.FakeTypedId
  implements:
  - System.IEquatable{Project.Domain.SeedWork.TypedIdValueBase}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Project.Domain.SeedWork.TypedIdValueBase.#ctor(System.Guid)
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: Project.Domain.SeedWork.TypedIdValueBase
  langs:
  - csharp
  - vb
  name: TypedIdValueBase(Guid)
  nameWithType: TypedIdValueBase.TypedIdValueBase(Guid)
  fullName: Project.Domain.SeedWork.TypedIdValueBase.TypedIdValueBase(System.Guid)
  type: Constructor
  source:
    remote:
      path: src/Project.Domain/SeedWork/TypedIdValueBase.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: .ctor
    path: ../src/Project.Domain/SeedWork/TypedIdValueBase.cs
    startLine: 6
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  summary: >-
    Base class for strongly-typed identifier value objects.

    Ensures consistent equality and hash code logic for identifiers.
  example: []
  syntax:
    content: protected TypedIdValueBase(Guid value)
    parameters:
    - id: value
      type: System.Guid
    content.vb: Protected Sub New(value As Guid)
  overload: Project.Domain.SeedWork.TypedIdValueBase.#ctor*
  nameWithType.vb: TypedIdValueBase.New(Guid)
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.New(System.Guid)
  name.vb: New(Guid)
- uid: Project.Domain.SeedWork.TypedIdValueBase.Value
  commentId: P:Project.Domain.SeedWork.TypedIdValueBase.Value
  id: Value
  parent: Project.Domain.SeedWork.TypedIdValueBase
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: TypedIdValueBase.Value
  fullName: Project.Domain.SeedWork.TypedIdValueBase.Value
  type: Property
  source:
    remote:
      path: src/Project.Domain/SeedWork/TypedIdValueBase.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: Value
    path: ../src/Project.Domain/SeedWork/TypedIdValueBase.cs
    startLine: 11
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  summary: Gets the underlying GUID value of the identifier.
  example: []
  syntax:
    content: public Guid Value { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property Value As Guid
  overload: Project.Domain.SeedWork.TypedIdValueBase.Value*
- uid: Project.Domain.SeedWork.TypedIdValueBase.Equals(System.Object)
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.Equals(System.Object)
  id: Equals(System.Object)
  parent: Project.Domain.SeedWork.TypedIdValueBase
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: TypedIdValueBase.Equals(object?)
  fullName: Project.Domain.SeedWork.TypedIdValueBase.Equals(object?)
  type: Method
  source:
    remote:
      path: src/Project.Domain/SeedWork/TypedIdValueBase.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: Equals
    path: ../src/Project.Domain/SeedWork/TypedIdValueBase.cs
    startLine: 14
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Project.Domain.SeedWork.TypedIdValueBase.Equals*
  nameWithType.vb: TypedIdValueBase.Equals(Object)
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.Equals(Object)
  name.vb: Equals(Object)
- uid: Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
  id: GetHashCode
  parent: Project.Domain.SeedWork.TypedIdValueBase
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TypedIdValueBase.GetHashCode()
  fullName: Project.Domain.SeedWork.TypedIdValueBase.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Project.Domain/SeedWork/TypedIdValueBase.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: GetHashCode
    path: ../src/Project.Domain/SeedWork/TypedIdValueBase.cs
    startLine: 21
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Project.Domain.SeedWork.TypedIdValueBase.GetHashCode*
- uid: Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  id: Equals(Project.Domain.SeedWork.TypedIdValueBase)
  parent: Project.Domain.SeedWork.TypedIdValueBase
  langs:
  - csharp
  - vb
  name: Equals(TypedIdValueBase?)
  nameWithType: TypedIdValueBase.Equals(TypedIdValueBase?)
  fullName: Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase?)
  type: Method
  source:
    remote:
      path: src/Project.Domain/SeedWork/TypedIdValueBase.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: Equals
    path: ../src/Project.Domain/SeedWork/TypedIdValueBase.cs
    startLine: 27
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(TypedIdValueBase? other)
    parameters:
    - id: other
      type: Project.Domain.SeedWork.TypedIdValueBase
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As TypedIdValueBase) As Boolean
  overload: Project.Domain.SeedWork.TypedIdValueBase.Equals*
  implements:
  - System.IEquatable{Project.Domain.SeedWork.TypedIdValueBase}.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  nameWithType.vb: TypedIdValueBase.Equals(TypedIdValueBase)
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  name.vb: Equals(TypedIdValueBase)
- uid: Project.Domain.SeedWork.TypedIdValueBase.op_Equality(Project.Domain.SeedWork.TypedIdValueBase,Project.Domain.SeedWork.TypedIdValueBase)
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.op_Equality(Project.Domain.SeedWork.TypedIdValueBase,Project.Domain.SeedWork.TypedIdValueBase)
  id: op_Equality(Project.Domain.SeedWork.TypedIdValueBase,Project.Domain.SeedWork.TypedIdValueBase)
  parent: Project.Domain.SeedWork.TypedIdValueBase
  langs:
  - csharp
  - vb
  name: operator ==(TypedIdValueBase, TypedIdValueBase)
  nameWithType: TypedIdValueBase.operator ==(TypedIdValueBase, TypedIdValueBase)
  fullName: Project.Domain.SeedWork.TypedIdValueBase.operator ==(Project.Domain.SeedWork.TypedIdValueBase, Project.Domain.SeedWork.TypedIdValueBase)
  type: Operator
  source:
    remote:
      path: src/Project.Domain/SeedWork/TypedIdValueBase.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: op_Equality
    path: ../src/Project.Domain/SeedWork/TypedIdValueBase.cs
    startLine: 38
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  summary: Checks equality between two TypedIdValueBase instances.
  example: []
  syntax:
    content: public static bool operator ==(TypedIdValueBase obj1, TypedIdValueBase obj2)
    parameters:
    - id: obj1
      type: Project.Domain.SeedWork.TypedIdValueBase
    - id: obj2
      type: Project.Domain.SeedWork.TypedIdValueBase
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(obj1 As TypedIdValueBase, obj2 As TypedIdValueBase) As Boolean
  overload: Project.Domain.SeedWork.TypedIdValueBase.op_Equality*
  nameWithType.vb: TypedIdValueBase.=(TypedIdValueBase, TypedIdValueBase)
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.=(Project.Domain.SeedWork.TypedIdValueBase, Project.Domain.SeedWork.TypedIdValueBase)
  name.vb: =(TypedIdValueBase, TypedIdValueBase)
- uid: Project.Domain.SeedWork.TypedIdValueBase.op_Inequality(Project.Domain.SeedWork.TypedIdValueBase,Project.Domain.SeedWork.TypedIdValueBase)
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.op_Inequality(Project.Domain.SeedWork.TypedIdValueBase,Project.Domain.SeedWork.TypedIdValueBase)
  id: op_Inequality(Project.Domain.SeedWork.TypedIdValueBase,Project.Domain.SeedWork.TypedIdValueBase)
  parent: Project.Domain.SeedWork.TypedIdValueBase
  langs:
  - csharp
  - vb
  name: operator !=(TypedIdValueBase, TypedIdValueBase)
  nameWithType: TypedIdValueBase.operator !=(TypedIdValueBase, TypedIdValueBase)
  fullName: Project.Domain.SeedWork.TypedIdValueBase.operator !=(Project.Domain.SeedWork.TypedIdValueBase, Project.Domain.SeedWork.TypedIdValueBase)
  type: Operator
  source:
    remote:
      path: src/Project.Domain/SeedWork/TypedIdValueBase.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: op_Inequality
    path: ../src/Project.Domain/SeedWork/TypedIdValueBase.cs
    startLine: 51
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  summary: Checks inequality between two TypedIdValueBase instances.
  example: []
  syntax:
    content: public static bool operator !=(TypedIdValueBase x, TypedIdValueBase y)
    parameters:
    - id: x
      type: Project.Domain.SeedWork.TypedIdValueBase
    - id: y
      type: Project.Domain.SeedWork.TypedIdValueBase
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(x As TypedIdValueBase, y As TypedIdValueBase) As Boolean
  overload: Project.Domain.SeedWork.TypedIdValueBase.op_Inequality*
  nameWithType.vb: TypedIdValueBase.<>(TypedIdValueBase, TypedIdValueBase)
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.<>(Project.Domain.SeedWork.TypedIdValueBase, Project.Domain.SeedWork.TypedIdValueBase)
  name.vb: <>(TypedIdValueBase, TypedIdValueBase)
references:
- uid: Project.Domain.SeedWork
  commentId: N:Project.Domain.SeedWork
  href: Project.html
  name: Project.Domain.SeedWork
  nameWithType: Project.Domain.SeedWork
  fullName: Project.Domain.SeedWork
  spec.csharp:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Domain
    name: Domain
    href: Project.Domain.html
  - name: .
  - uid: Project.Domain.SeedWork
    name: SeedWork
    href: Project.Domain.SeedWork.html
  spec.vb:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Domain
    name: Domain
    href: Project.Domain.html
  - name: .
  - uid: Project.Domain.SeedWork
    name: SeedWork
    href: Project.Domain.SeedWork.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{Project.Domain.SeedWork.TypedIdValueBase}
  commentId: T:System.IEquatable{Project.Domain.SeedWork.TypedIdValueBase}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<TypedIdValueBase>
  nameWithType: IEquatable<TypedIdValueBase>
  fullName: System.IEquatable<Project.Domain.SeedWork.TypedIdValueBase>
  nameWithType.vb: IEquatable(Of TypedIdValueBase)
  fullName.vb: System.IEquatable(Of Project.Domain.SeedWork.TypedIdValueBase)
  name.vb: IEquatable(Of TypedIdValueBase)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Project.Domain.SeedWork.TypedIdValueBase
    name: TypedIdValueBase
    href: Project.Domain.SeedWork.TypedIdValueBase.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Domain.SeedWork.TypedIdValueBase
    name: TypedIdValueBase
    href: Project.Domain.SeedWork.TypedIdValueBase.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Project.Domain.SeedWork.TypedIdValueBase.#ctor*
  commentId: Overload:Project.Domain.SeedWork.TypedIdValueBase.#ctor
  href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase__ctor_System_Guid_
  name: TypedIdValueBase
  nameWithType: TypedIdValueBase.TypedIdValueBase
  fullName: Project.Domain.SeedWork.TypedIdValueBase.TypedIdValueBase
  nameWithType.vb: TypedIdValueBase.New
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.New
  name.vb: New
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Project.Domain.SeedWork.TypedIdValueBase.Value*
  commentId: Overload:Project.Domain.SeedWork.TypedIdValueBase.Value
  href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Value
  name: Value
  nameWithType: TypedIdValueBase.Value
  fullName: Project.Domain.SeedWork.TypedIdValueBase.Value
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Project.Domain.SeedWork.TypedIdValueBase.Equals*
  commentId: Overload:Project.Domain.SeedWork.TypedIdValueBase.Equals
  href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Equals_System_Object_
  name: Equals
  nameWithType: TypedIdValueBase.Equals
  fullName: Project.Domain.SeedWork.TypedIdValueBase.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Project.Domain.SeedWork.TypedIdValueBase.GetHashCode*
  commentId: Overload:Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
  href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_GetHashCode
  name: GetHashCode
  nameWithType: TypedIdValueBase.GetHashCode
  fullName: Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.IEquatable{Project.Domain.SeedWork.TypedIdValueBase}.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  commentId: M:System.IEquatable{Project.Domain.SeedWork.TypedIdValueBase}.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  parent: System.IEquatable{Project.Domain.SeedWork.TypedIdValueBase}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(TypedIdValueBase)
  nameWithType: IEquatable<TypedIdValueBase>.Equals(TypedIdValueBase)
  fullName: System.IEquatable<Project.Domain.SeedWork.TypedIdValueBase>.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  nameWithType.vb: IEquatable(Of TypedIdValueBase).Equals(TypedIdValueBase)
  fullName.vb: System.IEquatable(Of Project.Domain.SeedWork.TypedIdValueBase).Equals(Project.Domain.SeedWork.TypedIdValueBase)
  spec.csharp:
  - uid: System.IEquatable{Project.Domain.SeedWork.TypedIdValueBase}.Equals(Project.Domain.SeedWork.TypedIdValueBase)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Project.Domain.SeedWork.TypedIdValueBase
    name: TypedIdValueBase
    href: Project.Domain.SeedWork.TypedIdValueBase.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Project.Domain.SeedWork.TypedIdValueBase}.Equals(Project.Domain.SeedWork.TypedIdValueBase)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Project.Domain.SeedWork.TypedIdValueBase
    name: TypedIdValueBase
    href: Project.Domain.SeedWork.TypedIdValueBase.html
  - name: )
- uid: Project.Domain.SeedWork.TypedIdValueBase
  commentId: T:Project.Domain.SeedWork.TypedIdValueBase
  parent: Project.Domain.SeedWork
  href: Project.Domain.SeedWork.TypedIdValueBase.html
  name: TypedIdValueBase
  nameWithType: TypedIdValueBase
  fullName: Project.Domain.SeedWork.TypedIdValueBase
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: Project.Domain.SeedWork.TypedIdValueBase.op_Equality*
  commentId: Overload:Project.Domain.SeedWork.TypedIdValueBase.op_Equality
  href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_op_Equality_Project_Domain_SeedWork_TypedIdValueBase_Project_Domain_SeedWork_TypedIdValueBase_
  name: operator ==
  nameWithType: TypedIdValueBase.operator ==
  fullName: Project.Domain.SeedWork.TypedIdValueBase.operator ==
  nameWithType.vb: TypedIdValueBase.=
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Project.Domain.SeedWork.TypedIdValueBase.op_Equality*
    name: ==
    href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_op_Equality_Project_Domain_SeedWork_TypedIdValueBase_Project_Domain_SeedWork_TypedIdValueBase_
- uid: Project.Domain.SeedWork.TypedIdValueBase.op_Inequality*
  commentId: Overload:Project.Domain.SeedWork.TypedIdValueBase.op_Inequality
  href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_op_Inequality_Project_Domain_SeedWork_TypedIdValueBase_Project_Domain_SeedWork_TypedIdValueBase_
  name: operator !=
  nameWithType: TypedIdValueBase.operator !=
  fullName: Project.Domain.SeedWork.TypedIdValueBase.operator !=
  nameWithType.vb: TypedIdValueBase.<>
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Project.Domain.SeedWork.TypedIdValueBase.op_Inequality*
    name: '!='
    href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_op_Inequality_Project_Domain_SeedWork_TypedIdValueBase_Project_Domain_SeedWork_TypedIdValueBase_
