### YamlMime:ManagedReference
items:
- uid: Project.Tests.Integration.Account.InfoTests
  commentId: T:Project.Tests.Integration.Account.InfoTests
  id: InfoTests
  parent: Project.Tests.Integration.Account
  children:
  - Project.Tests.Integration.Account.InfoTests.#ctor(Project.Tests.Integration.SharedDatabaseFixture)
  - Project.Tests.Integration.Account.InfoTests.ShouldRespectAuthorizationScheme
  - Project.Tests.Integration.Account.InfoTests.ShouldReturnCorrectClaimsData
  - Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenNotAuthenticated
  - Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenTokenIsInvalid
  - Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenUserNoLongerExists
  - Project.Tests.Integration.Account.InfoTests.ShouldReturnUserInfo_WhenAuthenticated
  langs:
  - csharp
  - vb
  name: InfoTests
  nameWithType: InfoTests
  fullName: Project.Tests.Integration.Account.InfoTests
  type: Class
  source:
    remote:
      path: src/tests/Project.Tests.Integration/Account/InfoTests.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: InfoTests
    path: ../src/tests/Project.Tests.Integration/Account/InfoTests.cs
    startLine: 14
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration.Account
  summary: >-
    Integration tests for the /api/info endpoint.

    These tests ensure authentication and user retrieval logic work correctly.
  example: []
  syntax:
    content: 'public class InfoTests : IntegrationTestBase, IClassFixture<SharedDatabaseFixture>, IAsyncLifetime'
    content.vb: Public Class InfoTests Inherits IntegrationTestBase Implements IClassFixture(Of SharedDatabaseFixture), IAsyncLifetime
  inheritance:
  - System.Object
  - Project.Tests.Integration.IntegrationTestBase
  implements:
  - Xunit.IClassFixture{Project.Tests.Integration.SharedDatabaseFixture}
  - Xunit.IAsyncLifetime
  inheritedMembers:
  - Project.Tests.Integration.IntegrationTestBase.DbFixture
  - Project.Tests.Integration.IntegrationTestBase.Client
  - Project.Tests.Integration.IntegrationTestBase.DbContext
  - Project.Tests.Integration.IntegrationTestBase.InitializeAsync
  - Project.Tests.Integration.IntegrationTestBase.DisposeAsync
  - Project.Tests.Integration.IntegrationTestBase.AuthenticateClient(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Project.Tests.Integration.Account.InfoTests.#ctor(Project.Tests.Integration.SharedDatabaseFixture)
  commentId: M:Project.Tests.Integration.Account.InfoTests.#ctor(Project.Tests.Integration.SharedDatabaseFixture)
  id: '#ctor(Project.Tests.Integration.SharedDatabaseFixture)'
  parent: Project.Tests.Integration.Account.InfoTests
  langs:
  - csharp
  - vb
  name: InfoTests(SharedDatabaseFixture)
  nameWithType: InfoTests.InfoTests(SharedDatabaseFixture)
  fullName: Project.Tests.Integration.Account.InfoTests.InfoTests(Project.Tests.Integration.SharedDatabaseFixture)
  type: Constructor
  source:
    remote:
      path: src/tests/Project.Tests.Integration/Account/InfoTests.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: .ctor
    path: ../src/tests/Project.Tests.Integration/Account/InfoTests.cs
    startLine: 14
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration.Account
  summary: >-
    Integration tests for the /api/info endpoint.

    These tests ensure authentication and user retrieval logic work correctly.
  example: []
  syntax:
    content: public InfoTests(SharedDatabaseFixture fixture)
    parameters:
    - id: fixture
      type: Project.Tests.Integration.SharedDatabaseFixture
    content.vb: Public Sub New(fixture As SharedDatabaseFixture)
  overload: Project.Tests.Integration.Account.InfoTests.#ctor*
  nameWithType.vb: InfoTests.New(SharedDatabaseFixture)
  fullName.vb: Project.Tests.Integration.Account.InfoTests.New(Project.Tests.Integration.SharedDatabaseFixture)
  name.vb: New(SharedDatabaseFixture)
- uid: Project.Tests.Integration.Account.InfoTests.ShouldReturnUserInfo_WhenAuthenticated
  commentId: M:Project.Tests.Integration.Account.InfoTests.ShouldReturnUserInfo_WhenAuthenticated
  id: ShouldReturnUserInfo_WhenAuthenticated
  parent: Project.Tests.Integration.Account.InfoTests
  langs:
  - csharp
  - vb
  name: ShouldReturnUserInfo_WhenAuthenticated()
  nameWithType: InfoTests.ShouldReturnUserInfo_WhenAuthenticated()
  fullName: Project.Tests.Integration.Account.InfoTests.ShouldReturnUserInfo_WhenAuthenticated()
  type: Method
  source:
    remote:
      path: src/tests/Project.Tests.Integration/Account/InfoTests.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: ShouldReturnUserInfo_WhenAuthenticated
    path: ../src/tests/Project.Tests.Integration/Account/InfoTests.cs
    startLine: 36
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration.Account
  syntax:
    content: >-
      [Fact]

      public Task ShouldReturnUserInfo_WhenAuthenticated()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function ShouldReturnUserInfo_WhenAuthenticated() As Task
  overload: Project.Tests.Integration.Account.InfoTests.ShouldReturnUserInfo_WhenAuthenticated*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenNotAuthenticated
  commentId: M:Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenNotAuthenticated
  id: ShouldReturnUnauthorized_WhenNotAuthenticated
  parent: Project.Tests.Integration.Account.InfoTests
  langs:
  - csharp
  - vb
  name: ShouldReturnUnauthorized_WhenNotAuthenticated()
  nameWithType: InfoTests.ShouldReturnUnauthorized_WhenNotAuthenticated()
  fullName: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenNotAuthenticated()
  type: Method
  source:
    remote:
      path: src/tests/Project.Tests.Integration/Account/InfoTests.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: ShouldReturnUnauthorized_WhenNotAuthenticated
    path: ../src/tests/Project.Tests.Integration/Account/InfoTests.cs
    startLine: 53
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration.Account
  syntax:
    content: >-
      [Fact]

      public Task ShouldReturnUnauthorized_WhenNotAuthenticated()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function ShouldReturnUnauthorized_WhenNotAuthenticated() As Task
  overload: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenNotAuthenticated*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenTokenIsInvalid
  commentId: M:Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenTokenIsInvalid
  id: ShouldReturnUnauthorized_WhenTokenIsInvalid
  parent: Project.Tests.Integration.Account.InfoTests
  langs:
  - csharp
  - vb
  name: ShouldReturnUnauthorized_WhenTokenIsInvalid()
  nameWithType: InfoTests.ShouldReturnUnauthorized_WhenTokenIsInvalid()
  fullName: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenTokenIsInvalid()
  type: Method
  source:
    remote:
      path: src/tests/Project.Tests.Integration/Account/InfoTests.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: ShouldReturnUnauthorized_WhenTokenIsInvalid
    path: ../src/tests/Project.Tests.Integration/Account/InfoTests.cs
    startLine: 61
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration.Account
  syntax:
    content: >-
      [Fact]

      public Task ShouldReturnUnauthorized_WhenTokenIsInvalid()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function ShouldReturnUnauthorized_WhenTokenIsInvalid() As Task
  overload: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenTokenIsInvalid*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenUserNoLongerExists
  commentId: M:Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenUserNoLongerExists
  id: ShouldReturnUnauthorized_WhenUserNoLongerExists
  parent: Project.Tests.Integration.Account.InfoTests
  langs:
  - csharp
  - vb
  name: ShouldReturnUnauthorized_WhenUserNoLongerExists()
  nameWithType: InfoTests.ShouldReturnUnauthorized_WhenUserNoLongerExists()
  fullName: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenUserNoLongerExists()
  type: Method
  source:
    remote:
      path: src/tests/Project.Tests.Integration/Account/InfoTests.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: ShouldReturnUnauthorized_WhenUserNoLongerExists
    path: ../src/tests/Project.Tests.Integration/Account/InfoTests.cs
    startLine: 72
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration.Account
  syntax:
    content: >-
      [Fact]

      public Task ShouldReturnUnauthorized_WhenUserNoLongerExists()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function ShouldReturnUnauthorized_WhenUserNoLongerExists() As Task
  overload: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenUserNoLongerExists*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Project.Tests.Integration.Account.InfoTests.ShouldRespectAuthorizationScheme
  commentId: M:Project.Tests.Integration.Account.InfoTests.ShouldRespectAuthorizationScheme
  id: ShouldRespectAuthorizationScheme
  parent: Project.Tests.Integration.Account.InfoTests
  langs:
  - csharp
  - vb
  name: ShouldRespectAuthorizationScheme()
  nameWithType: InfoTests.ShouldRespectAuthorizationScheme()
  fullName: Project.Tests.Integration.Account.InfoTests.ShouldRespectAuthorizationScheme()
  type: Method
  source:
    remote:
      path: src/tests/Project.Tests.Integration/Account/InfoTests.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: ShouldRespectAuthorizationScheme
    path: ../src/tests/Project.Tests.Integration/Account/InfoTests.cs
    startLine: 88
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration.Account
  syntax:
    content: >-
      [Fact]

      public Task ShouldRespectAuthorizationScheme()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function ShouldRespectAuthorizationScheme() As Task
  overload: Project.Tests.Integration.Account.InfoTests.ShouldRespectAuthorizationScheme*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Project.Tests.Integration.Account.InfoTests.ShouldReturnCorrectClaimsData
  commentId: M:Project.Tests.Integration.Account.InfoTests.ShouldReturnCorrectClaimsData
  id: ShouldReturnCorrectClaimsData
  parent: Project.Tests.Integration.Account.InfoTests
  langs:
  - csharp
  - vb
  name: ShouldReturnCorrectClaimsData()
  nameWithType: InfoTests.ShouldReturnCorrectClaimsData()
  fullName: Project.Tests.Integration.Account.InfoTests.ShouldReturnCorrectClaimsData()
  type: Method
  source:
    remote:
      path: src/tests/Project.Tests.Integration/Account/InfoTests.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: ShouldReturnCorrectClaimsData
    path: ../src/tests/Project.Tests.Integration/Account/InfoTests.cs
    startLine: 103
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration.Account
  syntax:
    content: >-
      [Fact]

      public Task ShouldReturnCorrectClaimsData()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function ShouldReturnCorrectClaimsData() As Task
  overload: Project.Tests.Integration.Account.InfoTests.ShouldReturnCorrectClaimsData*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Project.Tests.Integration.Account
  commentId: N:Project.Tests.Integration.Account
  href: Project.html
  name: Project.Tests.Integration.Account
  nameWithType: Project.Tests.Integration.Account
  fullName: Project.Tests.Integration.Account
  spec.csharp:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Tests
    name: Tests
    href: Project.Tests.html
  - name: .
  - uid: Project.Tests.Integration
    name: Integration
    href: Project.Tests.Integration.html
  - name: .
  - uid: Project.Tests.Integration.Account
    name: Account
    href: Project.Tests.Integration.Account.html
  spec.vb:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Tests
    name: Tests
    href: Project.Tests.html
  - name: .
  - uid: Project.Tests.Integration
    name: Integration
    href: Project.Tests.Integration.html
  - name: .
  - uid: Project.Tests.Integration.Account
    name: Account
    href: Project.Tests.Integration.Account.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Project.Tests.Integration.IntegrationTestBase
  commentId: T:Project.Tests.Integration.IntegrationTestBase
  parent: Project.Tests.Integration
  href: Project.Tests.Integration.IntegrationTestBase.html
  name: IntegrationTestBase
  nameWithType: IntegrationTestBase
  fullName: Project.Tests.Integration.IntegrationTestBase
- uid: Xunit.IClassFixture{Project.Tests.Integration.SharedDatabaseFixture}
  commentId: T:Xunit.IClassFixture{Project.Tests.Integration.SharedDatabaseFixture}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  href: Project.Tests.Integration.SharedDatabaseFixture.html
  name: IClassFixture<SharedDatabaseFixture>
  nameWithType: IClassFixture<SharedDatabaseFixture>
  fullName: Xunit.IClassFixture<Project.Tests.Integration.SharedDatabaseFixture>
  nameWithType.vb: IClassFixture(Of SharedDatabaseFixture)
  fullName.vb: Xunit.IClassFixture(Of Project.Tests.Integration.SharedDatabaseFixture)
  name.vb: IClassFixture(Of SharedDatabaseFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: <
  - uid: Project.Tests.Integration.SharedDatabaseFixture
    name: SharedDatabaseFixture
    href: Project.Tests.Integration.SharedDatabaseFixture.html
  - name: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Tests.Integration.SharedDatabaseFixture
    name: SharedDatabaseFixture
    href: Project.Tests.Integration.SharedDatabaseFixture.html
  - name: )
- uid: Xunit.IAsyncLifetime
  commentId: T:Xunit.IAsyncLifetime
  parent: Xunit
  isExternal: true
  name: IAsyncLifetime
  nameWithType: IAsyncLifetime
  fullName: Xunit.IAsyncLifetime
- uid: Project.Tests.Integration.IntegrationTestBase.DbFixture
  commentId: F:Project.Tests.Integration.IntegrationTestBase.DbFixture
  parent: Project.Tests.Integration.IntegrationTestBase
  href: Project.Tests.Integration.IntegrationTestBase.html#Project_Tests_Integration_IntegrationTestBase_DbFixture
  name: DbFixture
  nameWithType: IntegrationTestBase.DbFixture
  fullName: Project.Tests.Integration.IntegrationTestBase.DbFixture
- uid: Project.Tests.Integration.IntegrationTestBase.Client
  commentId: F:Project.Tests.Integration.IntegrationTestBase.Client
  parent: Project.Tests.Integration.IntegrationTestBase
  href: Project.Tests.Integration.IntegrationTestBase.html#Project_Tests_Integration_IntegrationTestBase_Client
  name: Client
  nameWithType: IntegrationTestBase.Client
  fullName: Project.Tests.Integration.IntegrationTestBase.Client
- uid: Project.Tests.Integration.IntegrationTestBase.DbContext
  commentId: F:Project.Tests.Integration.IntegrationTestBase.DbContext
  parent: Project.Tests.Integration.IntegrationTestBase
  href: Project.Tests.Integration.IntegrationTestBase.html#Project_Tests_Integration_IntegrationTestBase_DbContext
  name: DbContext
  nameWithType: IntegrationTestBase.DbContext
  fullName: Project.Tests.Integration.IntegrationTestBase.DbContext
- uid: Project.Tests.Integration.IntegrationTestBase.InitializeAsync
  commentId: M:Project.Tests.Integration.IntegrationTestBase.InitializeAsync
  parent: Project.Tests.Integration.IntegrationTestBase
  href: Project.Tests.Integration.IntegrationTestBase.html#Project_Tests_Integration_IntegrationTestBase_InitializeAsync
  name: InitializeAsync()
  nameWithType: IntegrationTestBase.InitializeAsync()
  fullName: Project.Tests.Integration.IntegrationTestBase.InitializeAsync()
  spec.csharp:
  - uid: Project.Tests.Integration.IntegrationTestBase.InitializeAsync
    name: InitializeAsync
    href: Project.Tests.Integration.IntegrationTestBase.html#Project_Tests_Integration_IntegrationTestBase_InitializeAsync
  - name: (
  - name: )
  spec.vb:
  - uid: Project.Tests.Integration.IntegrationTestBase.InitializeAsync
    name: InitializeAsync
    href: Project.Tests.Integration.IntegrationTestBase.html#Project_Tests_Integration_IntegrationTestBase_InitializeAsync
  - name: (
  - name: )
- uid: Project.Tests.Integration.IntegrationTestBase.DisposeAsync
  commentId: M:Project.Tests.Integration.IntegrationTestBase.DisposeAsync
  parent: Project.Tests.Integration.IntegrationTestBase
  href: Project.Tests.Integration.IntegrationTestBase.html#Project_Tests_Integration_IntegrationTestBase_DisposeAsync
  name: DisposeAsync()
  nameWithType: IntegrationTestBase.DisposeAsync()
  fullName: Project.Tests.Integration.IntegrationTestBase.DisposeAsync()
  spec.csharp:
  - uid: Project.Tests.Integration.IntegrationTestBase.DisposeAsync
    name: DisposeAsync
    href: Project.Tests.Integration.IntegrationTestBase.html#Project_Tests_Integration_IntegrationTestBase_DisposeAsync
  - name: (
  - name: )
  spec.vb:
  - uid: Project.Tests.Integration.IntegrationTestBase.DisposeAsync
    name: DisposeAsync
    href: Project.Tests.Integration.IntegrationTestBase.html#Project_Tests_Integration_IntegrationTestBase_DisposeAsync
  - name: (
  - name: )
- uid: Project.Tests.Integration.IntegrationTestBase.AuthenticateClient(System.String)
  commentId: M:Project.Tests.Integration.IntegrationTestBase.AuthenticateClient(System.String)
  parent: Project.Tests.Integration.IntegrationTestBase
  isExternal: true
  href: Project.Tests.Integration.IntegrationTestBase.html#Project_Tests_Integration_IntegrationTestBase_AuthenticateClient_System_String_
  name: AuthenticateClient(string)
  nameWithType: IntegrationTestBase.AuthenticateClient(string)
  fullName: Project.Tests.Integration.IntegrationTestBase.AuthenticateClient(string)
  nameWithType.vb: IntegrationTestBase.AuthenticateClient(String)
  fullName.vb: Project.Tests.Integration.IntegrationTestBase.AuthenticateClient(String)
  name.vb: AuthenticateClient(String)
  spec.csharp:
  - uid: Project.Tests.Integration.IntegrationTestBase.AuthenticateClient(System.String)
    name: AuthenticateClient
    href: Project.Tests.Integration.IntegrationTestBase.html#Project_Tests_Integration_IntegrationTestBase_AuthenticateClient_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Project.Tests.Integration.IntegrationTestBase.AuthenticateClient(System.String)
    name: AuthenticateClient
    href: Project.Tests.Integration.IntegrationTestBase.html#Project_Tests_Integration_IntegrationTestBase_AuthenticateClient_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Project.Tests.Integration
  commentId: N:Project.Tests.Integration
  href: Project.html
  name: Project.Tests.Integration
  nameWithType: Project.Tests.Integration
  fullName: Project.Tests.Integration
  spec.csharp:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Tests
    name: Tests
    href: Project.Tests.html
  - name: .
  - uid: Project.Tests.Integration
    name: Integration
    href: Project.Tests.Integration.html
  spec.vb:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Tests
    name: Tests
    href: Project.Tests.html
  - name: .
  - uid: Project.Tests.Integration
    name: Integration
    href: Project.Tests.Integration.html
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullName.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: <
  - name: TFixture
  - name: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TFixture
  - name: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: true
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Project.Tests.Integration.Account.InfoTests.#ctor*
  commentId: Overload:Project.Tests.Integration.Account.InfoTests.#ctor
  href: Project.Tests.Integration.Account.InfoTests.html#Project_Tests_Integration_Account_InfoTests__ctor_Project_Tests_Integration_SharedDatabaseFixture_
  name: InfoTests
  nameWithType: InfoTests.InfoTests
  fullName: Project.Tests.Integration.Account.InfoTests.InfoTests
  nameWithType.vb: InfoTests.New
  fullName.vb: Project.Tests.Integration.Account.InfoTests.New
  name.vb: New
- uid: Project.Tests.Integration.SharedDatabaseFixture
  commentId: T:Project.Tests.Integration.SharedDatabaseFixture
  parent: Project.Tests.Integration
  href: Project.Tests.Integration.SharedDatabaseFixture.html
  name: SharedDatabaseFixture
  nameWithType: SharedDatabaseFixture
  fullName: Project.Tests.Integration.SharedDatabaseFixture
- uid: Project.Tests.Integration.Account.InfoTests.ShouldReturnUserInfo_WhenAuthenticated*
  commentId: Overload:Project.Tests.Integration.Account.InfoTests.ShouldReturnUserInfo_WhenAuthenticated
  href: Project.Tests.Integration.Account.InfoTests.html#Project_Tests_Integration_Account_InfoTests_ShouldReturnUserInfo_WhenAuthenticated
  name: ShouldReturnUserInfo_WhenAuthenticated
  nameWithType: InfoTests.ShouldReturnUserInfo_WhenAuthenticated
  fullName: Project.Tests.Integration.Account.InfoTests.ShouldReturnUserInfo_WhenAuthenticated
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenNotAuthenticated*
  commentId: Overload:Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenNotAuthenticated
  href: Project.Tests.Integration.Account.InfoTests.html#Project_Tests_Integration_Account_InfoTests_ShouldReturnUnauthorized_WhenNotAuthenticated
  name: ShouldReturnUnauthorized_WhenNotAuthenticated
  nameWithType: InfoTests.ShouldReturnUnauthorized_WhenNotAuthenticated
  fullName: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenNotAuthenticated
- uid: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenTokenIsInvalid*
  commentId: Overload:Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenTokenIsInvalid
  href: Project.Tests.Integration.Account.InfoTests.html#Project_Tests_Integration_Account_InfoTests_ShouldReturnUnauthorized_WhenTokenIsInvalid
  name: ShouldReturnUnauthorized_WhenTokenIsInvalid
  nameWithType: InfoTests.ShouldReturnUnauthorized_WhenTokenIsInvalid
  fullName: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenTokenIsInvalid
- uid: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenUserNoLongerExists*
  commentId: Overload:Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenUserNoLongerExists
  href: Project.Tests.Integration.Account.InfoTests.html#Project_Tests_Integration_Account_InfoTests_ShouldReturnUnauthorized_WhenUserNoLongerExists
  name: ShouldReturnUnauthorized_WhenUserNoLongerExists
  nameWithType: InfoTests.ShouldReturnUnauthorized_WhenUserNoLongerExists
  fullName: Project.Tests.Integration.Account.InfoTests.ShouldReturnUnauthorized_WhenUserNoLongerExists
- uid: Project.Tests.Integration.Account.InfoTests.ShouldRespectAuthorizationScheme*
  commentId: Overload:Project.Tests.Integration.Account.InfoTests.ShouldRespectAuthorizationScheme
  href: Project.Tests.Integration.Account.InfoTests.html#Project_Tests_Integration_Account_InfoTests_ShouldRespectAuthorizationScheme
  name: ShouldRespectAuthorizationScheme
  nameWithType: InfoTests.ShouldRespectAuthorizationScheme
  fullName: Project.Tests.Integration.Account.InfoTests.ShouldRespectAuthorizationScheme
- uid: Project.Tests.Integration.Account.InfoTests.ShouldReturnCorrectClaimsData*
  commentId: Overload:Project.Tests.Integration.Account.InfoTests.ShouldReturnCorrectClaimsData
  href: Project.Tests.Integration.Account.InfoTests.html#Project_Tests_Integration_Account_InfoTests_ShouldReturnCorrectClaimsData
  name: ShouldReturnCorrectClaimsData
  nameWithType: InfoTests.ShouldReturnCorrectClaimsData
  fullName: Project.Tests.Integration.Account.InfoTests.ShouldReturnCorrectClaimsData
