### YamlMime:ManagedReference
items:
- uid: Project.Domain.Users.UserId
  commentId: T:Project.Domain.Users.UserId
  id: UserId
  parent: Project.Domain.Users
  children:
  - Project.Domain.Users.UserId.#ctor(System.Guid)
  - Project.Domain.Users.UserId.#ctor(System.String)
  - Project.Domain.Users.UserId.NewId
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: UserId
  fullName: Project.Domain.Users.UserId
  type: Class
  source:
    remote:
      path: src/Project.Domain/Users/UserId.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: UserId
    path: ../src/Project.Domain/Users/UserId.cs
    startLine: 7
  assemblies:
  - Project.Domain
  namespace: Project.Domain.Users
  summary: Represents a strongly-typed identifier for the User aggregate.
  example: []
  syntax:
    content: 'public sealed class UserId : TypedIdValueBase, IEquatable<TypedIdValueBase>'
    content.vb: Public NotInheritable Class UserId Inherits TypedIdValueBase Implements IEquatable(Of TypedIdValueBase)
  inheritance:
  - System.Object
  - Project.Domain.SeedWork.TypedIdValueBase
  implements:
  - System.IEquatable{Project.Domain.SeedWork.TypedIdValueBase}
  inheritedMembers:
  - Project.Domain.SeedWork.TypedIdValueBase.Value
  - Project.Domain.SeedWork.TypedIdValueBase.Equals(System.Object)
  - Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
  - Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Project.Domain.Users.UserId.#ctor(System.Guid)
  commentId: M:Project.Domain.Users.UserId.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: Project.Domain.Users.UserId
  langs:
  - csharp
  - vb
  name: UserId(Guid)
  nameWithType: UserId.UserId(Guid)
  fullName: Project.Domain.Users.UserId.UserId(System.Guid)
  type: Constructor
  source:
    remote:
      path: src/Project.Domain/Users/UserId.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: .ctor
    path: ../src/Project.Domain/Users/UserId.cs
    startLine: 9
  assemblies:
  - Project.Domain
  namespace: Project.Domain.Users
  syntax:
    content: public UserId(Guid id)
    parameters:
    - id: id
      type: System.Guid
    content.vb: Public Sub New(id As Guid)
  overload: Project.Domain.Users.UserId.#ctor*
  nameWithType.vb: UserId.New(Guid)
  fullName.vb: Project.Domain.Users.UserId.New(System.Guid)
  name.vb: New(Guid)
- uid: Project.Domain.Users.UserId.#ctor(System.String)
  commentId: M:Project.Domain.Users.UserId.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Project.Domain.Users.UserId
  langs:
  - csharp
  - vb
  name: UserId(string)
  nameWithType: UserId.UserId(string)
  fullName: Project.Domain.Users.UserId.UserId(string)
  type: Constructor
  source:
    remote:
      path: src/Project.Domain/Users/UserId.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: .ctor
    path: ../src/Project.Domain/Users/UserId.cs
    startLine: 10
  assemblies:
  - Project.Domain
  namespace: Project.Domain.Users
  syntax:
    content: public UserId(string id)
    parameters:
    - id: id
      type: System.String
    content.vb: Public Sub New(id As String)
  overload: Project.Domain.Users.UserId.#ctor*
  nameWithType.vb: UserId.New(String)
  fullName.vb: Project.Domain.Users.UserId.New(String)
  name.vb: New(String)
- uid: Project.Domain.Users.UserId.NewId
  commentId: M:Project.Domain.Users.UserId.NewId
  id: NewId
  parent: Project.Domain.Users.UserId
  langs:
  - csharp
  - vb
  name: NewId()
  nameWithType: UserId.NewId()
  fullName: Project.Domain.Users.UserId.NewId()
  type: Method
  source:
    remote:
      path: src/Project.Domain/Users/UserId.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: NewId
    path: ../src/Project.Domain/Users/UserId.cs
    startLine: 15
  assemblies:
  - Project.Domain
  namespace: Project.Domain.Users
  summary: Creates a new unique <xref href="Project.Domain.Users.UserId" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static UserId NewId()
    return:
      type: Project.Domain.Users.UserId
    content.vb: Public Shared Function NewId() As UserId
  overload: Project.Domain.Users.UserId.NewId*
references:
- uid: Project.Domain.Users
  commentId: N:Project.Domain.Users
  href: Project.html
  name: Project.Domain.Users
  nameWithType: Project.Domain.Users
  fullName: Project.Domain.Users
  spec.csharp:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Domain
    name: Domain
    href: Project.Domain.html
  - name: .
  - uid: Project.Domain.Users
    name: Users
    href: Project.Domain.Users.html
  spec.vb:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Domain
    name: Domain
    href: Project.Domain.html
  - name: .
  - uid: Project.Domain.Users
    name: Users
    href: Project.Domain.Users.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Project.Domain.SeedWork.TypedIdValueBase
  commentId: T:Project.Domain.SeedWork.TypedIdValueBase
  parent: Project.Domain.SeedWork
  href: Project.Domain.SeedWork.TypedIdValueBase.html
  name: TypedIdValueBase
  nameWithType: TypedIdValueBase
  fullName: Project.Domain.SeedWork.TypedIdValueBase
- uid: System.IEquatable{Project.Domain.SeedWork.TypedIdValueBase}
  commentId: T:System.IEquatable{Project.Domain.SeedWork.TypedIdValueBase}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<TypedIdValueBase>
  nameWithType: IEquatable<TypedIdValueBase>
  fullName: System.IEquatable<Project.Domain.SeedWork.TypedIdValueBase>
  nameWithType.vb: IEquatable(Of TypedIdValueBase)
  fullName.vb: System.IEquatable(Of Project.Domain.SeedWork.TypedIdValueBase)
  name.vb: IEquatable(Of TypedIdValueBase)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Project.Domain.SeedWork.TypedIdValueBase
    name: TypedIdValueBase
    href: Project.Domain.SeedWork.TypedIdValueBase.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Domain.SeedWork.TypedIdValueBase
    name: TypedIdValueBase
    href: Project.Domain.SeedWork.TypedIdValueBase.html
  - name: )
- uid: Project.Domain.SeedWork.TypedIdValueBase.Value
  commentId: P:Project.Domain.SeedWork.TypedIdValueBase.Value
  parent: Project.Domain.SeedWork.TypedIdValueBase
  href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Value
  name: Value
  nameWithType: TypedIdValueBase.Value
  fullName: Project.Domain.SeedWork.TypedIdValueBase.Value
- uid: Project.Domain.SeedWork.TypedIdValueBase.Equals(System.Object)
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.Equals(System.Object)
  parent: Project.Domain.SeedWork.TypedIdValueBase
  isExternal: true
  href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Equals_System_Object_
  name: Equals(object)
  nameWithType: TypedIdValueBase.Equals(object)
  fullName: Project.Domain.SeedWork.TypedIdValueBase.Equals(object)
  nameWithType.vb: TypedIdValueBase.Equals(Object)
  fullName.vb: Project.Domain.SeedWork.TypedIdValueBase.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Project.Domain.SeedWork.TypedIdValueBase.Equals(System.Object)
    name: Equals
    href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Project.Domain.SeedWork.TypedIdValueBase.Equals(System.Object)
    name: Equals
    href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
  parent: Project.Domain.SeedWork.TypedIdValueBase
  href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_GetHashCode
  name: GetHashCode()
  nameWithType: TypedIdValueBase.GetHashCode()
  fullName: Project.Domain.SeedWork.TypedIdValueBase.GetHashCode()
  spec.csharp:
  - uid: Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
    name: GetHashCode
    href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Project.Domain.SeedWork.TypedIdValueBase.GetHashCode
    name: GetHashCode
    href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_GetHashCode
  - name: (
  - name: )
- uid: Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  commentId: M:Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  parent: Project.Domain.SeedWork.TypedIdValueBase
  href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Equals_Project_Domain_SeedWork_TypedIdValueBase_
  name: Equals(TypedIdValueBase)
  nameWithType: TypedIdValueBase.Equals(TypedIdValueBase)
  fullName: Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase)
  spec.csharp:
  - uid: Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase)
    name: Equals
    href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Equals_Project_Domain_SeedWork_TypedIdValueBase_
  - name: (
  - uid: Project.Domain.SeedWork.TypedIdValueBase
    name: TypedIdValueBase
    href: Project.Domain.SeedWork.TypedIdValueBase.html
  - name: )
  spec.vb:
  - uid: Project.Domain.SeedWork.TypedIdValueBase.Equals(Project.Domain.SeedWork.TypedIdValueBase)
    name: Equals
    href: Project.Domain.SeedWork.TypedIdValueBase.html#Project_Domain_SeedWork_TypedIdValueBase_Equals_Project_Domain_SeedWork_TypedIdValueBase_
  - name: (
  - uid: Project.Domain.SeedWork.TypedIdValueBase
    name: TypedIdValueBase
    href: Project.Domain.SeedWork.TypedIdValueBase.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Project.Domain.SeedWork
  commentId: N:Project.Domain.SeedWork
  href: Project.html
  name: Project.Domain.SeedWork
  nameWithType: Project.Domain.SeedWork
  fullName: Project.Domain.SeedWork
  spec.csharp:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Domain
    name: Domain
    href: Project.Domain.html
  - name: .
  - uid: Project.Domain.SeedWork
    name: SeedWork
    href: Project.Domain.SeedWork.html
  spec.vb:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Domain
    name: Domain
    href: Project.Domain.html
  - name: .
  - uid: Project.Domain.SeedWork
    name: SeedWork
    href: Project.Domain.SeedWork.html
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Project.Domain.Users.UserId.#ctor*
  commentId: Overload:Project.Domain.Users.UserId.#ctor
  href: Project.Domain.Users.UserId.html#Project_Domain_Users_UserId__ctor_System_Guid_
  name: UserId
  nameWithType: UserId.UserId
  fullName: Project.Domain.Users.UserId.UserId
  nameWithType.vb: UserId.New
  fullName.vb: Project.Domain.Users.UserId.New
  name.vb: New
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Project.Domain.Users.UserId
  commentId: T:Project.Domain.Users.UserId
  parent: Project.Domain.Users
  href: Project.Domain.Users.UserId.html
  name: UserId
  nameWithType: UserId
  fullName: Project.Domain.Users.UserId
- uid: Project.Domain.Users.UserId.NewId*
  commentId: Overload:Project.Domain.Users.UserId.NewId
  href: Project.Domain.Users.UserId.html#Project_Domain_Users_UserId_NewId
  name: NewId
  nameWithType: UserId.NewId
  fullName: Project.Domain.Users.UserId.NewId
