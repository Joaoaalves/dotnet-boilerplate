### YamlMime:ManagedReference
items:
- uid: Project.Tests.Integration.SharedDatabaseFixture
  commentId: T:Project.Tests.Integration.SharedDatabaseFixture
  id: SharedDatabaseFixture
  parent: Project.Tests.Integration
  children:
  - Project.Tests.Integration.SharedDatabaseFixture.#ctor
  - Project.Tests.Integration.SharedDatabaseFixture.ConnectionString
  - Project.Tests.Integration.SharedDatabaseFixture.DisposeAsync
  - Project.Tests.Integration.SharedDatabaseFixture.InitializeAsync
  - Project.Tests.Integration.SharedDatabaseFixture.ResetDbAsync
  langs:
  - csharp
  - vb
  name: SharedDatabaseFixture
  nameWithType: SharedDatabaseFixture
  fullName: Project.Tests.Integration.SharedDatabaseFixture
  type: Class
  source:
    remote:
      path: src/tests/Project.Tests.Integration/SharedDatabaseFixture.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: SharedDatabaseFixture
    path: ../src/tests/Project.Tests.Integration/SharedDatabaseFixture.cs
    startLine: 8
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration
  syntax:
    content: 'public class SharedDatabaseFixture : IAsyncLifetime'
    content.vb: Public Class SharedDatabaseFixture Implements IAsyncLifetime
  inheritance:
  - System.Object
  implements:
  - Xunit.IAsyncLifetime
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Project.Tests.Integration.SharedDatabaseFixture.ConnectionString
  commentId: P:Project.Tests.Integration.SharedDatabaseFixture.ConnectionString
  id: ConnectionString
  parent: Project.Tests.Integration.SharedDatabaseFixture
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: SharedDatabaseFixture.ConnectionString
  fullName: Project.Tests.Integration.SharedDatabaseFixture.ConnectionString
  type: Property
  source:
    remote:
      path: src/tests/Project.Tests.Integration/SharedDatabaseFixture.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: ConnectionString
    path: ../src/tests/Project.Tests.Integration/SharedDatabaseFixture.cs
    startLine: 12
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration
  syntax:
    content: public string ConnectionString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ConnectionString As String
  overload: Project.Tests.Integration.SharedDatabaseFixture.ConnectionString*
- uid: Project.Tests.Integration.SharedDatabaseFixture.#ctor
  commentId: M:Project.Tests.Integration.SharedDatabaseFixture.#ctor
  id: '#ctor'
  parent: Project.Tests.Integration.SharedDatabaseFixture
  langs:
  - csharp
  - vb
  name: SharedDatabaseFixture()
  nameWithType: SharedDatabaseFixture.SharedDatabaseFixture()
  fullName: Project.Tests.Integration.SharedDatabaseFixture.SharedDatabaseFixture()
  type: Constructor
  source:
    remote:
      path: src/tests/Project.Tests.Integration/SharedDatabaseFixture.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: .ctor
    path: ../src/tests/Project.Tests.Integration/SharedDatabaseFixture.cs
    startLine: 14
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration
  syntax:
    content: public SharedDatabaseFixture()
    content.vb: Public Sub New()
  overload: Project.Tests.Integration.SharedDatabaseFixture.#ctor*
  nameWithType.vb: SharedDatabaseFixture.New()
  fullName.vb: Project.Tests.Integration.SharedDatabaseFixture.New()
  name.vb: New()
- uid: Project.Tests.Integration.SharedDatabaseFixture.InitializeAsync
  commentId: M:Project.Tests.Integration.SharedDatabaseFixture.InitializeAsync
  id: InitializeAsync
  parent: Project.Tests.Integration.SharedDatabaseFixture
  langs:
  - csharp
  - vb
  name: InitializeAsync()
  nameWithType: SharedDatabaseFixture.InitializeAsync()
  fullName: Project.Tests.Integration.SharedDatabaseFixture.InitializeAsync()
  type: Method
  source:
    remote:
      path: src/tests/Project.Tests.Integration/SharedDatabaseFixture.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: InitializeAsync
    path: ../src/tests/Project.Tests.Integration/SharedDatabaseFixture.cs
    startLine: 23
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration
  summary: Called immediately after the class has been created, before it is used.
  example: []
  syntax:
    content: public Task InitializeAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function InitializeAsync() As Task
  overload: Project.Tests.Integration.SharedDatabaseFixture.InitializeAsync*
  implements:
  - Xunit.IAsyncLifetime.InitializeAsync
- uid: Project.Tests.Integration.SharedDatabaseFixture.ResetDbAsync
  commentId: M:Project.Tests.Integration.SharedDatabaseFixture.ResetDbAsync
  id: ResetDbAsync
  parent: Project.Tests.Integration.SharedDatabaseFixture
  langs:
  - csharp
  - vb
  name: ResetDbAsync()
  nameWithType: SharedDatabaseFixture.ResetDbAsync()
  fullName: Project.Tests.Integration.SharedDatabaseFixture.ResetDbAsync()
  type: Method
  source:
    remote:
      path: src/tests/Project.Tests.Integration/SharedDatabaseFixture.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: ResetDbAsync
    path: ../src/tests/Project.Tests.Integration/SharedDatabaseFixture.cs
    startLine: 40
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration
  syntax:
    content: public Task ResetDbAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ResetDbAsync() As Task
  overload: Project.Tests.Integration.SharedDatabaseFixture.ResetDbAsync*
- uid: Project.Tests.Integration.SharedDatabaseFixture.DisposeAsync
  commentId: M:Project.Tests.Integration.SharedDatabaseFixture.DisposeAsync
  id: DisposeAsync
  parent: Project.Tests.Integration.SharedDatabaseFixture
  langs:
  - csharp
  - vb
  name: DisposeAsync()
  nameWithType: SharedDatabaseFixture.DisposeAsync()
  fullName: Project.Tests.Integration.SharedDatabaseFixture.DisposeAsync()
  type: Method
  source:
    remote:
      path: src/tests/Project.Tests.Integration/SharedDatabaseFixture.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: DisposeAsync
    path: ../src/tests/Project.Tests.Integration/SharedDatabaseFixture.cs
    startLine: 48
  assemblies:
  - Project.Tests.Integration
  namespace: Project.Tests.Integration
  summary: >-
    Called when an object is no longer needed. Called just before <xref href="System.IDisposable.Dispose" data-throw-if-not-resolved="false"></xref>

    if the class also implements that.
  example: []
  syntax:
    content: public Task DisposeAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DisposeAsync() As Task
  overload: Project.Tests.Integration.SharedDatabaseFixture.DisposeAsync*
  implements:
  - Xunit.IAsyncLifetime.DisposeAsync
references:
- uid: Project.Tests.Integration
  commentId: N:Project.Tests.Integration
  href: Project.html
  name: Project.Tests.Integration
  nameWithType: Project.Tests.Integration
  fullName: Project.Tests.Integration
  spec.csharp:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Tests
    name: Tests
    href: Project.Tests.html
  - name: .
  - uid: Project.Tests.Integration
    name: Integration
    href: Project.Tests.Integration.html
  spec.vb:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Tests
    name: Tests
    href: Project.Tests.html
  - name: .
  - uid: Project.Tests.Integration
    name: Integration
    href: Project.Tests.Integration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Xunit.IAsyncLifetime
  commentId: T:Xunit.IAsyncLifetime
  parent: Xunit
  isExternal: true
  name: IAsyncLifetime
  nameWithType: IAsyncLifetime
  fullName: Xunit.IAsyncLifetime
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit
  commentId: N:Xunit
  isExternal: true
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Project.Tests.Integration.SharedDatabaseFixture.ConnectionString*
  commentId: Overload:Project.Tests.Integration.SharedDatabaseFixture.ConnectionString
  href: Project.Tests.Integration.SharedDatabaseFixture.html#Project_Tests_Integration_SharedDatabaseFixture_ConnectionString
  name: ConnectionString
  nameWithType: SharedDatabaseFixture.ConnectionString
  fullName: Project.Tests.Integration.SharedDatabaseFixture.ConnectionString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Project.Tests.Integration.SharedDatabaseFixture.#ctor*
  commentId: Overload:Project.Tests.Integration.SharedDatabaseFixture.#ctor
  href: Project.Tests.Integration.SharedDatabaseFixture.html#Project_Tests_Integration_SharedDatabaseFixture__ctor
  name: SharedDatabaseFixture
  nameWithType: SharedDatabaseFixture.SharedDatabaseFixture
  fullName: Project.Tests.Integration.SharedDatabaseFixture.SharedDatabaseFixture
  nameWithType.vb: SharedDatabaseFixture.New
  fullName.vb: Project.Tests.Integration.SharedDatabaseFixture.New
  name.vb: New
- uid: Project.Tests.Integration.SharedDatabaseFixture.InitializeAsync*
  commentId: Overload:Project.Tests.Integration.SharedDatabaseFixture.InitializeAsync
  href: Project.Tests.Integration.SharedDatabaseFixture.html#Project_Tests_Integration_SharedDatabaseFixture_InitializeAsync
  name: InitializeAsync
  nameWithType: SharedDatabaseFixture.InitializeAsync
  fullName: Project.Tests.Integration.SharedDatabaseFixture.InitializeAsync
- uid: Xunit.IAsyncLifetime.InitializeAsync
  commentId: M:Xunit.IAsyncLifetime.InitializeAsync
  parent: Xunit.IAsyncLifetime
  isExternal: true
  name: InitializeAsync()
  nameWithType: IAsyncLifetime.InitializeAsync()
  fullName: Xunit.IAsyncLifetime.InitializeAsync()
  spec.csharp:
  - uid: Xunit.IAsyncLifetime.InitializeAsync
    name: InitializeAsync
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Xunit.IAsyncLifetime.InitializeAsync
    name: InitializeAsync
    isExternal: true
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Project.Tests.Integration.SharedDatabaseFixture.ResetDbAsync*
  commentId: Overload:Project.Tests.Integration.SharedDatabaseFixture.ResetDbAsync
  href: Project.Tests.Integration.SharedDatabaseFixture.html#Project_Tests_Integration_SharedDatabaseFixture_ResetDbAsync
  name: ResetDbAsync
  nameWithType: SharedDatabaseFixture.ResetDbAsync
  fullName: Project.Tests.Integration.SharedDatabaseFixture.ResetDbAsync
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Project.Tests.Integration.SharedDatabaseFixture.DisposeAsync*
  commentId: Overload:Project.Tests.Integration.SharedDatabaseFixture.DisposeAsync
  href: Project.Tests.Integration.SharedDatabaseFixture.html#Project_Tests_Integration_SharedDatabaseFixture_DisposeAsync
  name: DisposeAsync
  nameWithType: SharedDatabaseFixture.DisposeAsync
  fullName: Project.Tests.Integration.SharedDatabaseFixture.DisposeAsync
- uid: Xunit.IAsyncLifetime.DisposeAsync
  commentId: M:Xunit.IAsyncLifetime.DisposeAsync
  parent: Xunit.IAsyncLifetime
  isExternal: true
  name: DisposeAsync()
  nameWithType: IAsyncLifetime.DisposeAsync()
  fullName: Xunit.IAsyncLifetime.DisposeAsync()
  spec.csharp:
  - uid: Xunit.IAsyncLifetime.DisposeAsync
    name: DisposeAsync
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Xunit.IAsyncLifetime.DisposeAsync
    name: DisposeAsync
    isExternal: true
  - name: (
  - name: )
