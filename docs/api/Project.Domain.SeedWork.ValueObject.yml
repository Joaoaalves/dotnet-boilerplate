### YamlMime:ManagedReference
items:
- uid: Project.Domain.SeedWork.ValueObject
  commentId: T:Project.Domain.SeedWork.ValueObject
  id: ValueObject
  parent: Project.Domain.SeedWork
  children:
  - Project.Domain.SeedWork.ValueObject.CheckRule(Project.Domain.SeedWork.IBusinessRule)
  - Project.Domain.SeedWork.ValueObject.Equals(Project.Domain.SeedWork.ValueObject)
  - Project.Domain.SeedWork.ValueObject.Equals(System.Object)
  - Project.Domain.SeedWork.ValueObject.GetHashCode
  - Project.Domain.SeedWork.ValueObject.op_Equality(Project.Domain.SeedWork.ValueObject,Project.Domain.SeedWork.ValueObject)
  - Project.Domain.SeedWork.ValueObject.op_Inequality(Project.Domain.SeedWork.ValueObject,Project.Domain.SeedWork.ValueObject)
  langs:
  - csharp
  - vb
  name: ValueObject
  nameWithType: ValueObject
  fullName: Project.Domain.SeedWork.ValueObject
  type: Class
  source:
    id: ValueObject
    path: D:\Projects\dotnet-boilerplate\src\Project.Domain\SeedWork\ValueObject.cs
    startLine: 5
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  syntax:
    content: 'public abstract class ValueObject : IEquatable<ValueObject>'
    content.vb: Public MustInherit Class ValueObject Implements IEquatable(Of ValueObject)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Project.Domain.SeedWork.ValueObject}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Project.Domain.SeedWork.ValueObject.op_Equality(Project.Domain.SeedWork.ValueObject,Project.Domain.SeedWork.ValueObject)
  commentId: M:Project.Domain.SeedWork.ValueObject.op_Equality(Project.Domain.SeedWork.ValueObject,Project.Domain.SeedWork.ValueObject)
  id: op_Equality(Project.Domain.SeedWork.ValueObject,Project.Domain.SeedWork.ValueObject)
  parent: Project.Domain.SeedWork.ValueObject
  langs:
  - csharp
  - vb
  name: operator ==(ValueObject?, ValueObject?)
  nameWithType: ValueObject.operator ==(ValueObject?, ValueObject?)
  fullName: Project.Domain.SeedWork.ValueObject.operator ==(Project.Domain.SeedWork.ValueObject?, Project.Domain.SeedWork.ValueObject?)
  type: Operator
  source:
    id: op_Equality
    path: D:\Projects\dotnet-boilerplate\src\Project.Domain\SeedWork\ValueObject.cs
    startLine: 10
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  syntax:
    content: public static bool operator ==(ValueObject? obj1, ValueObject? obj2)
    parameters:
    - id: obj1
      type: Project.Domain.SeedWork.ValueObject
    - id: obj2
      type: Project.Domain.SeedWork.ValueObject
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(obj1 As ValueObject, obj2 As ValueObject) As Boolean
  overload: Project.Domain.SeedWork.ValueObject.op_Equality*
  nameWithType.vb: ValueObject.=(ValueObject, ValueObject)
  fullName.vb: Project.Domain.SeedWork.ValueObject.=(Project.Domain.SeedWork.ValueObject, Project.Domain.SeedWork.ValueObject)
  name.vb: =(ValueObject, ValueObject)
- uid: Project.Domain.SeedWork.ValueObject.op_Inequality(Project.Domain.SeedWork.ValueObject,Project.Domain.SeedWork.ValueObject)
  commentId: M:Project.Domain.SeedWork.ValueObject.op_Inequality(Project.Domain.SeedWork.ValueObject,Project.Domain.SeedWork.ValueObject)
  id: op_Inequality(Project.Domain.SeedWork.ValueObject,Project.Domain.SeedWork.ValueObject)
  parent: Project.Domain.SeedWork.ValueObject
  langs:
  - csharp
  - vb
  name: operator !=(ValueObject?, ValueObject?)
  nameWithType: ValueObject.operator !=(ValueObject?, ValueObject?)
  fullName: Project.Domain.SeedWork.ValueObject.operator !=(Project.Domain.SeedWork.ValueObject?, Project.Domain.SeedWork.ValueObject?)
  type: Operator
  source:
    id: op_Inequality
    path: D:\Projects\dotnet-boilerplate\src\Project.Domain\SeedWork\ValueObject.cs
    startLine: 23
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  syntax:
    content: public static bool operator !=(ValueObject? obj1, ValueObject? obj2)
    parameters:
    - id: obj1
      type: Project.Domain.SeedWork.ValueObject
    - id: obj2
      type: Project.Domain.SeedWork.ValueObject
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(obj1 As ValueObject, obj2 As ValueObject) As Boolean
  overload: Project.Domain.SeedWork.ValueObject.op_Inequality*
  nameWithType.vb: ValueObject.<>(ValueObject, ValueObject)
  fullName.vb: Project.Domain.SeedWork.ValueObject.<>(Project.Domain.SeedWork.ValueObject, Project.Domain.SeedWork.ValueObject)
  name.vb: <>(ValueObject, ValueObject)
- uid: Project.Domain.SeedWork.ValueObject.Equals(Project.Domain.SeedWork.ValueObject)
  commentId: M:Project.Domain.SeedWork.ValueObject.Equals(Project.Domain.SeedWork.ValueObject)
  id: Equals(Project.Domain.SeedWork.ValueObject)
  parent: Project.Domain.SeedWork.ValueObject
  langs:
  - csharp
  - vb
  name: Equals(ValueObject?)
  nameWithType: ValueObject.Equals(ValueObject?)
  fullName: Project.Domain.SeedWork.ValueObject.Equals(Project.Domain.SeedWork.ValueObject?)
  type: Method
  source:
    id: Equals
    path: D:\Projects\dotnet-boilerplate\src\Project.Domain\SeedWork\ValueObject.cs
    startLine: 28
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(ValueObject? obj)
    parameters:
    - id: obj
      type: Project.Domain.SeedWork.ValueObject
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(obj As ValueObject) As Boolean
  overload: Project.Domain.SeedWork.ValueObject.Equals*
  implements:
  - System.IEquatable{Project.Domain.SeedWork.ValueObject}.Equals(Project.Domain.SeedWork.ValueObject)
  nameWithType.vb: ValueObject.Equals(ValueObject)
  fullName.vb: Project.Domain.SeedWork.ValueObject.Equals(Project.Domain.SeedWork.ValueObject)
  name.vb: Equals(ValueObject)
- uid: Project.Domain.SeedWork.ValueObject.Equals(System.Object)
  commentId: M:Project.Domain.SeedWork.ValueObject.Equals(System.Object)
  id: Equals(System.Object)
  parent: Project.Domain.SeedWork.ValueObject
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: ValueObject.Equals(object?)
  fullName: Project.Domain.SeedWork.ValueObject.Equals(object?)
  type: Method
  source:
    id: Equals
    path: D:\Projects\dotnet-boilerplate\src\Project.Domain\SeedWork\ValueObject.cs
    startLine: 36
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Project.Domain.SeedWork.ValueObject.Equals*
  nameWithType.vb: ValueObject.Equals(Object)
  fullName.vb: Project.Domain.SeedWork.ValueObject.Equals(Object)
  name.vb: Equals(Object)
- uid: Project.Domain.SeedWork.ValueObject.GetHashCode
  commentId: M:Project.Domain.SeedWork.ValueObject.GetHashCode
  id: GetHashCode
  parent: Project.Domain.SeedWork.ValueObject
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ValueObject.GetHashCode()
  fullName: Project.Domain.SeedWork.ValueObject.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: D:\Projects\dotnet-boilerplate\src\Project.Domain\SeedWork\ValueObject.cs
    startLine: 73
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Project.Domain.SeedWork.ValueObject.GetHashCode*
- uid: Project.Domain.SeedWork.ValueObject.CheckRule(Project.Domain.SeedWork.IBusinessRule)
  commentId: M:Project.Domain.SeedWork.ValueObject.CheckRule(Project.Domain.SeedWork.IBusinessRule)
  id: CheckRule(Project.Domain.SeedWork.IBusinessRule)
  parent: Project.Domain.SeedWork.ValueObject
  langs:
  - csharp
  - vb
  name: CheckRule(IBusinessRule)
  nameWithType: ValueObject.CheckRule(IBusinessRule)
  fullName: Project.Domain.SeedWork.ValueObject.CheckRule(Project.Domain.SeedWork.IBusinessRule)
  type: Method
  source:
    id: CheckRule
    path: D:\Projects\dotnet-boilerplate\src\Project.Domain\SeedWork\ValueObject.cs
    startLine: 100
  assemblies:
  - Project.Domain
  namespace: Project.Domain.SeedWork
  syntax:
    content: protected static void CheckRule(IBusinessRule rule)
    parameters:
    - id: rule
      type: Project.Domain.SeedWork.IBusinessRule
    content.vb: Protected Shared Sub CheckRule(rule As IBusinessRule)
  overload: Project.Domain.SeedWork.ValueObject.CheckRule*
references:
- uid: Project.Domain.SeedWork
  commentId: N:Project.Domain.SeedWork
  href: Project.html
  name: Project.Domain.SeedWork
  nameWithType: Project.Domain.SeedWork
  fullName: Project.Domain.SeedWork
  spec.csharp:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Domain
    name: Domain
    href: Project.Domain.html
  - name: .
  - uid: Project.Domain.SeedWork
    name: SeedWork
    href: Project.Domain.SeedWork.html
  spec.vb:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Domain
    name: Domain
    href: Project.Domain.html
  - name: .
  - uid: Project.Domain.SeedWork
    name: SeedWork
    href: Project.Domain.SeedWork.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{Project.Domain.SeedWork.ValueObject}
  commentId: T:System.IEquatable{Project.Domain.SeedWork.ValueObject}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ValueObject>
  nameWithType: IEquatable<ValueObject>
  fullName: System.IEquatable<Project.Domain.SeedWork.ValueObject>
  nameWithType.vb: IEquatable(Of ValueObject)
  fullName.vb: System.IEquatable(Of Project.Domain.SeedWork.ValueObject)
  name.vb: IEquatable(Of ValueObject)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Project.Domain.SeedWork.ValueObject
    name: ValueObject
    href: Project.Domain.SeedWork.ValueObject.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Project.Domain.SeedWork.ValueObject
    name: ValueObject
    href: Project.Domain.SeedWork.ValueObject.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Project.Domain.SeedWork.ValueObject.op_Equality*
  commentId: Overload:Project.Domain.SeedWork.ValueObject.op_Equality
  href: Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_op_Equality_Project_Domain_SeedWork_ValueObject_Project_Domain_SeedWork_ValueObject_
  name: operator ==
  nameWithType: ValueObject.operator ==
  fullName: Project.Domain.SeedWork.ValueObject.operator ==
  nameWithType.vb: ValueObject.=
  fullName.vb: Project.Domain.SeedWork.ValueObject.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Project.Domain.SeedWork.ValueObject.op_Equality*
    name: ==
    href: Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_op_Equality_Project_Domain_SeedWork_ValueObject_Project_Domain_SeedWork_ValueObject_
- uid: Project.Domain.SeedWork.ValueObject
  commentId: T:Project.Domain.SeedWork.ValueObject
  parent: Project.Domain.SeedWork
  href: Project.Domain.SeedWork.ValueObject.html
  name: ValueObject
  nameWithType: ValueObject
  fullName: Project.Domain.SeedWork.ValueObject
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Project.Domain.SeedWork.ValueObject.op_Inequality*
  commentId: Overload:Project.Domain.SeedWork.ValueObject.op_Inequality
  href: Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_op_Inequality_Project_Domain_SeedWork_ValueObject_Project_Domain_SeedWork_ValueObject_
  name: operator !=
  nameWithType: ValueObject.operator !=
  fullName: Project.Domain.SeedWork.ValueObject.operator !=
  nameWithType.vb: ValueObject.<>
  fullName.vb: Project.Domain.SeedWork.ValueObject.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Project.Domain.SeedWork.ValueObject.op_Inequality*
    name: '!='
    href: Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_op_Inequality_Project_Domain_SeedWork_ValueObject_Project_Domain_SeedWork_ValueObject_
- uid: Project.Domain.SeedWork.ValueObject.Equals*
  commentId: Overload:Project.Domain.SeedWork.ValueObject.Equals
  href: Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_Equals_Project_Domain_SeedWork_ValueObject_
  name: Equals
  nameWithType: ValueObject.Equals
  fullName: Project.Domain.SeedWork.ValueObject.Equals
- uid: System.IEquatable{Project.Domain.SeedWork.ValueObject}.Equals(Project.Domain.SeedWork.ValueObject)
  commentId: M:System.IEquatable{Project.Domain.SeedWork.ValueObject}.Equals(Project.Domain.SeedWork.ValueObject)
  parent: System.IEquatable{Project.Domain.SeedWork.ValueObject}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(ValueObject)
  nameWithType: IEquatable<ValueObject>.Equals(ValueObject)
  fullName: System.IEquatable<Project.Domain.SeedWork.ValueObject>.Equals(Project.Domain.SeedWork.ValueObject)
  nameWithType.vb: IEquatable(Of ValueObject).Equals(ValueObject)
  fullName.vb: System.IEquatable(Of Project.Domain.SeedWork.ValueObject).Equals(Project.Domain.SeedWork.ValueObject)
  spec.csharp:
  - uid: System.IEquatable{Project.Domain.SeedWork.ValueObject}.Equals(Project.Domain.SeedWork.ValueObject)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Project.Domain.SeedWork.ValueObject
    name: ValueObject
    href: Project.Domain.SeedWork.ValueObject.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Project.Domain.SeedWork.ValueObject}.Equals(Project.Domain.SeedWork.ValueObject)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Project.Domain.SeedWork.ValueObject
    name: ValueObject
    href: Project.Domain.SeedWork.ValueObject.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Project.Domain.SeedWork.ValueObject.GetHashCode*
  commentId: Overload:Project.Domain.SeedWork.ValueObject.GetHashCode
  href: Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_GetHashCode
  name: GetHashCode
  nameWithType: ValueObject.GetHashCode
  fullName: Project.Domain.SeedWork.ValueObject.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Project.Domain.SeedWork.ValueObject.CheckRule*
  commentId: Overload:Project.Domain.SeedWork.ValueObject.CheckRule
  href: Project.Domain.SeedWork.ValueObject.html#Project_Domain_SeedWork_ValueObject_CheckRule_Project_Domain_SeedWork_IBusinessRule_
  name: CheckRule
  nameWithType: ValueObject.CheckRule
  fullName: Project.Domain.SeedWork.ValueObject.CheckRule
- uid: Project.Domain.SeedWork.IBusinessRule
  commentId: T:Project.Domain.SeedWork.IBusinessRule
  parent: Project.Domain.SeedWork
  href: Project.Domain.SeedWork.IBusinessRule.html
  name: IBusinessRule
  nameWithType: IBusinessRule
  fullName: Project.Domain.SeedWork.IBusinessRule
