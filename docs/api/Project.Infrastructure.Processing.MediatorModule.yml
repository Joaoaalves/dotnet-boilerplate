### YamlMime:ManagedReference
items:
- uid: Project.Infrastructure.Processing.MediatorModule
  commentId: T:Project.Infrastructure.Processing.MediatorModule
  id: MediatorModule
  parent: Project.Infrastructure.Processing
  children:
  - Project.Infrastructure.Processing.MediatorModule.AddMediatorModule(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object[])
  - Project.Infrastructure.Processing.MediatorModule.RegisterHandlers(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[],System.Type)
  - Project.Infrastructure.Processing.MediatorModule.ResolveAssemblies(System.Object[])
  langs:
  - csharp
  - vb
  name: MediatorModule
  nameWithType: MediatorModule
  fullName: Project.Infrastructure.Processing.MediatorModule
  type: Class
  source:
    remote:
      path: src/Project.Infrastructure/Processing/MediatorModule.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: MediatorModule
    path: ../src/Project.Infrastructure/Processing/MediatorModule.cs
    startLine: 15
  assemblies:
  - Project.Infrastructure
  namespace: Project.Infrastructure.Processing
  summary: Provides methods to configure the mediator module, including command/query handlers and pipeline behaviors.
  example: []
  syntax:
    content: public static class MediatorModule
    content.vb: Public Module MediatorModule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Project.Infrastructure.Processing.MediatorModule.AddMediatorModule(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object[])
  commentId: M:Project.Infrastructure.Processing.MediatorModule.AddMediatorModule(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object[])
  id: AddMediatorModule(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object[])
  isExtensionMethod: true
  parent: Project.Infrastructure.Processing.MediatorModule
  langs:
  - csharp
  - vb
  name: AddMediatorModule(IServiceCollection, params object[])
  nameWithType: MediatorModule.AddMediatorModule(IServiceCollection, params object[])
  fullName: Project.Infrastructure.Processing.MediatorModule.AddMediatorModule(Microsoft.Extensions.DependencyInjection.IServiceCollection, params object[])
  type: Method
  source:
    remote:
      path: src/Project.Infrastructure/Processing/MediatorModule.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: AddMediatorModule
    path: ../src/Project.Infrastructure/Processing/MediatorModule.cs
    startLine: 24
  assemblies:
  - Project.Infrastructure
  namespace: Project.Infrastructure.Processing
  summary: Registers MediatR-like services and command/query processing pipeline.
  example: []
  syntax:
    content: public static IServiceCollection AddMediatorModule(this IServiceCollection services, params object[] args)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection.
    - id: args
      type: System.Object[]
      description: Assemblies or assembly name prefixes to scan for handlers.
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The updated <xref href="Microsoft.Extensions.DependencyInjection.IServiceCollection" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function AddMediatorModule(services As IServiceCollection, ParamArray args As Object()) As IServiceCollection
  overload: Project.Infrastructure.Processing.MediatorModule.AddMediatorModule*
  nameWithType.vb: MediatorModule.AddMediatorModule(IServiceCollection, ParamArray Object())
  fullName.vb: Project.Infrastructure.Processing.MediatorModule.AddMediatorModule(Microsoft.Extensions.DependencyInjection.IServiceCollection, ParamArray Object())
  name.vb: AddMediatorModule(IServiceCollection, ParamArray Object())
- uid: Project.Infrastructure.Processing.MediatorModule.ResolveAssemblies(System.Object[])
  commentId: M:Project.Infrastructure.Processing.MediatorModule.ResolveAssemblies(System.Object[])
  id: ResolveAssemblies(System.Object[])
  parent: Project.Infrastructure.Processing.MediatorModule
  langs:
  - csharp
  - vb
  name: ResolveAssemblies(object[])
  nameWithType: MediatorModule.ResolveAssemblies(object[])
  fullName: Project.Infrastructure.Processing.MediatorModule.ResolveAssemblies(object[])
  type: Method
  source:
    remote:
      path: src/Project.Infrastructure/Processing/MediatorModule.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: ResolveAssemblies
    path: ../src/Project.Infrastructure/Processing/MediatorModule.cs
    startLine: 50
  assemblies:
  - Project.Infrastructure
  namespace: Project.Infrastructure.Processing
  summary: Resolves assemblies from input parameters to be scanned for handler types.
  example: []
  syntax:
    content: public static Assembly[] ResolveAssemblies(object[] args)
    parameters:
    - id: args
      type: System.Object[]
      description: Can be an array of assemblies or string prefixes.
    return:
      type: System.Reflection.Assembly[]
      description: An array of resolved assemblies.
    content.vb: Public Shared Function ResolveAssemblies(args As Object()) As Assembly()
  overload: Project.Infrastructure.Processing.MediatorModule.ResolveAssemblies*
  nameWithType.vb: MediatorModule.ResolveAssemblies(Object())
  fullName.vb: Project.Infrastructure.Processing.MediatorModule.ResolveAssemblies(Object())
  name.vb: ResolveAssemblies(Object())
- uid: Project.Infrastructure.Processing.MediatorModule.RegisterHandlers(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[],System.Type)
  commentId: M:Project.Infrastructure.Processing.MediatorModule.RegisterHandlers(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[],System.Type)
  id: RegisterHandlers(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[],System.Type)
  parent: Project.Infrastructure.Processing.MediatorModule
  langs:
  - csharp
  - vb
  name: RegisterHandlers(IServiceCollection, Assembly[], Type)
  nameWithType: MediatorModule.RegisterHandlers(IServiceCollection, Assembly[], Type)
  fullName: Project.Infrastructure.Processing.MediatorModule.RegisterHandlers(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Reflection.Assembly[], System.Type)
  type: Method
  source:
    remote:
      path: src/Project.Infrastructure/Processing/MediatorModule.cs
      branch: main
      repo: https://github.com/Joaoaalves/dotnet-boilerplate.git
    id: RegisterHandlers
    path: ../src/Project.Infrastructure/Processing/MediatorModule.cs
    startLine: 80
  assemblies:
  - Project.Infrastructure
  namespace: Project.Infrastructure.Processing
  summary: Registers all types implementing a specific handler interface (e.g., IRequestHandler, INotificationHandler).
  example: []
  syntax:
    content: public static void RegisterHandlers(IServiceCollection services, Assembly[] assemblies, Type handlerInterface)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: assemblies
      type: System.Reflection.Assembly[]
    - id: handlerInterface
      type: System.Type
    content.vb: Public Shared Sub RegisterHandlers(services As IServiceCollection, assemblies As Assembly(), handlerInterface As Type)
  overload: Project.Infrastructure.Processing.MediatorModule.RegisterHandlers*
  nameWithType.vb: MediatorModule.RegisterHandlers(IServiceCollection, Assembly(), Type)
  fullName.vb: Project.Infrastructure.Processing.MediatorModule.RegisterHandlers(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Reflection.Assembly(), System.Type)
  name.vb: RegisterHandlers(IServiceCollection, Assembly(), Type)
references:
- uid: Project.Infrastructure.Processing
  commentId: N:Project.Infrastructure.Processing
  href: Project.html
  name: Project.Infrastructure.Processing
  nameWithType: Project.Infrastructure.Processing
  fullName: Project.Infrastructure.Processing
  spec.csharp:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Infrastructure
    name: Infrastructure
    href: Project.Infrastructure.html
  - name: .
  - uid: Project.Infrastructure.Processing
    name: Processing
    href: Project.Infrastructure.Processing.html
  spec.vb:
  - uid: Project
    name: Project
    href: Project.html
  - name: .
  - uid: Project.Infrastructure
    name: Infrastructure
    href: Project.Infrastructure.html
  - name: .
  - uid: Project.Infrastructure.Processing
    name: Processing
    href: Project.Infrastructure.Processing.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Project.Infrastructure.Processing.MediatorModule.AddMediatorModule*
  commentId: Overload:Project.Infrastructure.Processing.MediatorModule.AddMediatorModule
  href: Project.Infrastructure.Processing.MediatorModule.html#Project_Infrastructure_Processing_MediatorModule_AddMediatorModule_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Object___
  name: AddMediatorModule
  nameWithType: MediatorModule.AddMediatorModule
  fullName: Project.Infrastructure.Processing.MediatorModule.AddMediatorModule
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
- uid: Project.Infrastructure.Processing.MediatorModule.ResolveAssemblies*
  commentId: Overload:Project.Infrastructure.Processing.MediatorModule.ResolveAssemblies
  href: Project.Infrastructure.Processing.MediatorModule.html#Project_Infrastructure_Processing_MediatorModule_ResolveAssemblies_System_Object___
  name: ResolveAssemblies
  nameWithType: MediatorModule.ResolveAssemblies
  fullName: Project.Infrastructure.Processing.MediatorModule.ResolveAssemblies
- uid: System.Reflection.Assembly[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: Assembly[]
  nameWithType: Assembly[]
  fullName: System.Reflection.Assembly[]
  nameWithType.vb: Assembly()
  fullName.vb: System.Reflection.Assembly()
  name.vb: Assembly()
  spec.csharp:
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: (
  - name: )
- uid: Project.Infrastructure.Processing.MediatorModule.RegisterHandlers*
  commentId: Overload:Project.Infrastructure.Processing.MediatorModule.RegisterHandlers
  href: Project.Infrastructure.Processing.MediatorModule.html#Project_Infrastructure_Processing_MediatorModule_RegisterHandlers_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Reflection_Assembly___System_Type_
  name: RegisterHandlers
  nameWithType: MediatorModule.RegisterHandlers
  fullName: Project.Infrastructure.Processing.MediatorModule.RegisterHandlers
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
