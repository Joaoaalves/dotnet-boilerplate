# fallback
server {
    listen 80 default_server;
    server_name _;
    return 444;
}

server {
    listen 80;
    server_name api.${DOMAIN};

    location / {
        proxy_pass http://api:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

server {
    listen 80;
    server_name docs.${DOMAIN};

    location / {
        proxy_pass http://docs:80;
    }
}

server {
    listen 80;
    server_name grafana.${DOMAIN};

    location / {
        proxy_pass http://grafana:3000;
        proxy_set_header Host grafana.${DOMAIN};

        proxy_connect_timeout 1s;
        proxy_read_timeout 1s;
        proxy_intercept_errors on;
        error_page 502 503 504 = @fallback;
    }
}

server {
    listen 80;
    server_name kibana.${DOMAIN};

    location / {
        proxy_pass http://kibana:5601;
        proxy_set_header Host kibana.${DOMAIN};

        proxy_connect_timeout 1s;
        proxy_read_timeout 1s;
        proxy_intercept_errors on;
        error_page 502 503 504 = @fallback;
    }
}


location @fallback {
    return 200 "Service temporarily unavailable";
}